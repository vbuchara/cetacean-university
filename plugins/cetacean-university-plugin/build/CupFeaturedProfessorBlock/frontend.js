(()=>{"use strict";var e={643:function(e,r){var t=this&&this.__spreadArray||function(e,r,t){if(t||2===arguments.length)for(var n,a=0,i=r.length;a<i;a++)!n&&a in r||(n||(n=Array.prototype.slice.call(r,0,a)),n[a]=r[a]);return e.concat(n||Array.prototype.slice.call(r))};function n(e){return e}function a(e){return function(){return e}}function i(e,r,t,n,a,i,s,o,u){switch(arguments.length){case 1:return e;case 2:return function(){return r(e.apply(this,arguments))};case 3:return function(){return t(r(e.apply(this,arguments)))};case 4:return function(){return n(t(r(e.apply(this,arguments))))};case 5:return function(){return a(n(t(r(e.apply(this,arguments)))))};case 6:return function(){return i(a(n(t(r(e.apply(this,arguments))))))};case 7:return function(){return s(i(a(n(t(r(e.apply(this,arguments)))))))};case 8:return function(){return o(s(i(a(n(t(r(e.apply(this,arguments))))))))};case 9:return function(){return u(o(s(i(a(n(t(r(e.apply(this,arguments)))))))))}}}function s(e){throw new Error("Called `absurd` function which should be uncallable")}Object.defineProperty(r,"__esModule",{value:!0}),r.dual=r.getEndomorphismMonoid=r.not=r.SK=r.hole=r.pipe=r.untupled=r.tupled=r.absurd=r.decrement=r.increment=r.tuple=r.flow=r.flip=r.constVoid=r.constUndefined=r.constNull=r.constFalse=r.constTrue=r.constant=r.unsafeCoerce=r.identity=r.apply=r.getRing=r.getSemiring=r.getMonoid=r.getSemigroup=r.getBooleanAlgebra=void 0,r.getBooleanAlgebra=function(e){return function(){return{meet:function(r,t){return function(n){return e.meet(r(n),t(n))}},join:function(r,t){return function(n){return e.join(r(n),t(n))}},zero:function(){return e.zero},one:function(){return e.one},implies:function(r,t){return function(n){return e.implies(r(n),t(n))}},not:function(r){return function(t){return e.not(r(t))}}}}},r.getSemigroup=function(e){return function(){return{concat:function(r,t){return function(n){return e.concat(r(n),t(n))}}}}},r.getMonoid=function(e){var t=(0,r.getSemigroup)(e);return function(){return{concat:t().concat,empty:function(){return e.empty}}}},r.getSemiring=function(e){return{add:function(r,t){return function(n){return e.add(r(n),t(n))}},zero:function(){return e.zero},mul:function(r,t){return function(n){return e.mul(r(n),t(n))}},one:function(){return e.one}}},r.getRing=function(e){var t=(0,r.getSemiring)(e);return{add:t.add,mul:t.mul,one:t.one,zero:t.zero,sub:function(r,t){return function(n){return e.sub(r(n),t(n))}}}},r.apply=function(e){return function(r){return r(e)}},r.identity=n,r.unsafeCoerce=n,r.constant=a,r.constTrue=a(!0),r.constFalse=a(!1),r.constNull=a(null),r.constUndefined=a(void 0),r.constVoid=r.constUndefined,r.flip=function(e){return function(){for(var r=[],t=0;t<arguments.length;t++)r[t]=arguments[t];return r.length>1?e(r[1],r[0]):function(t){return e(t)(r[0])}}},r.flow=i,r.tuple=function(){for(var e=[],r=0;r<arguments.length;r++)e[r]=arguments[r];return e},r.increment=function(e){return e+1},r.decrement=function(e){return e-1},r.absurd=s,r.tupled=function(e){return function(r){return e.apply(void 0,r)}},r.untupled=function(e){return function(){for(var r=[],t=0;t<arguments.length;t++)r[t]=arguments[t];return e(r)}},r.pipe=function(e,r,t,n,a,i,s,o,u){switch(arguments.length){case 1:return e;case 2:return r(e);case 3:return t(r(e));case 4:return n(t(r(e)));case 5:return a(n(t(r(e))));case 6:return i(a(n(t(r(e)))));case 7:return s(i(a(n(t(r(e))))));case 8:return o(s(i(a(n(t(r(e)))))));case 9:return u(o(s(i(a(n(t(r(e))))))));default:for(var l=arguments[0],c=1;c<arguments.length;c++)l=arguments[c](l);return l}},r.hole=s,r.SK=function(e,r){return r},r.not=function(e){return function(r){return!e(r)}},r.getEndomorphismMonoid=function(){return{concat:function(e,r){return i(e,r)},empty:n}},r.dual=function(e,r){var n="number"==typeof e?function(r){return r.length>=e}:e;return function(){var e=Array.from(arguments);return n(arguments)?r.apply(this,e):function(n){return r.apply(void 0,t([n],e,!1))}}}},376:function(e,r,t){var n=this&&this.__assign||function(){return n=Object.assign||function(e){for(var r,t=1,n=arguments.length;t<n;t++)for(var a in r=arguments[t])Object.prototype.hasOwnProperty.call(r,a)&&(e[a]=r[a]);return e},n.apply(this,arguments)};Object.defineProperty(r,"__esModule",{value:!0});var a=t(340),i=t(762),s=t(826),o=n(n({},a.namedReferences),{all:a.namedReferences.html5});function u(e,r,t){r.lastIndex=0;var n,a=r.exec(e);if(a){n="";var i=0;do{i!==a.index&&(n+=e.substring(i,a.index));var s=a[0];n+=t(s),i=a.index+s.length}while(a=r.exec(e));i!==e.length&&(n+=e.substring(i))}else n=e;return n}var l={specialChars:/[<>'"&]/g,nonAscii:/[<>'"&\u0080-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/g,nonAsciiPrintable:/[<>'"&\x01-\x08\x11-\x15\x17-\x1F\x7f-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/g,nonAsciiPrintableOnly:/[\x01-\x08\x11-\x15\x17-\x1F\x7f-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/g,extensive:/[\x01-\x0c\x0e-\x1f\x21-\x2c\x2e-\x2f\x3a-\x40\x5b-\x60\x7b-\x7d\x7f-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/g},c={mode:"specialChars",level:"all",numeric:"decimal"};r.encode=function(e,r){var t=void 0===r?c:r,n=t.mode,a=void 0===n?"specialChars":n,i=t.numeric,p=void 0===i?"decimal":i,g=t.level;if(!e)return"";var f=l[a],d=o[void 0===g?"all":g].characters,m="hexadecimal"===p;return u(e,f,(function(e){var r=d[e];if(!r){var t=e.length>1?s.getCodePoint(e,0):e.charCodeAt(0);r=(m?"&#x"+t.toString(16):"&#"+t)+";"}return r}))};var p={scope:"body",level:"all"},g=/&(?:#\d+|#[xX][\da-fA-F]+|[0-9a-zA-Z]+);/g,f=/&(?:#\d+|#[xX][\da-fA-F]+|[0-9a-zA-Z]+)[;=]?/g,d={xml:{strict:g,attribute:f,body:a.bodyRegExps.xml},html4:{strict:g,attribute:f,body:a.bodyRegExps.html4},html5:{strict:g,attribute:f,body:a.bodyRegExps.html5}},m=n(n({},d),{all:d.html5}),h=String.fromCharCode,b=h(65533),y={level:"all"};function v(e,r,t,n){var a=e,o=e[e.length-1];if(t&&"="===o)a=e;else if(n&&";"!==o)a=e;else{var u=r[e];if(u)a=u;else if("&"===e[0]&&"#"===e[1]){var l=e[2],c="x"==l||"X"==l?parseInt(e.substr(3),16):parseInt(e.substr(2));a=c>=1114111?b:c>65535?s.fromCodePoint(c):h(i.numericUnicodeMap[c]||c)}}return a}r.decodeEntity=function(e,r){var t=(void 0===r?y:r).level;return e?v(e,o[void 0===t?"all":t].entities,!1,!1):""},r.decode=function(e,r){var t=void 0===r?p:r,n=t.level,a=void 0===n?"all":n,i=t.scope,s=void 0===i?"xml"===a?"strict":"body":i;if(!e)return"";var l=m[a][s],c=o[a].entities,g="attribute"===s,f="strict"===s;return u(e,l,(function(e){return v(e,c,g,f)}))}},340:(e,r)=>{Object.defineProperty(r,"__esModule",{value:!0}),r.bodyRegExps={xml:/&(?:#\d+|#[xX][\da-fA-F]+|[0-9a-zA-Z]+);?/g,html4:/&notin;|&(?:nbsp|iexcl|cent|pound|curren|yen|brvbar|sect|uml|copy|ordf|laquo|not|shy|reg|macr|deg|plusmn|sup2|sup3|acute|micro|para|middot|cedil|sup1|ordm|raquo|frac14|frac12|frac34|iquest|Agrave|Aacute|Acirc|Atilde|Auml|Aring|AElig|Ccedil|Egrave|Eacute|Ecirc|Euml|Igrave|Iacute|Icirc|Iuml|ETH|Ntilde|Ograve|Oacute|Ocirc|Otilde|Ouml|times|Oslash|Ugrave|Uacute|Ucirc|Uuml|Yacute|THORN|szlig|agrave|aacute|acirc|atilde|auml|aring|aelig|ccedil|egrave|eacute|ecirc|euml|igrave|iacute|icirc|iuml|eth|ntilde|ograve|oacute|ocirc|otilde|ouml|divide|oslash|ugrave|uacute|ucirc|uuml|yacute|thorn|yuml|quot|amp|lt|gt|#\d+|#[xX][\da-fA-F]+|[0-9a-zA-Z]+);?/g,html5:/&centerdot;|&copysr;|&divideontimes;|&gtcc;|&gtcir;|&gtdot;|&gtlPar;|&gtquest;|&gtrapprox;|&gtrarr;|&gtrdot;|&gtreqless;|&gtreqqless;|&gtrless;|&gtrsim;|&ltcc;|&ltcir;|&ltdot;|&lthree;|&ltimes;|&ltlarr;|&ltquest;|&ltrPar;|&ltri;|&ltrie;|&ltrif;|&notin;|&notinE;|&notindot;|&notinva;|&notinvb;|&notinvc;|&notni;|&notniva;|&notnivb;|&notnivc;|&parallel;|&timesb;|&timesbar;|&timesd;|&(?:AElig|AMP|Aacute|Acirc|Agrave|Aring|Atilde|Auml|COPY|Ccedil|ETH|Eacute|Ecirc|Egrave|Euml|GT|Iacute|Icirc|Igrave|Iuml|LT|Ntilde|Oacute|Ocirc|Ograve|Oslash|Otilde|Ouml|QUOT|REG|THORN|Uacute|Ucirc|Ugrave|Uuml|Yacute|aacute|acirc|acute|aelig|agrave|amp|aring|atilde|auml|brvbar|ccedil|cedil|cent|copy|curren|deg|divide|eacute|ecirc|egrave|eth|euml|frac12|frac14|frac34|gt|iacute|icirc|iexcl|igrave|iquest|iuml|laquo|lt|macr|micro|middot|nbsp|not|ntilde|oacute|ocirc|ograve|ordf|ordm|oslash|otilde|ouml|para|plusmn|pound|quot|raquo|reg|sect|shy|sup1|sup2|sup3|szlig|thorn|times|uacute|ucirc|ugrave|uml|uuml|yacute|yen|yuml|#\d+|#[xX][\da-fA-F]+|[0-9a-zA-Z]+);?/g},r.namedReferences={xml:{entities:{"&lt;":"<","&gt;":">","&quot;":'"',"&apos;":"'","&amp;":"&"},characters:{"<":"&lt;",">":"&gt;",'"':"&quot;","'":"&apos;","&":"&amp;"}},html4:{entities:{"&apos;":"'","&nbsp":" ","&nbsp;":" ","&iexcl":"¡","&iexcl;":"¡","&cent":"¢","&cent;":"¢","&pound":"£","&pound;":"£","&curren":"¤","&curren;":"¤","&yen":"¥","&yen;":"¥","&brvbar":"¦","&brvbar;":"¦","&sect":"§","&sect;":"§","&uml":"¨","&uml;":"¨","&copy":"©","&copy;":"©","&ordf":"ª","&ordf;":"ª","&laquo":"«","&laquo;":"«","&not":"¬","&not;":"¬","&shy":"­","&shy;":"­","&reg":"®","&reg;":"®","&macr":"¯","&macr;":"¯","&deg":"°","&deg;":"°","&plusmn":"±","&plusmn;":"±","&sup2":"²","&sup2;":"²","&sup3":"³","&sup3;":"³","&acute":"´","&acute;":"´","&micro":"µ","&micro;":"µ","&para":"¶","&para;":"¶","&middot":"·","&middot;":"·","&cedil":"¸","&cedil;":"¸","&sup1":"¹","&sup1;":"¹","&ordm":"º","&ordm;":"º","&raquo":"»","&raquo;":"»","&frac14":"¼","&frac14;":"¼","&frac12":"½","&frac12;":"½","&frac34":"¾","&frac34;":"¾","&iquest":"¿","&iquest;":"¿","&Agrave":"À","&Agrave;":"À","&Aacute":"Á","&Aacute;":"Á","&Acirc":"Â","&Acirc;":"Â","&Atilde":"Ã","&Atilde;":"Ã","&Auml":"Ä","&Auml;":"Ä","&Aring":"Å","&Aring;":"Å","&AElig":"Æ","&AElig;":"Æ","&Ccedil":"Ç","&Ccedil;":"Ç","&Egrave":"È","&Egrave;":"È","&Eacute":"É","&Eacute;":"É","&Ecirc":"Ê","&Ecirc;":"Ê","&Euml":"Ë","&Euml;":"Ë","&Igrave":"Ì","&Igrave;":"Ì","&Iacute":"Í","&Iacute;":"Í","&Icirc":"Î","&Icirc;":"Î","&Iuml":"Ï","&Iuml;":"Ï","&ETH":"Ð","&ETH;":"Ð","&Ntilde":"Ñ","&Ntilde;":"Ñ","&Ograve":"Ò","&Ograve;":"Ò","&Oacute":"Ó","&Oacute;":"Ó","&Ocirc":"Ô","&Ocirc;":"Ô","&Otilde":"Õ","&Otilde;":"Õ","&Ouml":"Ö","&Ouml;":"Ö","&times":"×","&times;":"×","&Oslash":"Ø","&Oslash;":"Ø","&Ugrave":"Ù","&Ugrave;":"Ù","&Uacute":"Ú","&Uacute;":"Ú","&Ucirc":"Û","&Ucirc;":"Û","&Uuml":"Ü","&Uuml;":"Ü","&Yacute":"Ý","&Yacute;":"Ý","&THORN":"Þ","&THORN;":"Þ","&szlig":"ß","&szlig;":"ß","&agrave":"à","&agrave;":"à","&aacute":"á","&aacute;":"á","&acirc":"â","&acirc;":"â","&atilde":"ã","&atilde;":"ã","&auml":"ä","&auml;":"ä","&aring":"å","&aring;":"å","&aelig":"æ","&aelig;":"æ","&ccedil":"ç","&ccedil;":"ç","&egrave":"è","&egrave;":"è","&eacute":"é","&eacute;":"é","&ecirc":"ê","&ecirc;":"ê","&euml":"ë","&euml;":"ë","&igrave":"ì","&igrave;":"ì","&iacute":"í","&iacute;":"í","&icirc":"î","&icirc;":"î","&iuml":"ï","&iuml;":"ï","&eth":"ð","&eth;":"ð","&ntilde":"ñ","&ntilde;":"ñ","&ograve":"ò","&ograve;":"ò","&oacute":"ó","&oacute;":"ó","&ocirc":"ô","&ocirc;":"ô","&otilde":"õ","&otilde;":"õ","&ouml":"ö","&ouml;":"ö","&divide":"÷","&divide;":"÷","&oslash":"ø","&oslash;":"ø","&ugrave":"ù","&ugrave;":"ù","&uacute":"ú","&uacute;":"ú","&ucirc":"û","&ucirc;":"û","&uuml":"ü","&uuml;":"ü","&yacute":"ý","&yacute;":"ý","&thorn":"þ","&thorn;":"þ","&yuml":"ÿ","&yuml;":"ÿ","&quot":'"',"&quot;":'"',"&amp":"&","&amp;":"&","&lt":"<","&lt;":"<","&gt":">","&gt;":">","&OElig;":"Œ","&oelig;":"œ","&Scaron;":"Š","&scaron;":"š","&Yuml;":"Ÿ","&circ;":"ˆ","&tilde;":"˜","&ensp;":" ","&emsp;":" ","&thinsp;":" ","&zwnj;":"‌","&zwj;":"‍","&lrm;":"‎","&rlm;":"‏","&ndash;":"–","&mdash;":"—","&lsquo;":"‘","&rsquo;":"’","&sbquo;":"‚","&ldquo;":"“","&rdquo;":"”","&bdquo;":"„","&dagger;":"†","&Dagger;":"‡","&permil;":"‰","&lsaquo;":"‹","&rsaquo;":"›","&euro;":"€","&fnof;":"ƒ","&Alpha;":"Α","&Beta;":"Β","&Gamma;":"Γ","&Delta;":"Δ","&Epsilon;":"Ε","&Zeta;":"Ζ","&Eta;":"Η","&Theta;":"Θ","&Iota;":"Ι","&Kappa;":"Κ","&Lambda;":"Λ","&Mu;":"Μ","&Nu;":"Ν","&Xi;":"Ξ","&Omicron;":"Ο","&Pi;":"Π","&Rho;":"Ρ","&Sigma;":"Σ","&Tau;":"Τ","&Upsilon;":"Υ","&Phi;":"Φ","&Chi;":"Χ","&Psi;":"Ψ","&Omega;":"Ω","&alpha;":"α","&beta;":"β","&gamma;":"γ","&delta;":"δ","&epsilon;":"ε","&zeta;":"ζ","&eta;":"η","&theta;":"θ","&iota;":"ι","&kappa;":"κ","&lambda;":"λ","&mu;":"μ","&nu;":"ν","&xi;":"ξ","&omicron;":"ο","&pi;":"π","&rho;":"ρ","&sigmaf;":"ς","&sigma;":"σ","&tau;":"τ","&upsilon;":"υ","&phi;":"φ","&chi;":"χ","&psi;":"ψ","&omega;":"ω","&thetasym;":"ϑ","&upsih;":"ϒ","&piv;":"ϖ","&bull;":"•","&hellip;":"…","&prime;":"′","&Prime;":"″","&oline;":"‾","&frasl;":"⁄","&weierp;":"℘","&image;":"ℑ","&real;":"ℜ","&trade;":"™","&alefsym;":"ℵ","&larr;":"←","&uarr;":"↑","&rarr;":"→","&darr;":"↓","&harr;":"↔","&crarr;":"↵","&lArr;":"⇐","&uArr;":"⇑","&rArr;":"⇒","&dArr;":"⇓","&hArr;":"⇔","&forall;":"∀","&part;":"∂","&exist;":"∃","&empty;":"∅","&nabla;":"∇","&isin;":"∈","&notin;":"∉","&ni;":"∋","&prod;":"∏","&sum;":"∑","&minus;":"−","&lowast;":"∗","&radic;":"√","&prop;":"∝","&infin;":"∞","&ang;":"∠","&and;":"∧","&or;":"∨","&cap;":"∩","&cup;":"∪","&int;":"∫","&there4;":"∴","&sim;":"∼","&cong;":"≅","&asymp;":"≈","&ne;":"≠","&equiv;":"≡","&le;":"≤","&ge;":"≥","&sub;":"⊂","&sup;":"⊃","&nsub;":"⊄","&sube;":"⊆","&supe;":"⊇","&oplus;":"⊕","&otimes;":"⊗","&perp;":"⊥","&sdot;":"⋅","&lceil;":"⌈","&rceil;":"⌉","&lfloor;":"⌊","&rfloor;":"⌋","&lang;":"〈","&rang;":"〉","&loz;":"◊","&spades;":"♠","&clubs;":"♣","&hearts;":"♥","&diams;":"♦"},characters:{"'":"&apos;"," ":"&nbsp;","¡":"&iexcl;","¢":"&cent;","£":"&pound;","¤":"&curren;","¥":"&yen;","¦":"&brvbar;","§":"&sect;","¨":"&uml;","©":"&copy;",ª:"&ordf;","«":"&laquo;","¬":"&not;","­":"&shy;","®":"&reg;","¯":"&macr;","°":"&deg;","±":"&plusmn;","²":"&sup2;","³":"&sup3;","´":"&acute;",µ:"&micro;","¶":"&para;","·":"&middot;","¸":"&cedil;","¹":"&sup1;",º:"&ordm;","»":"&raquo;","¼":"&frac14;","½":"&frac12;","¾":"&frac34;","¿":"&iquest;",À:"&Agrave;",Á:"&Aacute;",Â:"&Acirc;",Ã:"&Atilde;",Ä:"&Auml;",Å:"&Aring;",Æ:"&AElig;",Ç:"&Ccedil;",È:"&Egrave;",É:"&Eacute;",Ê:"&Ecirc;",Ë:"&Euml;",Ì:"&Igrave;",Í:"&Iacute;",Î:"&Icirc;",Ï:"&Iuml;",Ð:"&ETH;",Ñ:"&Ntilde;",Ò:"&Ograve;",Ó:"&Oacute;",Ô:"&Ocirc;",Õ:"&Otilde;",Ö:"&Ouml;","×":"&times;",Ø:"&Oslash;",Ù:"&Ugrave;",Ú:"&Uacute;",Û:"&Ucirc;",Ü:"&Uuml;",Ý:"&Yacute;",Þ:"&THORN;",ß:"&szlig;",à:"&agrave;",á:"&aacute;",â:"&acirc;",ã:"&atilde;",ä:"&auml;",å:"&aring;",æ:"&aelig;",ç:"&ccedil;",è:"&egrave;",é:"&eacute;",ê:"&ecirc;",ë:"&euml;",ì:"&igrave;",í:"&iacute;",î:"&icirc;",ï:"&iuml;",ð:"&eth;",ñ:"&ntilde;",ò:"&ograve;",ó:"&oacute;",ô:"&ocirc;",õ:"&otilde;",ö:"&ouml;","÷":"&divide;",ø:"&oslash;",ù:"&ugrave;",ú:"&uacute;",û:"&ucirc;",ü:"&uuml;",ý:"&yacute;",þ:"&thorn;",ÿ:"&yuml;",'"':"&quot;","&":"&amp;","<":"&lt;",">":"&gt;",Œ:"&OElig;",œ:"&oelig;",Š:"&Scaron;",š:"&scaron;",Ÿ:"&Yuml;",ˆ:"&circ;","˜":"&tilde;"," ":"&ensp;"," ":"&emsp;"," ":"&thinsp;","‌":"&zwnj;","‍":"&zwj;","‎":"&lrm;","‏":"&rlm;","–":"&ndash;","—":"&mdash;","‘":"&lsquo;","’":"&rsquo;","‚":"&sbquo;","“":"&ldquo;","”":"&rdquo;","„":"&bdquo;","†":"&dagger;","‡":"&Dagger;","‰":"&permil;","‹":"&lsaquo;","›":"&rsaquo;","€":"&euro;",ƒ:"&fnof;",Α:"&Alpha;",Β:"&Beta;",Γ:"&Gamma;",Δ:"&Delta;",Ε:"&Epsilon;",Ζ:"&Zeta;",Η:"&Eta;",Θ:"&Theta;",Ι:"&Iota;",Κ:"&Kappa;",Λ:"&Lambda;",Μ:"&Mu;",Ν:"&Nu;",Ξ:"&Xi;",Ο:"&Omicron;",Π:"&Pi;",Ρ:"&Rho;",Σ:"&Sigma;",Τ:"&Tau;",Υ:"&Upsilon;",Φ:"&Phi;",Χ:"&Chi;",Ψ:"&Psi;",Ω:"&Omega;",α:"&alpha;",β:"&beta;",γ:"&gamma;",δ:"&delta;",ε:"&epsilon;",ζ:"&zeta;",η:"&eta;",θ:"&theta;",ι:"&iota;",κ:"&kappa;",λ:"&lambda;",μ:"&mu;",ν:"&nu;",ξ:"&xi;",ο:"&omicron;",π:"&pi;",ρ:"&rho;",ς:"&sigmaf;",σ:"&sigma;",τ:"&tau;",υ:"&upsilon;",φ:"&phi;",χ:"&chi;",ψ:"&psi;",ω:"&omega;",ϑ:"&thetasym;",ϒ:"&upsih;",ϖ:"&piv;","•":"&bull;","…":"&hellip;","′":"&prime;","″":"&Prime;","‾":"&oline;","⁄":"&frasl;",℘:"&weierp;",ℑ:"&image;",ℜ:"&real;","™":"&trade;",ℵ:"&alefsym;","←":"&larr;","↑":"&uarr;","→":"&rarr;","↓":"&darr;","↔":"&harr;","↵":"&crarr;","⇐":"&lArr;","⇑":"&uArr;","⇒":"&rArr;","⇓":"&dArr;","⇔":"&hArr;","∀":"&forall;","∂":"&part;","∃":"&exist;","∅":"&empty;","∇":"&nabla;","∈":"&isin;","∉":"&notin;","∋":"&ni;","∏":"&prod;","∑":"&sum;","−":"&minus;","∗":"&lowast;","√":"&radic;","∝":"&prop;","∞":"&infin;","∠":"&ang;","∧":"&and;","∨":"&or;","∩":"&cap;","∪":"&cup;","∫":"&int;","∴":"&there4;","∼":"&sim;","≅":"&cong;","≈":"&asymp;","≠":"&ne;","≡":"&equiv;","≤":"&le;","≥":"&ge;","⊂":"&sub;","⊃":"&sup;","⊄":"&nsub;","⊆":"&sube;","⊇":"&supe;","⊕":"&oplus;","⊗":"&otimes;","⊥":"&perp;","⋅":"&sdot;","⌈":"&lceil;","⌉":"&rceil;","⌊":"&lfloor;","⌋":"&rfloor;","〈":"&lang;","〉":"&rang;","◊":"&loz;","♠":"&spades;","♣":"&clubs;","♥":"&hearts;","♦":"&diams;"}},html5:{entities:{"&AElig":"Æ","&AElig;":"Æ","&AMP":"&","&AMP;":"&","&Aacute":"Á","&Aacute;":"Á","&Abreve;":"Ă","&Acirc":"Â","&Acirc;":"Â","&Acy;":"А","&Afr;":"𝔄","&Agrave":"À","&Agrave;":"À","&Alpha;":"Α","&Amacr;":"Ā","&And;":"⩓","&Aogon;":"Ą","&Aopf;":"𝔸","&ApplyFunction;":"⁡","&Aring":"Å","&Aring;":"Å","&Ascr;":"𝒜","&Assign;":"≔","&Atilde":"Ã","&Atilde;":"Ã","&Auml":"Ä","&Auml;":"Ä","&Backslash;":"∖","&Barv;":"⫧","&Barwed;":"⌆","&Bcy;":"Б","&Because;":"∵","&Bernoullis;":"ℬ","&Beta;":"Β","&Bfr;":"𝔅","&Bopf;":"𝔹","&Breve;":"˘","&Bscr;":"ℬ","&Bumpeq;":"≎","&CHcy;":"Ч","&COPY":"©","&COPY;":"©","&Cacute;":"Ć","&Cap;":"⋒","&CapitalDifferentialD;":"ⅅ","&Cayleys;":"ℭ","&Ccaron;":"Č","&Ccedil":"Ç","&Ccedil;":"Ç","&Ccirc;":"Ĉ","&Cconint;":"∰","&Cdot;":"Ċ","&Cedilla;":"¸","&CenterDot;":"·","&Cfr;":"ℭ","&Chi;":"Χ","&CircleDot;":"⊙","&CircleMinus;":"⊖","&CirclePlus;":"⊕","&CircleTimes;":"⊗","&ClockwiseContourIntegral;":"∲","&CloseCurlyDoubleQuote;":"”","&CloseCurlyQuote;":"’","&Colon;":"∷","&Colone;":"⩴","&Congruent;":"≡","&Conint;":"∯","&ContourIntegral;":"∮","&Copf;":"ℂ","&Coproduct;":"∐","&CounterClockwiseContourIntegral;":"∳","&Cross;":"⨯","&Cscr;":"𝒞","&Cup;":"⋓","&CupCap;":"≍","&DD;":"ⅅ","&DDotrahd;":"⤑","&DJcy;":"Ђ","&DScy;":"Ѕ","&DZcy;":"Џ","&Dagger;":"‡","&Darr;":"↡","&Dashv;":"⫤","&Dcaron;":"Ď","&Dcy;":"Д","&Del;":"∇","&Delta;":"Δ","&Dfr;":"𝔇","&DiacriticalAcute;":"´","&DiacriticalDot;":"˙","&DiacriticalDoubleAcute;":"˝","&DiacriticalGrave;":"`","&DiacriticalTilde;":"˜","&Diamond;":"⋄","&DifferentialD;":"ⅆ","&Dopf;":"𝔻","&Dot;":"¨","&DotDot;":"⃜","&DotEqual;":"≐","&DoubleContourIntegral;":"∯","&DoubleDot;":"¨","&DoubleDownArrow;":"⇓","&DoubleLeftArrow;":"⇐","&DoubleLeftRightArrow;":"⇔","&DoubleLeftTee;":"⫤","&DoubleLongLeftArrow;":"⟸","&DoubleLongLeftRightArrow;":"⟺","&DoubleLongRightArrow;":"⟹","&DoubleRightArrow;":"⇒","&DoubleRightTee;":"⊨","&DoubleUpArrow;":"⇑","&DoubleUpDownArrow;":"⇕","&DoubleVerticalBar;":"∥","&DownArrow;":"↓","&DownArrowBar;":"⤓","&DownArrowUpArrow;":"⇵","&DownBreve;":"̑","&DownLeftRightVector;":"⥐","&DownLeftTeeVector;":"⥞","&DownLeftVector;":"↽","&DownLeftVectorBar;":"⥖","&DownRightTeeVector;":"⥟","&DownRightVector;":"⇁","&DownRightVectorBar;":"⥗","&DownTee;":"⊤","&DownTeeArrow;":"↧","&Downarrow;":"⇓","&Dscr;":"𝒟","&Dstrok;":"Đ","&ENG;":"Ŋ","&ETH":"Ð","&ETH;":"Ð","&Eacute":"É","&Eacute;":"É","&Ecaron;":"Ě","&Ecirc":"Ê","&Ecirc;":"Ê","&Ecy;":"Э","&Edot;":"Ė","&Efr;":"𝔈","&Egrave":"È","&Egrave;":"È","&Element;":"∈","&Emacr;":"Ē","&EmptySmallSquare;":"◻","&EmptyVerySmallSquare;":"▫","&Eogon;":"Ę","&Eopf;":"𝔼","&Epsilon;":"Ε","&Equal;":"⩵","&EqualTilde;":"≂","&Equilibrium;":"⇌","&Escr;":"ℰ","&Esim;":"⩳","&Eta;":"Η","&Euml":"Ë","&Euml;":"Ë","&Exists;":"∃","&ExponentialE;":"ⅇ","&Fcy;":"Ф","&Ffr;":"𝔉","&FilledSmallSquare;":"◼","&FilledVerySmallSquare;":"▪","&Fopf;":"𝔽","&ForAll;":"∀","&Fouriertrf;":"ℱ","&Fscr;":"ℱ","&GJcy;":"Ѓ","&GT":">","&GT;":">","&Gamma;":"Γ","&Gammad;":"Ϝ","&Gbreve;":"Ğ","&Gcedil;":"Ģ","&Gcirc;":"Ĝ","&Gcy;":"Г","&Gdot;":"Ġ","&Gfr;":"𝔊","&Gg;":"⋙","&Gopf;":"𝔾","&GreaterEqual;":"≥","&GreaterEqualLess;":"⋛","&GreaterFullEqual;":"≧","&GreaterGreater;":"⪢","&GreaterLess;":"≷","&GreaterSlantEqual;":"⩾","&GreaterTilde;":"≳","&Gscr;":"𝒢","&Gt;":"≫","&HARDcy;":"Ъ","&Hacek;":"ˇ","&Hat;":"^","&Hcirc;":"Ĥ","&Hfr;":"ℌ","&HilbertSpace;":"ℋ","&Hopf;":"ℍ","&HorizontalLine;":"─","&Hscr;":"ℋ","&Hstrok;":"Ħ","&HumpDownHump;":"≎","&HumpEqual;":"≏","&IEcy;":"Е","&IJlig;":"Ĳ","&IOcy;":"Ё","&Iacute":"Í","&Iacute;":"Í","&Icirc":"Î","&Icirc;":"Î","&Icy;":"И","&Idot;":"İ","&Ifr;":"ℑ","&Igrave":"Ì","&Igrave;":"Ì","&Im;":"ℑ","&Imacr;":"Ī","&ImaginaryI;":"ⅈ","&Implies;":"⇒","&Int;":"∬","&Integral;":"∫","&Intersection;":"⋂","&InvisibleComma;":"⁣","&InvisibleTimes;":"⁢","&Iogon;":"Į","&Iopf;":"𝕀","&Iota;":"Ι","&Iscr;":"ℐ","&Itilde;":"Ĩ","&Iukcy;":"І","&Iuml":"Ï","&Iuml;":"Ï","&Jcirc;":"Ĵ","&Jcy;":"Й","&Jfr;":"𝔍","&Jopf;":"𝕁","&Jscr;":"𝒥","&Jsercy;":"Ј","&Jukcy;":"Є","&KHcy;":"Х","&KJcy;":"Ќ","&Kappa;":"Κ","&Kcedil;":"Ķ","&Kcy;":"К","&Kfr;":"𝔎","&Kopf;":"𝕂","&Kscr;":"𝒦","&LJcy;":"Љ","&LT":"<","&LT;":"<","&Lacute;":"Ĺ","&Lambda;":"Λ","&Lang;":"⟪","&Laplacetrf;":"ℒ","&Larr;":"↞","&Lcaron;":"Ľ","&Lcedil;":"Ļ","&Lcy;":"Л","&LeftAngleBracket;":"⟨","&LeftArrow;":"←","&LeftArrowBar;":"⇤","&LeftArrowRightArrow;":"⇆","&LeftCeiling;":"⌈","&LeftDoubleBracket;":"⟦","&LeftDownTeeVector;":"⥡","&LeftDownVector;":"⇃","&LeftDownVectorBar;":"⥙","&LeftFloor;":"⌊","&LeftRightArrow;":"↔","&LeftRightVector;":"⥎","&LeftTee;":"⊣","&LeftTeeArrow;":"↤","&LeftTeeVector;":"⥚","&LeftTriangle;":"⊲","&LeftTriangleBar;":"⧏","&LeftTriangleEqual;":"⊴","&LeftUpDownVector;":"⥑","&LeftUpTeeVector;":"⥠","&LeftUpVector;":"↿","&LeftUpVectorBar;":"⥘","&LeftVector;":"↼","&LeftVectorBar;":"⥒","&Leftarrow;":"⇐","&Leftrightarrow;":"⇔","&LessEqualGreater;":"⋚","&LessFullEqual;":"≦","&LessGreater;":"≶","&LessLess;":"⪡","&LessSlantEqual;":"⩽","&LessTilde;":"≲","&Lfr;":"𝔏","&Ll;":"⋘","&Lleftarrow;":"⇚","&Lmidot;":"Ŀ","&LongLeftArrow;":"⟵","&LongLeftRightArrow;":"⟷","&LongRightArrow;":"⟶","&Longleftarrow;":"⟸","&Longleftrightarrow;":"⟺","&Longrightarrow;":"⟹","&Lopf;":"𝕃","&LowerLeftArrow;":"↙","&LowerRightArrow;":"↘","&Lscr;":"ℒ","&Lsh;":"↰","&Lstrok;":"Ł","&Lt;":"≪","&Map;":"⤅","&Mcy;":"М","&MediumSpace;":" ","&Mellintrf;":"ℳ","&Mfr;":"𝔐","&MinusPlus;":"∓","&Mopf;":"𝕄","&Mscr;":"ℳ","&Mu;":"Μ","&NJcy;":"Њ","&Nacute;":"Ń","&Ncaron;":"Ň","&Ncedil;":"Ņ","&Ncy;":"Н","&NegativeMediumSpace;":"​","&NegativeThickSpace;":"​","&NegativeThinSpace;":"​","&NegativeVeryThinSpace;":"​","&NestedGreaterGreater;":"≫","&NestedLessLess;":"≪","&NewLine;":"\n","&Nfr;":"𝔑","&NoBreak;":"⁠","&NonBreakingSpace;":" ","&Nopf;":"ℕ","&Not;":"⫬","&NotCongruent;":"≢","&NotCupCap;":"≭","&NotDoubleVerticalBar;":"∦","&NotElement;":"∉","&NotEqual;":"≠","&NotEqualTilde;":"≂̸","&NotExists;":"∄","&NotGreater;":"≯","&NotGreaterEqual;":"≱","&NotGreaterFullEqual;":"≧̸","&NotGreaterGreater;":"≫̸","&NotGreaterLess;":"≹","&NotGreaterSlantEqual;":"⩾̸","&NotGreaterTilde;":"≵","&NotHumpDownHump;":"≎̸","&NotHumpEqual;":"≏̸","&NotLeftTriangle;":"⋪","&NotLeftTriangleBar;":"⧏̸","&NotLeftTriangleEqual;":"⋬","&NotLess;":"≮","&NotLessEqual;":"≰","&NotLessGreater;":"≸","&NotLessLess;":"≪̸","&NotLessSlantEqual;":"⩽̸","&NotLessTilde;":"≴","&NotNestedGreaterGreater;":"⪢̸","&NotNestedLessLess;":"⪡̸","&NotPrecedes;":"⊀","&NotPrecedesEqual;":"⪯̸","&NotPrecedesSlantEqual;":"⋠","&NotReverseElement;":"∌","&NotRightTriangle;":"⋫","&NotRightTriangleBar;":"⧐̸","&NotRightTriangleEqual;":"⋭","&NotSquareSubset;":"⊏̸","&NotSquareSubsetEqual;":"⋢","&NotSquareSuperset;":"⊐̸","&NotSquareSupersetEqual;":"⋣","&NotSubset;":"⊂⃒","&NotSubsetEqual;":"⊈","&NotSucceeds;":"⊁","&NotSucceedsEqual;":"⪰̸","&NotSucceedsSlantEqual;":"⋡","&NotSucceedsTilde;":"≿̸","&NotSuperset;":"⊃⃒","&NotSupersetEqual;":"⊉","&NotTilde;":"≁","&NotTildeEqual;":"≄","&NotTildeFullEqual;":"≇","&NotTildeTilde;":"≉","&NotVerticalBar;":"∤","&Nscr;":"𝒩","&Ntilde":"Ñ","&Ntilde;":"Ñ","&Nu;":"Ν","&OElig;":"Œ","&Oacute":"Ó","&Oacute;":"Ó","&Ocirc":"Ô","&Ocirc;":"Ô","&Ocy;":"О","&Odblac;":"Ő","&Ofr;":"𝔒","&Ograve":"Ò","&Ograve;":"Ò","&Omacr;":"Ō","&Omega;":"Ω","&Omicron;":"Ο","&Oopf;":"𝕆","&OpenCurlyDoubleQuote;":"“","&OpenCurlyQuote;":"‘","&Or;":"⩔","&Oscr;":"𝒪","&Oslash":"Ø","&Oslash;":"Ø","&Otilde":"Õ","&Otilde;":"Õ","&Otimes;":"⨷","&Ouml":"Ö","&Ouml;":"Ö","&OverBar;":"‾","&OverBrace;":"⏞","&OverBracket;":"⎴","&OverParenthesis;":"⏜","&PartialD;":"∂","&Pcy;":"П","&Pfr;":"𝔓","&Phi;":"Φ","&Pi;":"Π","&PlusMinus;":"±","&Poincareplane;":"ℌ","&Popf;":"ℙ","&Pr;":"⪻","&Precedes;":"≺","&PrecedesEqual;":"⪯","&PrecedesSlantEqual;":"≼","&PrecedesTilde;":"≾","&Prime;":"″","&Product;":"∏","&Proportion;":"∷","&Proportional;":"∝","&Pscr;":"𝒫","&Psi;":"Ψ","&QUOT":'"',"&QUOT;":'"',"&Qfr;":"𝔔","&Qopf;":"ℚ","&Qscr;":"𝒬","&RBarr;":"⤐","&REG":"®","&REG;":"®","&Racute;":"Ŕ","&Rang;":"⟫","&Rarr;":"↠","&Rarrtl;":"⤖","&Rcaron;":"Ř","&Rcedil;":"Ŗ","&Rcy;":"Р","&Re;":"ℜ","&ReverseElement;":"∋","&ReverseEquilibrium;":"⇋","&ReverseUpEquilibrium;":"⥯","&Rfr;":"ℜ","&Rho;":"Ρ","&RightAngleBracket;":"⟩","&RightArrow;":"→","&RightArrowBar;":"⇥","&RightArrowLeftArrow;":"⇄","&RightCeiling;":"⌉","&RightDoubleBracket;":"⟧","&RightDownTeeVector;":"⥝","&RightDownVector;":"⇂","&RightDownVectorBar;":"⥕","&RightFloor;":"⌋","&RightTee;":"⊢","&RightTeeArrow;":"↦","&RightTeeVector;":"⥛","&RightTriangle;":"⊳","&RightTriangleBar;":"⧐","&RightTriangleEqual;":"⊵","&RightUpDownVector;":"⥏","&RightUpTeeVector;":"⥜","&RightUpVector;":"↾","&RightUpVectorBar;":"⥔","&RightVector;":"⇀","&RightVectorBar;":"⥓","&Rightarrow;":"⇒","&Ropf;":"ℝ","&RoundImplies;":"⥰","&Rrightarrow;":"⇛","&Rscr;":"ℛ","&Rsh;":"↱","&RuleDelayed;":"⧴","&SHCHcy;":"Щ","&SHcy;":"Ш","&SOFTcy;":"Ь","&Sacute;":"Ś","&Sc;":"⪼","&Scaron;":"Š","&Scedil;":"Ş","&Scirc;":"Ŝ","&Scy;":"С","&Sfr;":"𝔖","&ShortDownArrow;":"↓","&ShortLeftArrow;":"←","&ShortRightArrow;":"→","&ShortUpArrow;":"↑","&Sigma;":"Σ","&SmallCircle;":"∘","&Sopf;":"𝕊","&Sqrt;":"√","&Square;":"□","&SquareIntersection;":"⊓","&SquareSubset;":"⊏","&SquareSubsetEqual;":"⊑","&SquareSuperset;":"⊐","&SquareSupersetEqual;":"⊒","&SquareUnion;":"⊔","&Sscr;":"𝒮","&Star;":"⋆","&Sub;":"⋐","&Subset;":"⋐","&SubsetEqual;":"⊆","&Succeeds;":"≻","&SucceedsEqual;":"⪰","&SucceedsSlantEqual;":"≽","&SucceedsTilde;":"≿","&SuchThat;":"∋","&Sum;":"∑","&Sup;":"⋑","&Superset;":"⊃","&SupersetEqual;":"⊇","&Supset;":"⋑","&THORN":"Þ","&THORN;":"Þ","&TRADE;":"™","&TSHcy;":"Ћ","&TScy;":"Ц","&Tab;":"\t","&Tau;":"Τ","&Tcaron;":"Ť","&Tcedil;":"Ţ","&Tcy;":"Т","&Tfr;":"𝔗","&Therefore;":"∴","&Theta;":"Θ","&ThickSpace;":"  ","&ThinSpace;":" ","&Tilde;":"∼","&TildeEqual;":"≃","&TildeFullEqual;":"≅","&TildeTilde;":"≈","&Topf;":"𝕋","&TripleDot;":"⃛","&Tscr;":"𝒯","&Tstrok;":"Ŧ","&Uacute":"Ú","&Uacute;":"Ú","&Uarr;":"↟","&Uarrocir;":"⥉","&Ubrcy;":"Ў","&Ubreve;":"Ŭ","&Ucirc":"Û","&Ucirc;":"Û","&Ucy;":"У","&Udblac;":"Ű","&Ufr;":"𝔘","&Ugrave":"Ù","&Ugrave;":"Ù","&Umacr;":"Ū","&UnderBar;":"_","&UnderBrace;":"⏟","&UnderBracket;":"⎵","&UnderParenthesis;":"⏝","&Union;":"⋃","&UnionPlus;":"⊎","&Uogon;":"Ų","&Uopf;":"𝕌","&UpArrow;":"↑","&UpArrowBar;":"⤒","&UpArrowDownArrow;":"⇅","&UpDownArrow;":"↕","&UpEquilibrium;":"⥮","&UpTee;":"⊥","&UpTeeArrow;":"↥","&Uparrow;":"⇑","&Updownarrow;":"⇕","&UpperLeftArrow;":"↖","&UpperRightArrow;":"↗","&Upsi;":"ϒ","&Upsilon;":"Υ","&Uring;":"Ů","&Uscr;":"𝒰","&Utilde;":"Ũ","&Uuml":"Ü","&Uuml;":"Ü","&VDash;":"⊫","&Vbar;":"⫫","&Vcy;":"В","&Vdash;":"⊩","&Vdashl;":"⫦","&Vee;":"⋁","&Verbar;":"‖","&Vert;":"‖","&VerticalBar;":"∣","&VerticalLine;":"|","&VerticalSeparator;":"❘","&VerticalTilde;":"≀","&VeryThinSpace;":" ","&Vfr;":"𝔙","&Vopf;":"𝕍","&Vscr;":"𝒱","&Vvdash;":"⊪","&Wcirc;":"Ŵ","&Wedge;":"⋀","&Wfr;":"𝔚","&Wopf;":"𝕎","&Wscr;":"𝒲","&Xfr;":"𝔛","&Xi;":"Ξ","&Xopf;":"𝕏","&Xscr;":"𝒳","&YAcy;":"Я","&YIcy;":"Ї","&YUcy;":"Ю","&Yacute":"Ý","&Yacute;":"Ý","&Ycirc;":"Ŷ","&Ycy;":"Ы","&Yfr;":"𝔜","&Yopf;":"𝕐","&Yscr;":"𝒴","&Yuml;":"Ÿ","&ZHcy;":"Ж","&Zacute;":"Ź","&Zcaron;":"Ž","&Zcy;":"З","&Zdot;":"Ż","&ZeroWidthSpace;":"​","&Zeta;":"Ζ","&Zfr;":"ℨ","&Zopf;":"ℤ","&Zscr;":"𝒵","&aacute":"á","&aacute;":"á","&abreve;":"ă","&ac;":"∾","&acE;":"∾̳","&acd;":"∿","&acirc":"â","&acirc;":"â","&acute":"´","&acute;":"´","&acy;":"а","&aelig":"æ","&aelig;":"æ","&af;":"⁡","&afr;":"𝔞","&agrave":"à","&agrave;":"à","&alefsym;":"ℵ","&aleph;":"ℵ","&alpha;":"α","&amacr;":"ā","&amalg;":"⨿","&amp":"&","&amp;":"&","&and;":"∧","&andand;":"⩕","&andd;":"⩜","&andslope;":"⩘","&andv;":"⩚","&ang;":"∠","&ange;":"⦤","&angle;":"∠","&angmsd;":"∡","&angmsdaa;":"⦨","&angmsdab;":"⦩","&angmsdac;":"⦪","&angmsdad;":"⦫","&angmsdae;":"⦬","&angmsdaf;":"⦭","&angmsdag;":"⦮","&angmsdah;":"⦯","&angrt;":"∟","&angrtvb;":"⊾","&angrtvbd;":"⦝","&angsph;":"∢","&angst;":"Å","&angzarr;":"⍼","&aogon;":"ą","&aopf;":"𝕒","&ap;":"≈","&apE;":"⩰","&apacir;":"⩯","&ape;":"≊","&apid;":"≋","&apos;":"'","&approx;":"≈","&approxeq;":"≊","&aring":"å","&aring;":"å","&ascr;":"𝒶","&ast;":"*","&asymp;":"≈","&asympeq;":"≍","&atilde":"ã","&atilde;":"ã","&auml":"ä","&auml;":"ä","&awconint;":"∳","&awint;":"⨑","&bNot;":"⫭","&backcong;":"≌","&backepsilon;":"϶","&backprime;":"‵","&backsim;":"∽","&backsimeq;":"⋍","&barvee;":"⊽","&barwed;":"⌅","&barwedge;":"⌅","&bbrk;":"⎵","&bbrktbrk;":"⎶","&bcong;":"≌","&bcy;":"б","&bdquo;":"„","&becaus;":"∵","&because;":"∵","&bemptyv;":"⦰","&bepsi;":"϶","&bernou;":"ℬ","&beta;":"β","&beth;":"ℶ","&between;":"≬","&bfr;":"𝔟","&bigcap;":"⋂","&bigcirc;":"◯","&bigcup;":"⋃","&bigodot;":"⨀","&bigoplus;":"⨁","&bigotimes;":"⨂","&bigsqcup;":"⨆","&bigstar;":"★","&bigtriangledown;":"▽","&bigtriangleup;":"△","&biguplus;":"⨄","&bigvee;":"⋁","&bigwedge;":"⋀","&bkarow;":"⤍","&blacklozenge;":"⧫","&blacksquare;":"▪","&blacktriangle;":"▴","&blacktriangledown;":"▾","&blacktriangleleft;":"◂","&blacktriangleright;":"▸","&blank;":"␣","&blk12;":"▒","&blk14;":"░","&blk34;":"▓","&block;":"█","&bne;":"=⃥","&bnequiv;":"≡⃥","&bnot;":"⌐","&bopf;":"𝕓","&bot;":"⊥","&bottom;":"⊥","&bowtie;":"⋈","&boxDL;":"╗","&boxDR;":"╔","&boxDl;":"╖","&boxDr;":"╓","&boxH;":"═","&boxHD;":"╦","&boxHU;":"╩","&boxHd;":"╤","&boxHu;":"╧","&boxUL;":"╝","&boxUR;":"╚","&boxUl;":"╜","&boxUr;":"╙","&boxV;":"║","&boxVH;":"╬","&boxVL;":"╣","&boxVR;":"╠","&boxVh;":"╫","&boxVl;":"╢","&boxVr;":"╟","&boxbox;":"⧉","&boxdL;":"╕","&boxdR;":"╒","&boxdl;":"┐","&boxdr;":"┌","&boxh;":"─","&boxhD;":"╥","&boxhU;":"╨","&boxhd;":"┬","&boxhu;":"┴","&boxminus;":"⊟","&boxplus;":"⊞","&boxtimes;":"⊠","&boxuL;":"╛","&boxuR;":"╘","&boxul;":"┘","&boxur;":"└","&boxv;":"│","&boxvH;":"╪","&boxvL;":"╡","&boxvR;":"╞","&boxvh;":"┼","&boxvl;":"┤","&boxvr;":"├","&bprime;":"‵","&breve;":"˘","&brvbar":"¦","&brvbar;":"¦","&bscr;":"𝒷","&bsemi;":"⁏","&bsim;":"∽","&bsime;":"⋍","&bsol;":"\\","&bsolb;":"⧅","&bsolhsub;":"⟈","&bull;":"•","&bullet;":"•","&bump;":"≎","&bumpE;":"⪮","&bumpe;":"≏","&bumpeq;":"≏","&cacute;":"ć","&cap;":"∩","&capand;":"⩄","&capbrcup;":"⩉","&capcap;":"⩋","&capcup;":"⩇","&capdot;":"⩀","&caps;":"∩︀","&caret;":"⁁","&caron;":"ˇ","&ccaps;":"⩍","&ccaron;":"č","&ccedil":"ç","&ccedil;":"ç","&ccirc;":"ĉ","&ccups;":"⩌","&ccupssm;":"⩐","&cdot;":"ċ","&cedil":"¸","&cedil;":"¸","&cemptyv;":"⦲","&cent":"¢","&cent;":"¢","&centerdot;":"·","&cfr;":"𝔠","&chcy;":"ч","&check;":"✓","&checkmark;":"✓","&chi;":"χ","&cir;":"○","&cirE;":"⧃","&circ;":"ˆ","&circeq;":"≗","&circlearrowleft;":"↺","&circlearrowright;":"↻","&circledR;":"®","&circledS;":"Ⓢ","&circledast;":"⊛","&circledcirc;":"⊚","&circleddash;":"⊝","&cire;":"≗","&cirfnint;":"⨐","&cirmid;":"⫯","&cirscir;":"⧂","&clubs;":"♣","&clubsuit;":"♣","&colon;":":","&colone;":"≔","&coloneq;":"≔","&comma;":",","&commat;":"@","&comp;":"∁","&compfn;":"∘","&complement;":"∁","&complexes;":"ℂ","&cong;":"≅","&congdot;":"⩭","&conint;":"∮","&copf;":"𝕔","&coprod;":"∐","&copy":"©","&copy;":"©","&copysr;":"℗","&crarr;":"↵","&cross;":"✗","&cscr;":"𝒸","&csub;":"⫏","&csube;":"⫑","&csup;":"⫐","&csupe;":"⫒","&ctdot;":"⋯","&cudarrl;":"⤸","&cudarrr;":"⤵","&cuepr;":"⋞","&cuesc;":"⋟","&cularr;":"↶","&cularrp;":"⤽","&cup;":"∪","&cupbrcap;":"⩈","&cupcap;":"⩆","&cupcup;":"⩊","&cupdot;":"⊍","&cupor;":"⩅","&cups;":"∪︀","&curarr;":"↷","&curarrm;":"⤼","&curlyeqprec;":"⋞","&curlyeqsucc;":"⋟","&curlyvee;":"⋎","&curlywedge;":"⋏","&curren":"¤","&curren;":"¤","&curvearrowleft;":"↶","&curvearrowright;":"↷","&cuvee;":"⋎","&cuwed;":"⋏","&cwconint;":"∲","&cwint;":"∱","&cylcty;":"⌭","&dArr;":"⇓","&dHar;":"⥥","&dagger;":"†","&daleth;":"ℸ","&darr;":"↓","&dash;":"‐","&dashv;":"⊣","&dbkarow;":"⤏","&dblac;":"˝","&dcaron;":"ď","&dcy;":"д","&dd;":"ⅆ","&ddagger;":"‡","&ddarr;":"⇊","&ddotseq;":"⩷","&deg":"°","&deg;":"°","&delta;":"δ","&demptyv;":"⦱","&dfisht;":"⥿","&dfr;":"𝔡","&dharl;":"⇃","&dharr;":"⇂","&diam;":"⋄","&diamond;":"⋄","&diamondsuit;":"♦","&diams;":"♦","&die;":"¨","&digamma;":"ϝ","&disin;":"⋲","&div;":"÷","&divide":"÷","&divide;":"÷","&divideontimes;":"⋇","&divonx;":"⋇","&djcy;":"ђ","&dlcorn;":"⌞","&dlcrop;":"⌍","&dollar;":"$","&dopf;":"𝕕","&dot;":"˙","&doteq;":"≐","&doteqdot;":"≑","&dotminus;":"∸","&dotplus;":"∔","&dotsquare;":"⊡","&doublebarwedge;":"⌆","&downarrow;":"↓","&downdownarrows;":"⇊","&downharpoonleft;":"⇃","&downharpoonright;":"⇂","&drbkarow;":"⤐","&drcorn;":"⌟","&drcrop;":"⌌","&dscr;":"𝒹","&dscy;":"ѕ","&dsol;":"⧶","&dstrok;":"đ","&dtdot;":"⋱","&dtri;":"▿","&dtrif;":"▾","&duarr;":"⇵","&duhar;":"⥯","&dwangle;":"⦦","&dzcy;":"џ","&dzigrarr;":"⟿","&eDDot;":"⩷","&eDot;":"≑","&eacute":"é","&eacute;":"é","&easter;":"⩮","&ecaron;":"ě","&ecir;":"≖","&ecirc":"ê","&ecirc;":"ê","&ecolon;":"≕","&ecy;":"э","&edot;":"ė","&ee;":"ⅇ","&efDot;":"≒","&efr;":"𝔢","&eg;":"⪚","&egrave":"è","&egrave;":"è","&egs;":"⪖","&egsdot;":"⪘","&el;":"⪙","&elinters;":"⏧","&ell;":"ℓ","&els;":"⪕","&elsdot;":"⪗","&emacr;":"ē","&empty;":"∅","&emptyset;":"∅","&emptyv;":"∅","&emsp13;":" ","&emsp14;":" ","&emsp;":" ","&eng;":"ŋ","&ensp;":" ","&eogon;":"ę","&eopf;":"𝕖","&epar;":"⋕","&eparsl;":"⧣","&eplus;":"⩱","&epsi;":"ε","&epsilon;":"ε","&epsiv;":"ϵ","&eqcirc;":"≖","&eqcolon;":"≕","&eqsim;":"≂","&eqslantgtr;":"⪖","&eqslantless;":"⪕","&equals;":"=","&equest;":"≟","&equiv;":"≡","&equivDD;":"⩸","&eqvparsl;":"⧥","&erDot;":"≓","&erarr;":"⥱","&escr;":"ℯ","&esdot;":"≐","&esim;":"≂","&eta;":"η","&eth":"ð","&eth;":"ð","&euml":"ë","&euml;":"ë","&euro;":"€","&excl;":"!","&exist;":"∃","&expectation;":"ℰ","&exponentiale;":"ⅇ","&fallingdotseq;":"≒","&fcy;":"ф","&female;":"♀","&ffilig;":"ﬃ","&fflig;":"ﬀ","&ffllig;":"ﬄ","&ffr;":"𝔣","&filig;":"ﬁ","&fjlig;":"fj","&flat;":"♭","&fllig;":"ﬂ","&fltns;":"▱","&fnof;":"ƒ","&fopf;":"𝕗","&forall;":"∀","&fork;":"⋔","&forkv;":"⫙","&fpartint;":"⨍","&frac12":"½","&frac12;":"½","&frac13;":"⅓","&frac14":"¼","&frac14;":"¼","&frac15;":"⅕","&frac16;":"⅙","&frac18;":"⅛","&frac23;":"⅔","&frac25;":"⅖","&frac34":"¾","&frac34;":"¾","&frac35;":"⅗","&frac38;":"⅜","&frac45;":"⅘","&frac56;":"⅚","&frac58;":"⅝","&frac78;":"⅞","&frasl;":"⁄","&frown;":"⌢","&fscr;":"𝒻","&gE;":"≧","&gEl;":"⪌","&gacute;":"ǵ","&gamma;":"γ","&gammad;":"ϝ","&gap;":"⪆","&gbreve;":"ğ","&gcirc;":"ĝ","&gcy;":"г","&gdot;":"ġ","&ge;":"≥","&gel;":"⋛","&geq;":"≥","&geqq;":"≧","&geqslant;":"⩾","&ges;":"⩾","&gescc;":"⪩","&gesdot;":"⪀","&gesdoto;":"⪂","&gesdotol;":"⪄","&gesl;":"⋛︀","&gesles;":"⪔","&gfr;":"𝔤","&gg;":"≫","&ggg;":"⋙","&gimel;":"ℷ","&gjcy;":"ѓ","&gl;":"≷","&glE;":"⪒","&gla;":"⪥","&glj;":"⪤","&gnE;":"≩","&gnap;":"⪊","&gnapprox;":"⪊","&gne;":"⪈","&gneq;":"⪈","&gneqq;":"≩","&gnsim;":"⋧","&gopf;":"𝕘","&grave;":"`","&gscr;":"ℊ","&gsim;":"≳","&gsime;":"⪎","&gsiml;":"⪐","&gt":">","&gt;":">","&gtcc;":"⪧","&gtcir;":"⩺","&gtdot;":"⋗","&gtlPar;":"⦕","&gtquest;":"⩼","&gtrapprox;":"⪆","&gtrarr;":"⥸","&gtrdot;":"⋗","&gtreqless;":"⋛","&gtreqqless;":"⪌","&gtrless;":"≷","&gtrsim;":"≳","&gvertneqq;":"≩︀","&gvnE;":"≩︀","&hArr;":"⇔","&hairsp;":" ","&half;":"½","&hamilt;":"ℋ","&hardcy;":"ъ","&harr;":"↔","&harrcir;":"⥈","&harrw;":"↭","&hbar;":"ℏ","&hcirc;":"ĥ","&hearts;":"♥","&heartsuit;":"♥","&hellip;":"…","&hercon;":"⊹","&hfr;":"𝔥","&hksearow;":"⤥","&hkswarow;":"⤦","&hoarr;":"⇿","&homtht;":"∻","&hookleftarrow;":"↩","&hookrightarrow;":"↪","&hopf;":"𝕙","&horbar;":"―","&hscr;":"𝒽","&hslash;":"ℏ","&hstrok;":"ħ","&hybull;":"⁃","&hyphen;":"‐","&iacute":"í","&iacute;":"í","&ic;":"⁣","&icirc":"î","&icirc;":"î","&icy;":"и","&iecy;":"е","&iexcl":"¡","&iexcl;":"¡","&iff;":"⇔","&ifr;":"𝔦","&igrave":"ì","&igrave;":"ì","&ii;":"ⅈ","&iiiint;":"⨌","&iiint;":"∭","&iinfin;":"⧜","&iiota;":"℩","&ijlig;":"ĳ","&imacr;":"ī","&image;":"ℑ","&imagline;":"ℐ","&imagpart;":"ℑ","&imath;":"ı","&imof;":"⊷","&imped;":"Ƶ","&in;":"∈","&incare;":"℅","&infin;":"∞","&infintie;":"⧝","&inodot;":"ı","&int;":"∫","&intcal;":"⊺","&integers;":"ℤ","&intercal;":"⊺","&intlarhk;":"⨗","&intprod;":"⨼","&iocy;":"ё","&iogon;":"į","&iopf;":"𝕚","&iota;":"ι","&iprod;":"⨼","&iquest":"¿","&iquest;":"¿","&iscr;":"𝒾","&isin;":"∈","&isinE;":"⋹","&isindot;":"⋵","&isins;":"⋴","&isinsv;":"⋳","&isinv;":"∈","&it;":"⁢","&itilde;":"ĩ","&iukcy;":"і","&iuml":"ï","&iuml;":"ï","&jcirc;":"ĵ","&jcy;":"й","&jfr;":"𝔧","&jmath;":"ȷ","&jopf;":"𝕛","&jscr;":"𝒿","&jsercy;":"ј","&jukcy;":"є","&kappa;":"κ","&kappav;":"ϰ","&kcedil;":"ķ","&kcy;":"к","&kfr;":"𝔨","&kgreen;":"ĸ","&khcy;":"х","&kjcy;":"ќ","&kopf;":"𝕜","&kscr;":"𝓀","&lAarr;":"⇚","&lArr;":"⇐","&lAtail;":"⤛","&lBarr;":"⤎","&lE;":"≦","&lEg;":"⪋","&lHar;":"⥢","&lacute;":"ĺ","&laemptyv;":"⦴","&lagran;":"ℒ","&lambda;":"λ","&lang;":"⟨","&langd;":"⦑","&langle;":"⟨","&lap;":"⪅","&laquo":"«","&laquo;":"«","&larr;":"←","&larrb;":"⇤","&larrbfs;":"⤟","&larrfs;":"⤝","&larrhk;":"↩","&larrlp;":"↫","&larrpl;":"⤹","&larrsim;":"⥳","&larrtl;":"↢","&lat;":"⪫","&latail;":"⤙","&late;":"⪭","&lates;":"⪭︀","&lbarr;":"⤌","&lbbrk;":"❲","&lbrace;":"{","&lbrack;":"[","&lbrke;":"⦋","&lbrksld;":"⦏","&lbrkslu;":"⦍","&lcaron;":"ľ","&lcedil;":"ļ","&lceil;":"⌈","&lcub;":"{","&lcy;":"л","&ldca;":"⤶","&ldquo;":"“","&ldquor;":"„","&ldrdhar;":"⥧","&ldrushar;":"⥋","&ldsh;":"↲","&le;":"≤","&leftarrow;":"←","&leftarrowtail;":"↢","&leftharpoondown;":"↽","&leftharpoonup;":"↼","&leftleftarrows;":"⇇","&leftrightarrow;":"↔","&leftrightarrows;":"⇆","&leftrightharpoons;":"⇋","&leftrightsquigarrow;":"↭","&leftthreetimes;":"⋋","&leg;":"⋚","&leq;":"≤","&leqq;":"≦","&leqslant;":"⩽","&les;":"⩽","&lescc;":"⪨","&lesdot;":"⩿","&lesdoto;":"⪁","&lesdotor;":"⪃","&lesg;":"⋚︀","&lesges;":"⪓","&lessapprox;":"⪅","&lessdot;":"⋖","&lesseqgtr;":"⋚","&lesseqqgtr;":"⪋","&lessgtr;":"≶","&lesssim;":"≲","&lfisht;":"⥼","&lfloor;":"⌊","&lfr;":"𝔩","&lg;":"≶","&lgE;":"⪑","&lhard;":"↽","&lharu;":"↼","&lharul;":"⥪","&lhblk;":"▄","&ljcy;":"љ","&ll;":"≪","&llarr;":"⇇","&llcorner;":"⌞","&llhard;":"⥫","&lltri;":"◺","&lmidot;":"ŀ","&lmoust;":"⎰","&lmoustache;":"⎰","&lnE;":"≨","&lnap;":"⪉","&lnapprox;":"⪉","&lne;":"⪇","&lneq;":"⪇","&lneqq;":"≨","&lnsim;":"⋦","&loang;":"⟬","&loarr;":"⇽","&lobrk;":"⟦","&longleftarrow;":"⟵","&longleftrightarrow;":"⟷","&longmapsto;":"⟼","&longrightarrow;":"⟶","&looparrowleft;":"↫","&looparrowright;":"↬","&lopar;":"⦅","&lopf;":"𝕝","&loplus;":"⨭","&lotimes;":"⨴","&lowast;":"∗","&lowbar;":"_","&loz;":"◊","&lozenge;":"◊","&lozf;":"⧫","&lpar;":"(","&lparlt;":"⦓","&lrarr;":"⇆","&lrcorner;":"⌟","&lrhar;":"⇋","&lrhard;":"⥭","&lrm;":"‎","&lrtri;":"⊿","&lsaquo;":"‹","&lscr;":"𝓁","&lsh;":"↰","&lsim;":"≲","&lsime;":"⪍","&lsimg;":"⪏","&lsqb;":"[","&lsquo;":"‘","&lsquor;":"‚","&lstrok;":"ł","&lt":"<","&lt;":"<","&ltcc;":"⪦","&ltcir;":"⩹","&ltdot;":"⋖","&lthree;":"⋋","&ltimes;":"⋉","&ltlarr;":"⥶","&ltquest;":"⩻","&ltrPar;":"⦖","&ltri;":"◃","&ltrie;":"⊴","&ltrif;":"◂","&lurdshar;":"⥊","&luruhar;":"⥦","&lvertneqq;":"≨︀","&lvnE;":"≨︀","&mDDot;":"∺","&macr":"¯","&macr;":"¯","&male;":"♂","&malt;":"✠","&maltese;":"✠","&map;":"↦","&mapsto;":"↦","&mapstodown;":"↧","&mapstoleft;":"↤","&mapstoup;":"↥","&marker;":"▮","&mcomma;":"⨩","&mcy;":"м","&mdash;":"—","&measuredangle;":"∡","&mfr;":"𝔪","&mho;":"℧","&micro":"µ","&micro;":"µ","&mid;":"∣","&midast;":"*","&midcir;":"⫰","&middot":"·","&middot;":"·","&minus;":"−","&minusb;":"⊟","&minusd;":"∸","&minusdu;":"⨪","&mlcp;":"⫛","&mldr;":"…","&mnplus;":"∓","&models;":"⊧","&mopf;":"𝕞","&mp;":"∓","&mscr;":"𝓂","&mstpos;":"∾","&mu;":"μ","&multimap;":"⊸","&mumap;":"⊸","&nGg;":"⋙̸","&nGt;":"≫⃒","&nGtv;":"≫̸","&nLeftarrow;":"⇍","&nLeftrightarrow;":"⇎","&nLl;":"⋘̸","&nLt;":"≪⃒","&nLtv;":"≪̸","&nRightarrow;":"⇏","&nVDash;":"⊯","&nVdash;":"⊮","&nabla;":"∇","&nacute;":"ń","&nang;":"∠⃒","&nap;":"≉","&napE;":"⩰̸","&napid;":"≋̸","&napos;":"ŉ","&napprox;":"≉","&natur;":"♮","&natural;":"♮","&naturals;":"ℕ","&nbsp":" ","&nbsp;":" ","&nbump;":"≎̸","&nbumpe;":"≏̸","&ncap;":"⩃","&ncaron;":"ň","&ncedil;":"ņ","&ncong;":"≇","&ncongdot;":"⩭̸","&ncup;":"⩂","&ncy;":"н","&ndash;":"–","&ne;":"≠","&neArr;":"⇗","&nearhk;":"⤤","&nearr;":"↗","&nearrow;":"↗","&nedot;":"≐̸","&nequiv;":"≢","&nesear;":"⤨","&nesim;":"≂̸","&nexist;":"∄","&nexists;":"∄","&nfr;":"𝔫","&ngE;":"≧̸","&nge;":"≱","&ngeq;":"≱","&ngeqq;":"≧̸","&ngeqslant;":"⩾̸","&nges;":"⩾̸","&ngsim;":"≵","&ngt;":"≯","&ngtr;":"≯","&nhArr;":"⇎","&nharr;":"↮","&nhpar;":"⫲","&ni;":"∋","&nis;":"⋼","&nisd;":"⋺","&niv;":"∋","&njcy;":"њ","&nlArr;":"⇍","&nlE;":"≦̸","&nlarr;":"↚","&nldr;":"‥","&nle;":"≰","&nleftarrow;":"↚","&nleftrightarrow;":"↮","&nleq;":"≰","&nleqq;":"≦̸","&nleqslant;":"⩽̸","&nles;":"⩽̸","&nless;":"≮","&nlsim;":"≴","&nlt;":"≮","&nltri;":"⋪","&nltrie;":"⋬","&nmid;":"∤","&nopf;":"𝕟","&not":"¬","&not;":"¬","&notin;":"∉","&notinE;":"⋹̸","&notindot;":"⋵̸","&notinva;":"∉","&notinvb;":"⋷","&notinvc;":"⋶","&notni;":"∌","&notniva;":"∌","&notnivb;":"⋾","&notnivc;":"⋽","&npar;":"∦","&nparallel;":"∦","&nparsl;":"⫽⃥","&npart;":"∂̸","&npolint;":"⨔","&npr;":"⊀","&nprcue;":"⋠","&npre;":"⪯̸","&nprec;":"⊀","&npreceq;":"⪯̸","&nrArr;":"⇏","&nrarr;":"↛","&nrarrc;":"⤳̸","&nrarrw;":"↝̸","&nrightarrow;":"↛","&nrtri;":"⋫","&nrtrie;":"⋭","&nsc;":"⊁","&nsccue;":"⋡","&nsce;":"⪰̸","&nscr;":"𝓃","&nshortmid;":"∤","&nshortparallel;":"∦","&nsim;":"≁","&nsime;":"≄","&nsimeq;":"≄","&nsmid;":"∤","&nspar;":"∦","&nsqsube;":"⋢","&nsqsupe;":"⋣","&nsub;":"⊄","&nsubE;":"⫅̸","&nsube;":"⊈","&nsubset;":"⊂⃒","&nsubseteq;":"⊈","&nsubseteqq;":"⫅̸","&nsucc;":"⊁","&nsucceq;":"⪰̸","&nsup;":"⊅","&nsupE;":"⫆̸","&nsupe;":"⊉","&nsupset;":"⊃⃒","&nsupseteq;":"⊉","&nsupseteqq;":"⫆̸","&ntgl;":"≹","&ntilde":"ñ","&ntilde;":"ñ","&ntlg;":"≸","&ntriangleleft;":"⋪","&ntrianglelefteq;":"⋬","&ntriangleright;":"⋫","&ntrianglerighteq;":"⋭","&nu;":"ν","&num;":"#","&numero;":"№","&numsp;":" ","&nvDash;":"⊭","&nvHarr;":"⤄","&nvap;":"≍⃒","&nvdash;":"⊬","&nvge;":"≥⃒","&nvgt;":">⃒","&nvinfin;":"⧞","&nvlArr;":"⤂","&nvle;":"≤⃒","&nvlt;":"<⃒","&nvltrie;":"⊴⃒","&nvrArr;":"⤃","&nvrtrie;":"⊵⃒","&nvsim;":"∼⃒","&nwArr;":"⇖","&nwarhk;":"⤣","&nwarr;":"↖","&nwarrow;":"↖","&nwnear;":"⤧","&oS;":"Ⓢ","&oacute":"ó","&oacute;":"ó","&oast;":"⊛","&ocir;":"⊚","&ocirc":"ô","&ocirc;":"ô","&ocy;":"о","&odash;":"⊝","&odblac;":"ő","&odiv;":"⨸","&odot;":"⊙","&odsold;":"⦼","&oelig;":"œ","&ofcir;":"⦿","&ofr;":"𝔬","&ogon;":"˛","&ograve":"ò","&ograve;":"ò","&ogt;":"⧁","&ohbar;":"⦵","&ohm;":"Ω","&oint;":"∮","&olarr;":"↺","&olcir;":"⦾","&olcross;":"⦻","&oline;":"‾","&olt;":"⧀","&omacr;":"ō","&omega;":"ω","&omicron;":"ο","&omid;":"⦶","&ominus;":"⊖","&oopf;":"𝕠","&opar;":"⦷","&operp;":"⦹","&oplus;":"⊕","&or;":"∨","&orarr;":"↻","&ord;":"⩝","&order;":"ℴ","&orderof;":"ℴ","&ordf":"ª","&ordf;":"ª","&ordm":"º","&ordm;":"º","&origof;":"⊶","&oror;":"⩖","&orslope;":"⩗","&orv;":"⩛","&oscr;":"ℴ","&oslash":"ø","&oslash;":"ø","&osol;":"⊘","&otilde":"õ","&otilde;":"õ","&otimes;":"⊗","&otimesas;":"⨶","&ouml":"ö","&ouml;":"ö","&ovbar;":"⌽","&par;":"∥","&para":"¶","&para;":"¶","&parallel;":"∥","&parsim;":"⫳","&parsl;":"⫽","&part;":"∂","&pcy;":"п","&percnt;":"%","&period;":".","&permil;":"‰","&perp;":"⊥","&pertenk;":"‱","&pfr;":"𝔭","&phi;":"φ","&phiv;":"ϕ","&phmmat;":"ℳ","&phone;":"☎","&pi;":"π","&pitchfork;":"⋔","&piv;":"ϖ","&planck;":"ℏ","&planckh;":"ℎ","&plankv;":"ℏ","&plus;":"+","&plusacir;":"⨣","&plusb;":"⊞","&pluscir;":"⨢","&plusdo;":"∔","&plusdu;":"⨥","&pluse;":"⩲","&plusmn":"±","&plusmn;":"±","&plussim;":"⨦","&plustwo;":"⨧","&pm;":"±","&pointint;":"⨕","&popf;":"𝕡","&pound":"£","&pound;":"£","&pr;":"≺","&prE;":"⪳","&prap;":"⪷","&prcue;":"≼","&pre;":"⪯","&prec;":"≺","&precapprox;":"⪷","&preccurlyeq;":"≼","&preceq;":"⪯","&precnapprox;":"⪹","&precneqq;":"⪵","&precnsim;":"⋨","&precsim;":"≾","&prime;":"′","&primes;":"ℙ","&prnE;":"⪵","&prnap;":"⪹","&prnsim;":"⋨","&prod;":"∏","&profalar;":"⌮","&profline;":"⌒","&profsurf;":"⌓","&prop;":"∝","&propto;":"∝","&prsim;":"≾","&prurel;":"⊰","&pscr;":"𝓅","&psi;":"ψ","&puncsp;":" ","&qfr;":"𝔮","&qint;":"⨌","&qopf;":"𝕢","&qprime;":"⁗","&qscr;":"𝓆","&quaternions;":"ℍ","&quatint;":"⨖","&quest;":"?","&questeq;":"≟","&quot":'"',"&quot;":'"',"&rAarr;":"⇛","&rArr;":"⇒","&rAtail;":"⤜","&rBarr;":"⤏","&rHar;":"⥤","&race;":"∽̱","&racute;":"ŕ","&radic;":"√","&raemptyv;":"⦳","&rang;":"⟩","&rangd;":"⦒","&range;":"⦥","&rangle;":"⟩","&raquo":"»","&raquo;":"»","&rarr;":"→","&rarrap;":"⥵","&rarrb;":"⇥","&rarrbfs;":"⤠","&rarrc;":"⤳","&rarrfs;":"⤞","&rarrhk;":"↪","&rarrlp;":"↬","&rarrpl;":"⥅","&rarrsim;":"⥴","&rarrtl;":"↣","&rarrw;":"↝","&ratail;":"⤚","&ratio;":"∶","&rationals;":"ℚ","&rbarr;":"⤍","&rbbrk;":"❳","&rbrace;":"}","&rbrack;":"]","&rbrke;":"⦌","&rbrksld;":"⦎","&rbrkslu;":"⦐","&rcaron;":"ř","&rcedil;":"ŗ","&rceil;":"⌉","&rcub;":"}","&rcy;":"р","&rdca;":"⤷","&rdldhar;":"⥩","&rdquo;":"”","&rdquor;":"”","&rdsh;":"↳","&real;":"ℜ","&realine;":"ℛ","&realpart;":"ℜ","&reals;":"ℝ","&rect;":"▭","&reg":"®","&reg;":"®","&rfisht;":"⥽","&rfloor;":"⌋","&rfr;":"𝔯","&rhard;":"⇁","&rharu;":"⇀","&rharul;":"⥬","&rho;":"ρ","&rhov;":"ϱ","&rightarrow;":"→","&rightarrowtail;":"↣","&rightharpoondown;":"⇁","&rightharpoonup;":"⇀","&rightleftarrows;":"⇄","&rightleftharpoons;":"⇌","&rightrightarrows;":"⇉","&rightsquigarrow;":"↝","&rightthreetimes;":"⋌","&ring;":"˚","&risingdotseq;":"≓","&rlarr;":"⇄","&rlhar;":"⇌","&rlm;":"‏","&rmoust;":"⎱","&rmoustache;":"⎱","&rnmid;":"⫮","&roang;":"⟭","&roarr;":"⇾","&robrk;":"⟧","&ropar;":"⦆","&ropf;":"𝕣","&roplus;":"⨮","&rotimes;":"⨵","&rpar;":")","&rpargt;":"⦔","&rppolint;":"⨒","&rrarr;":"⇉","&rsaquo;":"›","&rscr;":"𝓇","&rsh;":"↱","&rsqb;":"]","&rsquo;":"’","&rsquor;":"’","&rthree;":"⋌","&rtimes;":"⋊","&rtri;":"▹","&rtrie;":"⊵","&rtrif;":"▸","&rtriltri;":"⧎","&ruluhar;":"⥨","&rx;":"℞","&sacute;":"ś","&sbquo;":"‚","&sc;":"≻","&scE;":"⪴","&scap;":"⪸","&scaron;":"š","&sccue;":"≽","&sce;":"⪰","&scedil;":"ş","&scirc;":"ŝ","&scnE;":"⪶","&scnap;":"⪺","&scnsim;":"⋩","&scpolint;":"⨓","&scsim;":"≿","&scy;":"с","&sdot;":"⋅","&sdotb;":"⊡","&sdote;":"⩦","&seArr;":"⇘","&searhk;":"⤥","&searr;":"↘","&searrow;":"↘","&sect":"§","&sect;":"§","&semi;":";","&seswar;":"⤩","&setminus;":"∖","&setmn;":"∖","&sext;":"✶","&sfr;":"𝔰","&sfrown;":"⌢","&sharp;":"♯","&shchcy;":"щ","&shcy;":"ш","&shortmid;":"∣","&shortparallel;":"∥","&shy":"­","&shy;":"­","&sigma;":"σ","&sigmaf;":"ς","&sigmav;":"ς","&sim;":"∼","&simdot;":"⩪","&sime;":"≃","&simeq;":"≃","&simg;":"⪞","&simgE;":"⪠","&siml;":"⪝","&simlE;":"⪟","&simne;":"≆","&simplus;":"⨤","&simrarr;":"⥲","&slarr;":"←","&smallsetminus;":"∖","&smashp;":"⨳","&smeparsl;":"⧤","&smid;":"∣","&smile;":"⌣","&smt;":"⪪","&smte;":"⪬","&smtes;":"⪬︀","&softcy;":"ь","&sol;":"/","&solb;":"⧄","&solbar;":"⌿","&sopf;":"𝕤","&spades;":"♠","&spadesuit;":"♠","&spar;":"∥","&sqcap;":"⊓","&sqcaps;":"⊓︀","&sqcup;":"⊔","&sqcups;":"⊔︀","&sqsub;":"⊏","&sqsube;":"⊑","&sqsubset;":"⊏","&sqsubseteq;":"⊑","&sqsup;":"⊐","&sqsupe;":"⊒","&sqsupset;":"⊐","&sqsupseteq;":"⊒","&squ;":"□","&square;":"□","&squarf;":"▪","&squf;":"▪","&srarr;":"→","&sscr;":"𝓈","&ssetmn;":"∖","&ssmile;":"⌣","&sstarf;":"⋆","&star;":"☆","&starf;":"★","&straightepsilon;":"ϵ","&straightphi;":"ϕ","&strns;":"¯","&sub;":"⊂","&subE;":"⫅","&subdot;":"⪽","&sube;":"⊆","&subedot;":"⫃","&submult;":"⫁","&subnE;":"⫋","&subne;":"⊊","&subplus;":"⪿","&subrarr;":"⥹","&subset;":"⊂","&subseteq;":"⊆","&subseteqq;":"⫅","&subsetneq;":"⊊","&subsetneqq;":"⫋","&subsim;":"⫇","&subsub;":"⫕","&subsup;":"⫓","&succ;":"≻","&succapprox;":"⪸","&succcurlyeq;":"≽","&succeq;":"⪰","&succnapprox;":"⪺","&succneqq;":"⪶","&succnsim;":"⋩","&succsim;":"≿","&sum;":"∑","&sung;":"♪","&sup1":"¹","&sup1;":"¹","&sup2":"²","&sup2;":"²","&sup3":"³","&sup3;":"³","&sup;":"⊃","&supE;":"⫆","&supdot;":"⪾","&supdsub;":"⫘","&supe;":"⊇","&supedot;":"⫄","&suphsol;":"⟉","&suphsub;":"⫗","&suplarr;":"⥻","&supmult;":"⫂","&supnE;":"⫌","&supne;":"⊋","&supplus;":"⫀","&supset;":"⊃","&supseteq;":"⊇","&supseteqq;":"⫆","&supsetneq;":"⊋","&supsetneqq;":"⫌","&supsim;":"⫈","&supsub;":"⫔","&supsup;":"⫖","&swArr;":"⇙","&swarhk;":"⤦","&swarr;":"↙","&swarrow;":"↙","&swnwar;":"⤪","&szlig":"ß","&szlig;":"ß","&target;":"⌖","&tau;":"τ","&tbrk;":"⎴","&tcaron;":"ť","&tcedil;":"ţ","&tcy;":"т","&tdot;":"⃛","&telrec;":"⌕","&tfr;":"𝔱","&there4;":"∴","&therefore;":"∴","&theta;":"θ","&thetasym;":"ϑ","&thetav;":"ϑ","&thickapprox;":"≈","&thicksim;":"∼","&thinsp;":" ","&thkap;":"≈","&thksim;":"∼","&thorn":"þ","&thorn;":"þ","&tilde;":"˜","&times":"×","&times;":"×","&timesb;":"⊠","&timesbar;":"⨱","&timesd;":"⨰","&tint;":"∭","&toea;":"⤨","&top;":"⊤","&topbot;":"⌶","&topcir;":"⫱","&topf;":"𝕥","&topfork;":"⫚","&tosa;":"⤩","&tprime;":"‴","&trade;":"™","&triangle;":"▵","&triangledown;":"▿","&triangleleft;":"◃","&trianglelefteq;":"⊴","&triangleq;":"≜","&triangleright;":"▹","&trianglerighteq;":"⊵","&tridot;":"◬","&trie;":"≜","&triminus;":"⨺","&triplus;":"⨹","&trisb;":"⧍","&tritime;":"⨻","&trpezium;":"⏢","&tscr;":"𝓉","&tscy;":"ц","&tshcy;":"ћ","&tstrok;":"ŧ","&twixt;":"≬","&twoheadleftarrow;":"↞","&twoheadrightarrow;":"↠","&uArr;":"⇑","&uHar;":"⥣","&uacute":"ú","&uacute;":"ú","&uarr;":"↑","&ubrcy;":"ў","&ubreve;":"ŭ","&ucirc":"û","&ucirc;":"û","&ucy;":"у","&udarr;":"⇅","&udblac;":"ű","&udhar;":"⥮","&ufisht;":"⥾","&ufr;":"𝔲","&ugrave":"ù","&ugrave;":"ù","&uharl;":"↿","&uharr;":"↾","&uhblk;":"▀","&ulcorn;":"⌜","&ulcorner;":"⌜","&ulcrop;":"⌏","&ultri;":"◸","&umacr;":"ū","&uml":"¨","&uml;":"¨","&uogon;":"ų","&uopf;":"𝕦","&uparrow;":"↑","&updownarrow;":"↕","&upharpoonleft;":"↿","&upharpoonright;":"↾","&uplus;":"⊎","&upsi;":"υ","&upsih;":"ϒ","&upsilon;":"υ","&upuparrows;":"⇈","&urcorn;":"⌝","&urcorner;":"⌝","&urcrop;":"⌎","&uring;":"ů","&urtri;":"◹","&uscr;":"𝓊","&utdot;":"⋰","&utilde;":"ũ","&utri;":"▵","&utrif;":"▴","&uuarr;":"⇈","&uuml":"ü","&uuml;":"ü","&uwangle;":"⦧","&vArr;":"⇕","&vBar;":"⫨","&vBarv;":"⫩","&vDash;":"⊨","&vangrt;":"⦜","&varepsilon;":"ϵ","&varkappa;":"ϰ","&varnothing;":"∅","&varphi;":"ϕ","&varpi;":"ϖ","&varpropto;":"∝","&varr;":"↕","&varrho;":"ϱ","&varsigma;":"ς","&varsubsetneq;":"⊊︀","&varsubsetneqq;":"⫋︀","&varsupsetneq;":"⊋︀","&varsupsetneqq;":"⫌︀","&vartheta;":"ϑ","&vartriangleleft;":"⊲","&vartriangleright;":"⊳","&vcy;":"в","&vdash;":"⊢","&vee;":"∨","&veebar;":"⊻","&veeeq;":"≚","&vellip;":"⋮","&verbar;":"|","&vert;":"|","&vfr;":"𝔳","&vltri;":"⊲","&vnsub;":"⊂⃒","&vnsup;":"⊃⃒","&vopf;":"𝕧","&vprop;":"∝","&vrtri;":"⊳","&vscr;":"𝓋","&vsubnE;":"⫋︀","&vsubne;":"⊊︀","&vsupnE;":"⫌︀","&vsupne;":"⊋︀","&vzigzag;":"⦚","&wcirc;":"ŵ","&wedbar;":"⩟","&wedge;":"∧","&wedgeq;":"≙","&weierp;":"℘","&wfr;":"𝔴","&wopf;":"𝕨","&wp;":"℘","&wr;":"≀","&wreath;":"≀","&wscr;":"𝓌","&xcap;":"⋂","&xcirc;":"◯","&xcup;":"⋃","&xdtri;":"▽","&xfr;":"𝔵","&xhArr;":"⟺","&xharr;":"⟷","&xi;":"ξ","&xlArr;":"⟸","&xlarr;":"⟵","&xmap;":"⟼","&xnis;":"⋻","&xodot;":"⨀","&xopf;":"𝕩","&xoplus;":"⨁","&xotime;":"⨂","&xrArr;":"⟹","&xrarr;":"⟶","&xscr;":"𝓍","&xsqcup;":"⨆","&xuplus;":"⨄","&xutri;":"△","&xvee;":"⋁","&xwedge;":"⋀","&yacute":"ý","&yacute;":"ý","&yacy;":"я","&ycirc;":"ŷ","&ycy;":"ы","&yen":"¥","&yen;":"¥","&yfr;":"𝔶","&yicy;":"ї","&yopf;":"𝕪","&yscr;":"𝓎","&yucy;":"ю","&yuml":"ÿ","&yuml;":"ÿ","&zacute;":"ź","&zcaron;":"ž","&zcy;":"з","&zdot;":"ż","&zeetrf;":"ℨ","&zeta;":"ζ","&zfr;":"𝔷","&zhcy;":"ж","&zigrarr;":"⇝","&zopf;":"𝕫","&zscr;":"𝓏","&zwj;":"‍","&zwnj;":"‌"},characters:{Æ:"&AElig;","&":"&amp;",Á:"&Aacute;",Ă:"&Abreve;",Â:"&Acirc;",А:"&Acy;",𝔄:"&Afr;",À:"&Agrave;",Α:"&Alpha;",Ā:"&Amacr;","⩓":"&And;",Ą:"&Aogon;",𝔸:"&Aopf;","⁡":"&af;",Å:"&angst;",𝒜:"&Ascr;","≔":"&coloneq;",Ã:"&Atilde;",Ä:"&Auml;","∖":"&ssetmn;","⫧":"&Barv;","⌆":"&doublebarwedge;",Б:"&Bcy;","∵":"&because;",ℬ:"&bernou;",Β:"&Beta;",𝔅:"&Bfr;",𝔹:"&Bopf;","˘":"&breve;","≎":"&bump;",Ч:"&CHcy;","©":"&copy;",Ć:"&Cacute;","⋒":"&Cap;",ⅅ:"&DD;",ℭ:"&Cfr;",Č:"&Ccaron;",Ç:"&Ccedil;",Ĉ:"&Ccirc;","∰":"&Cconint;",Ċ:"&Cdot;","¸":"&cedil;","·":"&middot;",Χ:"&Chi;","⊙":"&odot;","⊖":"&ominus;","⊕":"&oplus;","⊗":"&otimes;","∲":"&cwconint;","”":"&rdquor;","’":"&rsquor;","∷":"&Proportion;","⩴":"&Colone;","≡":"&equiv;","∯":"&DoubleContourIntegral;","∮":"&oint;",ℂ:"&complexes;","∐":"&coprod;","∳":"&awconint;","⨯":"&Cross;",𝒞:"&Cscr;","⋓":"&Cup;","≍":"&asympeq;","⤑":"&DDotrahd;",Ђ:"&DJcy;",Ѕ:"&DScy;",Џ:"&DZcy;","‡":"&ddagger;","↡":"&Darr;","⫤":"&DoubleLeftTee;",Ď:"&Dcaron;",Д:"&Dcy;","∇":"&nabla;",Δ:"&Delta;",𝔇:"&Dfr;","´":"&acute;","˙":"&dot;","˝":"&dblac;","`":"&grave;","˜":"&tilde;","⋄":"&diamond;",ⅆ:"&dd;",𝔻:"&Dopf;","¨":"&uml;","⃜":"&DotDot;","≐":"&esdot;","⇓":"&dArr;","⇐":"&lArr;","⇔":"&iff;","⟸":"&xlArr;","⟺":"&xhArr;","⟹":"&xrArr;","⇒":"&rArr;","⊨":"&vDash;","⇑":"&uArr;","⇕":"&vArr;","∥":"&spar;","↓":"&downarrow;","⤓":"&DownArrowBar;","⇵":"&duarr;","̑":"&DownBreve;","⥐":"&DownLeftRightVector;","⥞":"&DownLeftTeeVector;","↽":"&lhard;","⥖":"&DownLeftVectorBar;","⥟":"&DownRightTeeVector;","⇁":"&rightharpoondown;","⥗":"&DownRightVectorBar;","⊤":"&top;","↧":"&mapstodown;",𝒟:"&Dscr;",Đ:"&Dstrok;",Ŋ:"&ENG;",Ð:"&ETH;",É:"&Eacute;",Ě:"&Ecaron;",Ê:"&Ecirc;",Э:"&Ecy;",Ė:"&Edot;",𝔈:"&Efr;",È:"&Egrave;","∈":"&isinv;",Ē:"&Emacr;","◻":"&EmptySmallSquare;","▫":"&EmptyVerySmallSquare;",Ę:"&Eogon;",𝔼:"&Eopf;",Ε:"&Epsilon;","⩵":"&Equal;","≂":"&esim;","⇌":"&rlhar;",ℰ:"&expectation;","⩳":"&Esim;",Η:"&Eta;",Ë:"&Euml;","∃":"&exist;",ⅇ:"&exponentiale;",Ф:"&Fcy;",𝔉:"&Ffr;","◼":"&FilledSmallSquare;","▪":"&squf;",𝔽:"&Fopf;","∀":"&forall;",ℱ:"&Fscr;",Ѓ:"&GJcy;",">":"&gt;",Γ:"&Gamma;",Ϝ:"&Gammad;",Ğ:"&Gbreve;",Ģ:"&Gcedil;",Ĝ:"&Gcirc;",Г:"&Gcy;",Ġ:"&Gdot;",𝔊:"&Gfr;","⋙":"&ggg;",𝔾:"&Gopf;","≥":"&geq;","⋛":"&gtreqless;","≧":"&geqq;","⪢":"&GreaterGreater;","≷":"&gtrless;","⩾":"&ges;","≳":"&gtrsim;",𝒢:"&Gscr;","≫":"&gg;",Ъ:"&HARDcy;",ˇ:"&caron;","^":"&Hat;",Ĥ:"&Hcirc;",ℌ:"&Poincareplane;",ℋ:"&hamilt;",ℍ:"&quaternions;","─":"&boxh;",Ħ:"&Hstrok;","≏":"&bumpeq;",Е:"&IEcy;",Ĳ:"&IJlig;",Ё:"&IOcy;",Í:"&Iacute;",Î:"&Icirc;",И:"&Icy;",İ:"&Idot;",ℑ:"&imagpart;",Ì:"&Igrave;",Ī:"&Imacr;",ⅈ:"&ii;","∬":"&Int;","∫":"&int;","⋂":"&xcap;","⁣":"&ic;","⁢":"&it;",Į:"&Iogon;",𝕀:"&Iopf;",Ι:"&Iota;",ℐ:"&imagline;",Ĩ:"&Itilde;",І:"&Iukcy;",Ï:"&Iuml;",Ĵ:"&Jcirc;",Й:"&Jcy;",𝔍:"&Jfr;",𝕁:"&Jopf;",𝒥:"&Jscr;",Ј:"&Jsercy;",Є:"&Jukcy;",Х:"&KHcy;",Ќ:"&KJcy;",Κ:"&Kappa;",Ķ:"&Kcedil;",К:"&Kcy;",𝔎:"&Kfr;",𝕂:"&Kopf;",𝒦:"&Kscr;",Љ:"&LJcy;","<":"&lt;",Ĺ:"&Lacute;",Λ:"&Lambda;","⟪":"&Lang;",ℒ:"&lagran;","↞":"&twoheadleftarrow;",Ľ:"&Lcaron;",Ļ:"&Lcedil;",Л:"&Lcy;","⟨":"&langle;","←":"&slarr;","⇤":"&larrb;","⇆":"&lrarr;","⌈":"&lceil;","⟦":"&lobrk;","⥡":"&LeftDownTeeVector;","⇃":"&downharpoonleft;","⥙":"&LeftDownVectorBar;","⌊":"&lfloor;","↔":"&leftrightarrow;","⥎":"&LeftRightVector;","⊣":"&dashv;","↤":"&mapstoleft;","⥚":"&LeftTeeVector;","⊲":"&vltri;","⧏":"&LeftTriangleBar;","⊴":"&trianglelefteq;","⥑":"&LeftUpDownVector;","⥠":"&LeftUpTeeVector;","↿":"&upharpoonleft;","⥘":"&LeftUpVectorBar;","↼":"&lharu;","⥒":"&LeftVectorBar;","⋚":"&lesseqgtr;","≦":"&leqq;","≶":"&lg;","⪡":"&LessLess;","⩽":"&les;","≲":"&lsim;",𝔏:"&Lfr;","⋘":"&Ll;","⇚":"&lAarr;",Ŀ:"&Lmidot;","⟵":"&xlarr;","⟷":"&xharr;","⟶":"&xrarr;",𝕃:"&Lopf;","↙":"&swarrow;","↘":"&searrow;","↰":"&lsh;",Ł:"&Lstrok;","≪":"&ll;","⤅":"&Map;",М:"&Mcy;"," ":"&MediumSpace;",ℳ:"&phmmat;",𝔐:"&Mfr;","∓":"&mp;",𝕄:"&Mopf;",Μ:"&Mu;",Њ:"&NJcy;",Ń:"&Nacute;",Ň:"&Ncaron;",Ņ:"&Ncedil;",Н:"&Ncy;","​":"&ZeroWidthSpace;","\n":"&NewLine;",𝔑:"&Nfr;","⁠":"&NoBreak;"," ":"&nbsp;",ℕ:"&naturals;","⫬":"&Not;","≢":"&nequiv;","≭":"&NotCupCap;","∦":"&nspar;","∉":"&notinva;","≠":"&ne;","≂̸":"&nesim;","∄":"&nexists;","≯":"&ngtr;","≱":"&ngeq;","≧̸":"&ngeqq;","≫̸":"&nGtv;","≹":"&ntgl;","⩾̸":"&nges;","≵":"&ngsim;","≎̸":"&nbump;","≏̸":"&nbumpe;","⋪":"&ntriangleleft;","⧏̸":"&NotLeftTriangleBar;","⋬":"&ntrianglelefteq;","≮":"&nlt;","≰":"&nleq;","≸":"&ntlg;","≪̸":"&nLtv;","⩽̸":"&nles;","≴":"&nlsim;","⪢̸":"&NotNestedGreaterGreater;","⪡̸":"&NotNestedLessLess;","⊀":"&nprec;","⪯̸":"&npreceq;","⋠":"&nprcue;","∌":"&notniva;","⋫":"&ntriangleright;","⧐̸":"&NotRightTriangleBar;","⋭":"&ntrianglerighteq;","⊏̸":"&NotSquareSubset;","⋢":"&nsqsube;","⊐̸":"&NotSquareSuperset;","⋣":"&nsqsupe;","⊂⃒":"&vnsub;","⊈":"&nsubseteq;","⊁":"&nsucc;","⪰̸":"&nsucceq;","⋡":"&nsccue;","≿̸":"&NotSucceedsTilde;","⊃⃒":"&vnsup;","⊉":"&nsupseteq;","≁":"&nsim;","≄":"&nsimeq;","≇":"&ncong;","≉":"&napprox;","∤":"&nsmid;",𝒩:"&Nscr;",Ñ:"&Ntilde;",Ν:"&Nu;",Œ:"&OElig;",Ó:"&Oacute;",Ô:"&Ocirc;",О:"&Ocy;",Ő:"&Odblac;",𝔒:"&Ofr;",Ò:"&Ograve;",Ō:"&Omacr;",Ω:"&ohm;",Ο:"&Omicron;",𝕆:"&Oopf;","“":"&ldquo;","‘":"&lsquo;","⩔":"&Or;",𝒪:"&Oscr;",Ø:"&Oslash;",Õ:"&Otilde;","⨷":"&Otimes;",Ö:"&Ouml;","‾":"&oline;","⏞":"&OverBrace;","⎴":"&tbrk;","⏜":"&OverParenthesis;","∂":"&part;",П:"&Pcy;",𝔓:"&Pfr;",Φ:"&Phi;",Π:"&Pi;","±":"&pm;",ℙ:"&primes;","⪻":"&Pr;","≺":"&prec;","⪯":"&preceq;","≼":"&preccurlyeq;","≾":"&prsim;","″":"&Prime;","∏":"&prod;","∝":"&vprop;",𝒫:"&Pscr;",Ψ:"&Psi;",'"':"&quot;",𝔔:"&Qfr;",ℚ:"&rationals;",𝒬:"&Qscr;","⤐":"&drbkarow;","®":"&reg;",Ŕ:"&Racute;","⟫":"&Rang;","↠":"&twoheadrightarrow;","⤖":"&Rarrtl;",Ř:"&Rcaron;",Ŗ:"&Rcedil;",Р:"&Rcy;",ℜ:"&realpart;","∋":"&niv;","⇋":"&lrhar;","⥯":"&duhar;",Ρ:"&Rho;","⟩":"&rangle;","→":"&srarr;","⇥":"&rarrb;","⇄":"&rlarr;","⌉":"&rceil;","⟧":"&robrk;","⥝":"&RightDownTeeVector;","⇂":"&downharpoonright;","⥕":"&RightDownVectorBar;","⌋":"&rfloor;","⊢":"&vdash;","↦":"&mapsto;","⥛":"&RightTeeVector;","⊳":"&vrtri;","⧐":"&RightTriangleBar;","⊵":"&trianglerighteq;","⥏":"&RightUpDownVector;","⥜":"&RightUpTeeVector;","↾":"&upharpoonright;","⥔":"&RightUpVectorBar;","⇀":"&rightharpoonup;","⥓":"&RightVectorBar;",ℝ:"&reals;","⥰":"&RoundImplies;","⇛":"&rAarr;",ℛ:"&realine;","↱":"&rsh;","⧴":"&RuleDelayed;",Щ:"&SHCHcy;",Ш:"&SHcy;",Ь:"&SOFTcy;",Ś:"&Sacute;","⪼":"&Sc;",Š:"&Scaron;",Ş:"&Scedil;",Ŝ:"&Scirc;",С:"&Scy;",𝔖:"&Sfr;","↑":"&uparrow;",Σ:"&Sigma;","∘":"&compfn;",𝕊:"&Sopf;","√":"&radic;","□":"&square;","⊓":"&sqcap;","⊏":"&sqsubset;","⊑":"&sqsubseteq;","⊐":"&sqsupset;","⊒":"&sqsupseteq;","⊔":"&sqcup;",𝒮:"&Sscr;","⋆":"&sstarf;","⋐":"&Subset;","⊆":"&subseteq;","≻":"&succ;","⪰":"&succeq;","≽":"&succcurlyeq;","≿":"&succsim;","∑":"&sum;","⋑":"&Supset;","⊃":"&supset;","⊇":"&supseteq;",Þ:"&THORN;","™":"&trade;",Ћ:"&TSHcy;",Ц:"&TScy;","\t":"&Tab;",Τ:"&Tau;",Ť:"&Tcaron;",Ţ:"&Tcedil;",Т:"&Tcy;",𝔗:"&Tfr;","∴":"&therefore;",Θ:"&Theta;","  ":"&ThickSpace;"," ":"&thinsp;","∼":"&thksim;","≃":"&simeq;","≅":"&cong;","≈":"&thkap;",𝕋:"&Topf;","⃛":"&tdot;",𝒯:"&Tscr;",Ŧ:"&Tstrok;",Ú:"&Uacute;","↟":"&Uarr;","⥉":"&Uarrocir;",Ў:"&Ubrcy;",Ŭ:"&Ubreve;",Û:"&Ucirc;",У:"&Ucy;",Ű:"&Udblac;",𝔘:"&Ufr;",Ù:"&Ugrave;",Ū:"&Umacr;",_:"&lowbar;","⏟":"&UnderBrace;","⎵":"&bbrk;","⏝":"&UnderParenthesis;","⋃":"&xcup;","⊎":"&uplus;",Ų:"&Uogon;",𝕌:"&Uopf;","⤒":"&UpArrowBar;","⇅":"&udarr;","↕":"&varr;","⥮":"&udhar;","⊥":"&perp;","↥":"&mapstoup;","↖":"&nwarrow;","↗":"&nearrow;",ϒ:"&upsih;",Υ:"&Upsilon;",Ů:"&Uring;",𝒰:"&Uscr;",Ũ:"&Utilde;",Ü:"&Uuml;","⊫":"&VDash;","⫫":"&Vbar;",В:"&Vcy;","⊩":"&Vdash;","⫦":"&Vdashl;","⋁":"&xvee;","‖":"&Vert;","∣":"&smid;","|":"&vert;","❘":"&VerticalSeparator;","≀":"&wreath;"," ":"&hairsp;",𝔙:"&Vfr;",𝕍:"&Vopf;",𝒱:"&Vscr;","⊪":"&Vvdash;",Ŵ:"&Wcirc;","⋀":"&xwedge;",𝔚:"&Wfr;",𝕎:"&Wopf;",𝒲:"&Wscr;",𝔛:"&Xfr;",Ξ:"&Xi;",𝕏:"&Xopf;",𝒳:"&Xscr;",Я:"&YAcy;",Ї:"&YIcy;",Ю:"&YUcy;",Ý:"&Yacute;",Ŷ:"&Ycirc;",Ы:"&Ycy;",𝔜:"&Yfr;",𝕐:"&Yopf;",𝒴:"&Yscr;",Ÿ:"&Yuml;",Ж:"&ZHcy;",Ź:"&Zacute;",Ž:"&Zcaron;",З:"&Zcy;",Ż:"&Zdot;",Ζ:"&Zeta;",ℨ:"&zeetrf;",ℤ:"&integers;",𝒵:"&Zscr;",á:"&aacute;",ă:"&abreve;","∾":"&mstpos;","∾̳":"&acE;","∿":"&acd;",â:"&acirc;",а:"&acy;",æ:"&aelig;",𝔞:"&afr;",à:"&agrave;",ℵ:"&aleph;",α:"&alpha;",ā:"&amacr;","⨿":"&amalg;","∧":"&wedge;","⩕":"&andand;","⩜":"&andd;","⩘":"&andslope;","⩚":"&andv;","∠":"&angle;","⦤":"&ange;","∡":"&measuredangle;","⦨":"&angmsdaa;","⦩":"&angmsdab;","⦪":"&angmsdac;","⦫":"&angmsdad;","⦬":"&angmsdae;","⦭":"&angmsdaf;","⦮":"&angmsdag;","⦯":"&angmsdah;","∟":"&angrt;","⊾":"&angrtvb;","⦝":"&angrtvbd;","∢":"&angsph;","⍼":"&angzarr;",ą:"&aogon;",𝕒:"&aopf;","⩰":"&apE;","⩯":"&apacir;","≊":"&approxeq;","≋":"&apid;","'":"&apos;",å:"&aring;",𝒶:"&ascr;","*":"&midast;",ã:"&atilde;",ä:"&auml;","⨑":"&awint;","⫭":"&bNot;","≌":"&bcong;","϶":"&bepsi;","‵":"&bprime;","∽":"&bsim;","⋍":"&bsime;","⊽":"&barvee;","⌅":"&barwedge;","⎶":"&bbrktbrk;",б:"&bcy;","„":"&ldquor;","⦰":"&bemptyv;",β:"&beta;",ℶ:"&beth;","≬":"&twixt;",𝔟:"&bfr;","◯":"&xcirc;","⨀":"&xodot;","⨁":"&xoplus;","⨂":"&xotime;","⨆":"&xsqcup;","★":"&starf;","▽":"&xdtri;","△":"&xutri;","⨄":"&xuplus;","⤍":"&rbarr;","⧫":"&lozf;","▴":"&utrif;","▾":"&dtrif;","◂":"&ltrif;","▸":"&rtrif;","␣":"&blank;","▒":"&blk12;","░":"&blk14;","▓":"&blk34;","█":"&block;","=⃥":"&bne;","≡⃥":"&bnequiv;","⌐":"&bnot;",𝕓:"&bopf;","⋈":"&bowtie;","╗":"&boxDL;","╔":"&boxDR;","╖":"&boxDl;","╓":"&boxDr;","═":"&boxH;","╦":"&boxHD;","╩":"&boxHU;","╤":"&boxHd;","╧":"&boxHu;","╝":"&boxUL;","╚":"&boxUR;","╜":"&boxUl;","╙":"&boxUr;","║":"&boxV;","╬":"&boxVH;","╣":"&boxVL;","╠":"&boxVR;","╫":"&boxVh;","╢":"&boxVl;","╟":"&boxVr;","⧉":"&boxbox;","╕":"&boxdL;","╒":"&boxdR;","┐":"&boxdl;","┌":"&boxdr;","╥":"&boxhD;","╨":"&boxhU;","┬":"&boxhd;","┴":"&boxhu;","⊟":"&minusb;","⊞":"&plusb;","⊠":"&timesb;","╛":"&boxuL;","╘":"&boxuR;","┘":"&boxul;","└":"&boxur;","│":"&boxv;","╪":"&boxvH;","╡":"&boxvL;","╞":"&boxvR;","┼":"&boxvh;","┤":"&boxvl;","├":"&boxvr;","¦":"&brvbar;",𝒷:"&bscr;","⁏":"&bsemi;","\\":"&bsol;","⧅":"&bsolb;","⟈":"&bsolhsub;","•":"&bullet;","⪮":"&bumpE;",ć:"&cacute;","∩":"&cap;","⩄":"&capand;","⩉":"&capbrcup;","⩋":"&capcap;","⩇":"&capcup;","⩀":"&capdot;","∩︀":"&caps;","⁁":"&caret;","⩍":"&ccaps;",č:"&ccaron;",ç:"&ccedil;",ĉ:"&ccirc;","⩌":"&ccups;","⩐":"&ccupssm;",ċ:"&cdot;","⦲":"&cemptyv;","¢":"&cent;",𝔠:"&cfr;",ч:"&chcy;","✓":"&checkmark;",χ:"&chi;","○":"&cir;","⧃":"&cirE;",ˆ:"&circ;","≗":"&cire;","↺":"&olarr;","↻":"&orarr;","Ⓢ":"&oS;","⊛":"&oast;","⊚":"&ocir;","⊝":"&odash;","⨐":"&cirfnint;","⫯":"&cirmid;","⧂":"&cirscir;","♣":"&clubsuit;",":":"&colon;",",":"&comma;","@":"&commat;","∁":"&complement;","⩭":"&congdot;",𝕔:"&copf;","℗":"&copysr;","↵":"&crarr;","✗":"&cross;",𝒸:"&cscr;","⫏":"&csub;","⫑":"&csube;","⫐":"&csup;","⫒":"&csupe;","⋯":"&ctdot;","⤸":"&cudarrl;","⤵":"&cudarrr;","⋞":"&curlyeqprec;","⋟":"&curlyeqsucc;","↶":"&curvearrowleft;","⤽":"&cularrp;","∪":"&cup;","⩈":"&cupbrcap;","⩆":"&cupcap;","⩊":"&cupcup;","⊍":"&cupdot;","⩅":"&cupor;","∪︀":"&cups;","↷":"&curvearrowright;","⤼":"&curarrm;","⋎":"&cuvee;","⋏":"&cuwed;","¤":"&curren;","∱":"&cwint;","⌭":"&cylcty;","⥥":"&dHar;","†":"&dagger;",ℸ:"&daleth;","‐":"&hyphen;","⤏":"&rBarr;",ď:"&dcaron;",д:"&dcy;","⇊":"&downdownarrows;","⩷":"&eDDot;","°":"&deg;",δ:"&delta;","⦱":"&demptyv;","⥿":"&dfisht;",𝔡:"&dfr;","♦":"&diams;",ϝ:"&gammad;","⋲":"&disin;","÷":"&divide;","⋇":"&divonx;",ђ:"&djcy;","⌞":"&llcorner;","⌍":"&dlcrop;",$:"&dollar;",𝕕:"&dopf;","≑":"&eDot;","∸":"&minusd;","∔":"&plusdo;","⊡":"&sdotb;","⌟":"&lrcorner;","⌌":"&drcrop;",𝒹:"&dscr;",ѕ:"&dscy;","⧶":"&dsol;",đ:"&dstrok;","⋱":"&dtdot;","▿":"&triangledown;","⦦":"&dwangle;",џ:"&dzcy;","⟿":"&dzigrarr;",é:"&eacute;","⩮":"&easter;",ě:"&ecaron;","≖":"&eqcirc;",ê:"&ecirc;","≕":"&eqcolon;",э:"&ecy;",ė:"&edot;","≒":"&fallingdotseq;",𝔢:"&efr;","⪚":"&eg;",è:"&egrave;","⪖":"&eqslantgtr;","⪘":"&egsdot;","⪙":"&el;","⏧":"&elinters;",ℓ:"&ell;","⪕":"&eqslantless;","⪗":"&elsdot;",ē:"&emacr;","∅":"&varnothing;"," ":"&emsp13;"," ":"&emsp14;"," ":"&emsp;",ŋ:"&eng;"," ":"&ensp;",ę:"&eogon;",𝕖:"&eopf;","⋕":"&epar;","⧣":"&eparsl;","⩱":"&eplus;",ε:"&epsilon;",ϵ:"&varepsilon;","=":"&equals;","≟":"&questeq;","⩸":"&equivDD;","⧥":"&eqvparsl;","≓":"&risingdotseq;","⥱":"&erarr;",ℯ:"&escr;",η:"&eta;",ð:"&eth;",ë:"&euml;","€":"&euro;","!":"&excl;",ф:"&fcy;","♀":"&female;",ﬃ:"&ffilig;",ﬀ:"&fflig;",ﬄ:"&ffllig;",𝔣:"&ffr;",ﬁ:"&filig;",fj:"&fjlig;","♭":"&flat;",ﬂ:"&fllig;","▱":"&fltns;",ƒ:"&fnof;",𝕗:"&fopf;","⋔":"&pitchfork;","⫙":"&forkv;","⨍":"&fpartint;","½":"&half;","⅓":"&frac13;","¼":"&frac14;","⅕":"&frac15;","⅙":"&frac16;","⅛":"&frac18;","⅔":"&frac23;","⅖":"&frac25;","¾":"&frac34;","⅗":"&frac35;","⅜":"&frac38;","⅘":"&frac45;","⅚":"&frac56;","⅝":"&frac58;","⅞":"&frac78;","⁄":"&frasl;","⌢":"&sfrown;",𝒻:"&fscr;","⪌":"&gtreqqless;",ǵ:"&gacute;",γ:"&gamma;","⪆":"&gtrapprox;",ğ:"&gbreve;",ĝ:"&gcirc;",г:"&gcy;",ġ:"&gdot;","⪩":"&gescc;","⪀":"&gesdot;","⪂":"&gesdoto;","⪄":"&gesdotol;","⋛︀":"&gesl;","⪔":"&gesles;",𝔤:"&gfr;",ℷ:"&gimel;",ѓ:"&gjcy;","⪒":"&glE;","⪥":"&gla;","⪤":"&glj;","≩":"&gneqq;","⪊":"&gnapprox;","⪈":"&gneq;","⋧":"&gnsim;",𝕘:"&gopf;",ℊ:"&gscr;","⪎":"&gsime;","⪐":"&gsiml;","⪧":"&gtcc;","⩺":"&gtcir;","⋗":"&gtrdot;","⦕":"&gtlPar;","⩼":"&gtquest;","⥸":"&gtrarr;","≩︀":"&gvnE;",ъ:"&hardcy;","⥈":"&harrcir;","↭":"&leftrightsquigarrow;",ℏ:"&plankv;",ĥ:"&hcirc;","♥":"&heartsuit;","…":"&mldr;","⊹":"&hercon;",𝔥:"&hfr;","⤥":"&searhk;","⤦":"&swarhk;","⇿":"&hoarr;","∻":"&homtht;","↩":"&larrhk;","↪":"&rarrhk;",𝕙:"&hopf;","―":"&horbar;",𝒽:"&hscr;",ħ:"&hstrok;","⁃":"&hybull;",í:"&iacute;",î:"&icirc;",и:"&icy;",е:"&iecy;","¡":"&iexcl;",𝔦:"&ifr;",ì:"&igrave;","⨌":"&qint;","∭":"&tint;","⧜":"&iinfin;","℩":"&iiota;",ĳ:"&ijlig;",ī:"&imacr;",ı:"&inodot;","⊷":"&imof;",Ƶ:"&imped;","℅":"&incare;","∞":"&infin;","⧝":"&infintie;","⊺":"&intercal;","⨗":"&intlarhk;","⨼":"&iprod;",ё:"&iocy;",į:"&iogon;",𝕚:"&iopf;",ι:"&iota;","¿":"&iquest;",𝒾:"&iscr;","⋹":"&isinE;","⋵":"&isindot;","⋴":"&isins;","⋳":"&isinsv;",ĩ:"&itilde;",і:"&iukcy;",ï:"&iuml;",ĵ:"&jcirc;",й:"&jcy;",𝔧:"&jfr;",ȷ:"&jmath;",𝕛:"&jopf;",𝒿:"&jscr;",ј:"&jsercy;",є:"&jukcy;",κ:"&kappa;",ϰ:"&varkappa;",ķ:"&kcedil;",к:"&kcy;",𝔨:"&kfr;",ĸ:"&kgreen;",х:"&khcy;",ќ:"&kjcy;",𝕜:"&kopf;",𝓀:"&kscr;","⤛":"&lAtail;","⤎":"&lBarr;","⪋":"&lesseqqgtr;","⥢":"&lHar;",ĺ:"&lacute;","⦴":"&laemptyv;",λ:"&lambda;","⦑":"&langd;","⪅":"&lessapprox;","«":"&laquo;","⤟":"&larrbfs;","⤝":"&larrfs;","↫":"&looparrowleft;","⤹":"&larrpl;","⥳":"&larrsim;","↢":"&leftarrowtail;","⪫":"&lat;","⤙":"&latail;","⪭":"&late;","⪭︀":"&lates;","⤌":"&lbarr;","❲":"&lbbrk;","{":"&lcub;","[":"&lsqb;","⦋":"&lbrke;","⦏":"&lbrksld;","⦍":"&lbrkslu;",ľ:"&lcaron;",ļ:"&lcedil;",л:"&lcy;","⤶":"&ldca;","⥧":"&ldrdhar;","⥋":"&ldrushar;","↲":"&ldsh;","≤":"&leq;","⇇":"&llarr;","⋋":"&lthree;","⪨":"&lescc;","⩿":"&lesdot;","⪁":"&lesdoto;","⪃":"&lesdotor;","⋚︀":"&lesg;","⪓":"&lesges;","⋖":"&ltdot;","⥼":"&lfisht;",𝔩:"&lfr;","⪑":"&lgE;","⥪":"&lharul;","▄":"&lhblk;",љ:"&ljcy;","⥫":"&llhard;","◺":"&lltri;",ŀ:"&lmidot;","⎰":"&lmoustache;","≨":"&lneqq;","⪉":"&lnapprox;","⪇":"&lneq;","⋦":"&lnsim;","⟬":"&loang;","⇽":"&loarr;","⟼":"&xmap;","↬":"&rarrlp;","⦅":"&lopar;",𝕝:"&lopf;","⨭":"&loplus;","⨴":"&lotimes;","∗":"&lowast;","◊":"&lozenge;","(":"&lpar;","⦓":"&lparlt;","⥭":"&lrhard;","‎":"&lrm;","⊿":"&lrtri;","‹":"&lsaquo;",𝓁:"&lscr;","⪍":"&lsime;","⪏":"&lsimg;","‚":"&sbquo;",ł:"&lstrok;","⪦":"&ltcc;","⩹":"&ltcir;","⋉":"&ltimes;","⥶":"&ltlarr;","⩻":"&ltquest;","⦖":"&ltrPar;","◃":"&triangleleft;","⥊":"&lurdshar;","⥦":"&luruhar;","≨︀":"&lvnE;","∺":"&mDDot;","¯":"&strns;","♂":"&male;","✠":"&maltese;","▮":"&marker;","⨩":"&mcomma;",м:"&mcy;","—":"&mdash;",𝔪:"&mfr;","℧":"&mho;",µ:"&micro;","⫰":"&midcir;","−":"&minus;","⨪":"&minusdu;","⫛":"&mlcp;","⊧":"&models;",𝕞:"&mopf;",𝓂:"&mscr;",μ:"&mu;","⊸":"&mumap;","⋙̸":"&nGg;","≫⃒":"&nGt;","⇍":"&nlArr;","⇎":"&nhArr;","⋘̸":"&nLl;","≪⃒":"&nLt;","⇏":"&nrArr;","⊯":"&nVDash;","⊮":"&nVdash;",ń:"&nacute;","∠⃒":"&nang;","⩰̸":"&napE;","≋̸":"&napid;",ŉ:"&napos;","♮":"&natural;","⩃":"&ncap;",ň:"&ncaron;",ņ:"&ncedil;","⩭̸":"&ncongdot;","⩂":"&ncup;",н:"&ncy;","–":"&ndash;","⇗":"&neArr;","⤤":"&nearhk;","≐̸":"&nedot;","⤨":"&toea;",𝔫:"&nfr;","↮":"&nleftrightarrow;","⫲":"&nhpar;","⋼":"&nis;","⋺":"&nisd;",њ:"&njcy;","≦̸":"&nleqq;","↚":"&nleftarrow;","‥":"&nldr;",𝕟:"&nopf;","¬":"&not;","⋹̸":"&notinE;","⋵̸":"&notindot;","⋷":"&notinvb;","⋶":"&notinvc;","⋾":"&notnivb;","⋽":"&notnivc;","⫽⃥":"&nparsl;","∂̸":"&npart;","⨔":"&npolint;","↛":"&nrightarrow;","⤳̸":"&nrarrc;","↝̸":"&nrarrw;",𝓃:"&nscr;","⊄":"&nsub;","⫅̸":"&nsubseteqq;","⊅":"&nsup;","⫆̸":"&nsupseteqq;",ñ:"&ntilde;",ν:"&nu;","#":"&num;","№":"&numero;"," ":"&numsp;","⊭":"&nvDash;","⤄":"&nvHarr;","≍⃒":"&nvap;","⊬":"&nvdash;","≥⃒":"&nvge;",">⃒":"&nvgt;","⧞":"&nvinfin;","⤂":"&nvlArr;","≤⃒":"&nvle;","<⃒":"&nvlt;","⊴⃒":"&nvltrie;","⤃":"&nvrArr;","⊵⃒":"&nvrtrie;","∼⃒":"&nvsim;","⇖":"&nwArr;","⤣":"&nwarhk;","⤧":"&nwnear;",ó:"&oacute;",ô:"&ocirc;",о:"&ocy;",ő:"&odblac;","⨸":"&odiv;","⦼":"&odsold;",œ:"&oelig;","⦿":"&ofcir;",𝔬:"&ofr;","˛":"&ogon;",ò:"&ograve;","⧁":"&ogt;","⦵":"&ohbar;","⦾":"&olcir;","⦻":"&olcross;","⧀":"&olt;",ō:"&omacr;",ω:"&omega;",ο:"&omicron;","⦶":"&omid;",𝕠:"&oopf;","⦷":"&opar;","⦹":"&operp;","∨":"&vee;","⩝":"&ord;",ℴ:"&oscr;",ª:"&ordf;",º:"&ordm;","⊶":"&origof;","⩖":"&oror;","⩗":"&orslope;","⩛":"&orv;",ø:"&oslash;","⊘":"&osol;",õ:"&otilde;","⨶":"&otimesas;",ö:"&ouml;","⌽":"&ovbar;","¶":"&para;","⫳":"&parsim;","⫽":"&parsl;",п:"&pcy;","%":"&percnt;",".":"&period;","‰":"&permil;","‱":"&pertenk;",𝔭:"&pfr;",φ:"&phi;",ϕ:"&varphi;","☎":"&phone;",π:"&pi;",ϖ:"&varpi;",ℎ:"&planckh;","+":"&plus;","⨣":"&plusacir;","⨢":"&pluscir;","⨥":"&plusdu;","⩲":"&pluse;","⨦":"&plussim;","⨧":"&plustwo;","⨕":"&pointint;",𝕡:"&popf;","£":"&pound;","⪳":"&prE;","⪷":"&precapprox;","⪹":"&prnap;","⪵":"&prnE;","⋨":"&prnsim;","′":"&prime;","⌮":"&profalar;","⌒":"&profline;","⌓":"&profsurf;","⊰":"&prurel;",𝓅:"&pscr;",ψ:"&psi;"," ":"&puncsp;",𝔮:"&qfr;",𝕢:"&qopf;","⁗":"&qprime;",𝓆:"&qscr;","⨖":"&quatint;","?":"&quest;","⤜":"&rAtail;","⥤":"&rHar;","∽̱":"&race;",ŕ:"&racute;","⦳":"&raemptyv;","⦒":"&rangd;","⦥":"&range;","»":"&raquo;","⥵":"&rarrap;","⤠":"&rarrbfs;","⤳":"&rarrc;","⤞":"&rarrfs;","⥅":"&rarrpl;","⥴":"&rarrsim;","↣":"&rightarrowtail;","↝":"&rightsquigarrow;","⤚":"&ratail;","∶":"&ratio;","❳":"&rbbrk;","}":"&rcub;","]":"&rsqb;","⦌":"&rbrke;","⦎":"&rbrksld;","⦐":"&rbrkslu;",ř:"&rcaron;",ŗ:"&rcedil;",р:"&rcy;","⤷":"&rdca;","⥩":"&rdldhar;","↳":"&rdsh;","▭":"&rect;","⥽":"&rfisht;",𝔯:"&rfr;","⥬":"&rharul;",ρ:"&rho;",ϱ:"&varrho;","⇉":"&rrarr;","⋌":"&rthree;","˚":"&ring;","‏":"&rlm;","⎱":"&rmoustache;","⫮":"&rnmid;","⟭":"&roang;","⇾":"&roarr;","⦆":"&ropar;",𝕣:"&ropf;","⨮":"&roplus;","⨵":"&rotimes;",")":"&rpar;","⦔":"&rpargt;","⨒":"&rppolint;","›":"&rsaquo;",𝓇:"&rscr;","⋊":"&rtimes;","▹":"&triangleright;","⧎":"&rtriltri;","⥨":"&ruluhar;","℞":"&rx;",ś:"&sacute;","⪴":"&scE;","⪸":"&succapprox;",š:"&scaron;",ş:"&scedil;",ŝ:"&scirc;","⪶":"&succneqq;","⪺":"&succnapprox;","⋩":"&succnsim;","⨓":"&scpolint;",с:"&scy;","⋅":"&sdot;","⩦":"&sdote;","⇘":"&seArr;","§":"&sect;",";":"&semi;","⤩":"&tosa;","✶":"&sext;",𝔰:"&sfr;","♯":"&sharp;",щ:"&shchcy;",ш:"&shcy;","­":"&shy;",σ:"&sigma;",ς:"&varsigma;","⩪":"&simdot;","⪞":"&simg;","⪠":"&simgE;","⪝":"&siml;","⪟":"&simlE;","≆":"&simne;","⨤":"&simplus;","⥲":"&simrarr;","⨳":"&smashp;","⧤":"&smeparsl;","⌣":"&ssmile;","⪪":"&smt;","⪬":"&smte;","⪬︀":"&smtes;",ь:"&softcy;","/":"&sol;","⧄":"&solb;","⌿":"&solbar;",𝕤:"&sopf;","♠":"&spadesuit;","⊓︀":"&sqcaps;","⊔︀":"&sqcups;",𝓈:"&sscr;","☆":"&star;","⊂":"&subset;","⫅":"&subseteqq;","⪽":"&subdot;","⫃":"&subedot;","⫁":"&submult;","⫋":"&subsetneqq;","⊊":"&subsetneq;","⪿":"&subplus;","⥹":"&subrarr;","⫇":"&subsim;","⫕":"&subsub;","⫓":"&subsup;","♪":"&sung;","¹":"&sup1;","²":"&sup2;","³":"&sup3;","⫆":"&supseteqq;","⪾":"&supdot;","⫘":"&supdsub;","⫄":"&supedot;","⟉":"&suphsol;","⫗":"&suphsub;","⥻":"&suplarr;","⫂":"&supmult;","⫌":"&supsetneqq;","⊋":"&supsetneq;","⫀":"&supplus;","⫈":"&supsim;","⫔":"&supsub;","⫖":"&supsup;","⇙":"&swArr;","⤪":"&swnwar;",ß:"&szlig;","⌖":"&target;",τ:"&tau;",ť:"&tcaron;",ţ:"&tcedil;",т:"&tcy;","⌕":"&telrec;",𝔱:"&tfr;",θ:"&theta;",ϑ:"&vartheta;",þ:"&thorn;","×":"&times;","⨱":"&timesbar;","⨰":"&timesd;","⌶":"&topbot;","⫱":"&topcir;",𝕥:"&topf;","⫚":"&topfork;","‴":"&tprime;","▵":"&utri;","≜":"&trie;","◬":"&tridot;","⨺":"&triminus;","⨹":"&triplus;","⧍":"&trisb;","⨻":"&tritime;","⏢":"&trpezium;",𝓉:"&tscr;",ц:"&tscy;",ћ:"&tshcy;",ŧ:"&tstrok;","⥣":"&uHar;",ú:"&uacute;",ў:"&ubrcy;",ŭ:"&ubreve;",û:"&ucirc;",у:"&ucy;",ű:"&udblac;","⥾":"&ufisht;",𝔲:"&ufr;",ù:"&ugrave;","▀":"&uhblk;","⌜":"&ulcorner;","⌏":"&ulcrop;","◸":"&ultri;",ū:"&umacr;",ų:"&uogon;",𝕦:"&uopf;",υ:"&upsilon;","⇈":"&uuarr;","⌝":"&urcorner;","⌎":"&urcrop;",ů:"&uring;","◹":"&urtri;",𝓊:"&uscr;","⋰":"&utdot;",ũ:"&utilde;",ü:"&uuml;","⦧":"&uwangle;","⫨":"&vBar;","⫩":"&vBarv;","⦜":"&vangrt;","⊊︀":"&vsubne;","⫋︀":"&vsubnE;","⊋︀":"&vsupne;","⫌︀":"&vsupnE;",в:"&vcy;","⊻":"&veebar;","≚":"&veeeq;","⋮":"&vellip;",𝔳:"&vfr;",𝕧:"&vopf;",𝓋:"&vscr;","⦚":"&vzigzag;",ŵ:"&wcirc;","⩟":"&wedbar;","≙":"&wedgeq;",℘:"&wp;",𝔴:"&wfr;",𝕨:"&wopf;",𝓌:"&wscr;",𝔵:"&xfr;",ξ:"&xi;","⋻":"&xnis;",𝕩:"&xopf;",𝓍:"&xscr;",ý:"&yacute;",я:"&yacy;",ŷ:"&ycirc;",ы:"&ycy;","¥":"&yen;",𝔶:"&yfr;",ї:"&yicy;",𝕪:"&yopf;",𝓎:"&yscr;",ю:"&yucy;",ÿ:"&yuml;",ź:"&zacute;",ž:"&zcaron;",з:"&zcy;",ż:"&zdot;",ζ:"&zeta;",𝔷:"&zfr;",ж:"&zhcy;","⇝":"&zigrarr;",𝕫:"&zopf;",𝓏:"&zscr;","‍":"&zwj;","‌":"&zwnj;"}}}},762:(e,r)=>{Object.defineProperty(r,"__esModule",{value:!0}),r.numericUnicodeMap={0:65533,128:8364,130:8218,131:402,132:8222,133:8230,134:8224,135:8225,136:710,137:8240,138:352,139:8249,140:338,142:381,145:8216,146:8217,147:8220,148:8221,149:8226,150:8211,151:8212,152:732,153:8482,154:353,155:8250,156:339,158:382,159:376}},826:(e,r)=>{Object.defineProperty(r,"__esModule",{value:!0}),r.fromCodePoint=String.fromCodePoint||function(e){return String.fromCharCode(Math.floor((e-65536)/1024)+55296,(e-65536)%1024+56320)},r.getCodePoint=String.prototype.codePointAt?function(e,r){return e.codePointAt(r)}:function(e,r){return 1024*(e.charCodeAt(r)-55296)+e.charCodeAt(r+1)-56320+65536},r.highSurrogateFrom=55296,r.highSurrogateTo=56319},338:(e,r,t)=>{var n=t(795);r.H=n.createRoot,n.hydrateRoot},20:(e,r,t)=>{var n=t(609),a=Symbol.for("react.element"),i=(Symbol.for("react.fragment"),Object.prototype.hasOwnProperty),s=n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,o={key:!0,ref:!0,__self:!0,__source:!0};r.jsx=function(e,r,t){var n,u={},l=null,c=null;for(n in void 0!==t&&(l=""+t),void 0!==r.key&&(l=""+r.key),void 0!==r.ref&&(c=r.ref),r)i.call(r,n)&&!o.hasOwnProperty(n)&&(u[n]=r[n]);if(e&&e.defaultProps)for(n in r=e.defaultProps)void 0===u[n]&&(u[n]=r[n]);return{$$typeof:a,type:e,key:l,ref:c,props:u,_owner:s.current}}},848:(e,r,t)=>{e.exports=t(20)},844:e=>{function r(e){return e instanceof Buffer?Buffer.from(e):new e.constructor(e.buffer.slice(),e.byteOffset,e.length)}e.exports=function(e){return(e=e||{}).circles?function(e){var t=[],n=[];return e.proto?function e(i){if("object"!=typeof i||null===i)return i;if(i instanceof Date)return new Date(i);if(Array.isArray(i))return a(i,e);if(i instanceof Map)return new Map(a(Array.from(i),e));if(i instanceof Set)return new Set(a(Array.from(i),e));var s={};for(var o in t.push(i),n.push(s),i){var u=i[o];if("object"!=typeof u||null===u)s[o]=u;else if(u instanceof Date)s[o]=new Date(u);else if(u instanceof Map)s[o]=new Map(a(Array.from(u),e));else if(u instanceof Set)s[o]=new Set(a(Array.from(u),e));else if(ArrayBuffer.isView(u))s[o]=r(u);else{var l=t.indexOf(u);s[o]=-1!==l?n[l]:e(u)}}return t.pop(),n.pop(),s}:function e(i){if("object"!=typeof i||null===i)return i;if(i instanceof Date)return new Date(i);if(Array.isArray(i))return a(i,e);if(i instanceof Map)return new Map(a(Array.from(i),e));if(i instanceof Set)return new Set(a(Array.from(i),e));var s={};for(var o in t.push(i),n.push(s),i)if(!1!==Object.hasOwnProperty.call(i,o)){var u=i[o];if("object"!=typeof u||null===u)s[o]=u;else if(u instanceof Date)s[o]=new Date(u);else if(u instanceof Map)s[o]=new Map(a(Array.from(u),e));else if(u instanceof Set)s[o]=new Set(a(Array.from(u),e));else if(ArrayBuffer.isView(u))s[o]=r(u);else{var l=t.indexOf(u);s[o]=-1!==l?n[l]:e(u)}}return t.pop(),n.pop(),s};function a(e,a){for(var i=Object.keys(e),s=new Array(i.length),o=0;o<i.length;o++){var u=i[o],l=e[u];if("object"!=typeof l||null===l)s[u]=l;else if(l instanceof Date)s[u]=new Date(l);else if(ArrayBuffer.isView(l))s[u]=r(l);else{var c=t.indexOf(l);s[u]=-1!==c?n[c]:a(l)}}return s}}(e):e.proto?function e(n){if("object"!=typeof n||null===n)return n;if(n instanceof Date)return new Date(n);if(Array.isArray(n))return t(n,e);if(n instanceof Map)return new Map(t(Array.from(n),e));if(n instanceof Set)return new Set(t(Array.from(n),e));var a={};for(var i in n){var s=n[i];"object"!=typeof s||null===s?a[i]=s:s instanceof Date?a[i]=new Date(s):s instanceof Map?a[i]=new Map(t(Array.from(s),e)):s instanceof Set?a[i]=new Set(t(Array.from(s),e)):ArrayBuffer.isView(s)?a[i]=r(s):a[i]=e(s)}return a}:function e(n){if("object"!=typeof n||null===n)return n;if(n instanceof Date)return new Date(n);if(Array.isArray(n))return t(n,e);if(n instanceof Map)return new Map(t(Array.from(n),e));if(n instanceof Set)return new Set(t(Array.from(n),e));var a={};for(var i in n)if(!1!==Object.hasOwnProperty.call(n,i)){var s=n[i];"object"!=typeof s||null===s?a[i]=s:s instanceof Date?a[i]=new Date(s):s instanceof Map?a[i]=new Map(t(Array.from(s),e)):s instanceof Set?a[i]=new Set(t(Array.from(s),e)):ArrayBuffer.isView(s)?a[i]=r(s):a[i]=e(s)}return a};function t(e,t){for(var n=Object.keys(e),a=new Array(n.length),i=0;i<n.length;i++){var s=n[i],o=e[s];"object"!=typeof o||null===o?a[s]=o:o instanceof Date?a[s]=new Date(o):ArrayBuffer.isView(o)?a[s]=r(o):a[s]=t(o)}return a}}},609:e=>{e.exports=window.React},795:e=>{e.exports=window.ReactDOM}},r={};function t(n){var a=r[n];if(void 0!==a)return a.exports;var i=r[n]={exports:{}};return e[n].call(i.exports,i,i.exports,t),i.exports}t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var r=t.g.document;if(!e&&r&&(r.currentScript&&(e=r.currentScript.src),!e)){var n=r.getElementsByTagName("script");if(n.length)for(var a=n.length-1;a>-1&&(!e||!/^http(s?):/.test(e));)e=n[a--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e+"../"})(),(()=>{var e=t(609),r=t(338);const n=function(r){var t,n=(0,e.useRef)(r);n.current=r,t=function(){return function(){return n.current()}},(0,e.useEffect)(t,[])},a=window.wp.blocks,i=window.wp.data,s=window.wp.coreData,o=window.wp.editor,u=window.wp.i18n,l=window.wp.element;var c=t(848);function p(e){return{__:e.__.bind(e),_x:e._x.bind(e),_n:e._n.bind(e),_nx:e._nx.bind(e),isRTL:e.isRTL.bind(e),hasTranslation:e.hasTranslation.bind(e)}}const g=(0,l.createContext)(p(u.defaultI18n));function f(e){const{children:r,i18n:t=u.defaultI18n}=e,[n,a]=(0,l.useReducer)((()=>[]),[]);(0,l.useEffect)((()=>t.subscribe(a)),[t]);const i=(0,l.useMemo)((()=>p(t)),[t,n]);return(0,c.jsx)(g.Provider,{value:i,children:r})}var d=t(844);function m(e){if(null==e||"object"!=typeof e)return!1;let r=Object.getPrototypeOf(e);return!(null!==r&&r!==Object.prototype&&null!==Object.getPrototypeOf(r)||Symbol.iterator in e||Symbol.toStringTag in e)}function h(e){return"string"==typeof e}function b(e){return Number.isSafeInteger(e)&&e>=0}function y(e){return null!=e}d(),new Set(["a","abbr","acronym","audio","b","bdi","bdo","big","br","button","canvas","cite","code","data","datalist","del","dfn","em","embed","i","iframe","img","input","ins","kbd","label","map","mark","meter","noscript","object","output","picture","progress","q","ruby","s","samp","script","select","slot","small","span","strong","sub","sup","svg","template","textarea","time","u","tt","var","video","wbr"]);const v=window.lodash;var w=t(376),q={strictlyTwoElementsInRangeArrays:!1,progressFn:null};function A(e,r){if(!Array.isArray(e)||!e.length)return e;let t,n,a={...q,...r};if(a.strictlyTwoElementsInRangeArrays&&!e.every(((e,r)=>!(!Array.isArray(e)||2!==e.length)||(t=r,n=e.length,!1))))throw new TypeError(`ranges-sort: [THROW_ID_03] The first argument should be an array and must consist of arrays which are natural number indexes representing TWO string index ranges. However, ${t}th range (${JSON.stringify(e[t],null,4)}) has not two but ${n} elements!`);if(!e.every(((e,r)=>!(!Array.isArray(e)||!Number.isInteger(e[0])||e[0]<0||!Number.isInteger(e[1])||e[1]<0)||(t=r,!1))))throw new TypeError(`ranges-sort: [THROW_ID_04] The first argument should be an array and must consist of arrays which are natural number indexes representing string index ranges. However, ${t}th range (${JSON.stringify(e[t],null,4)}) does not consist of only natural numbers!`);let i=e.length**2,s=0;return Array.from(e).sort(((e,r)=>(a.progressFn&&(s+=1,a.progressFn(Math.floor(100*s/i))),e[0]===r[0]?e[1]<r[1]?-1:e[1]>r[1]?1:0:e[0]<r[0]?-1:1)))}var x={mergeType:1,progressFn:null,joinRangesThatTouchEdges:!0},E=!0,T="Invariant failed";function O(e,r,t){let n,a=0,i=0;if(0===arguments.length)throw new Error("ranges-apply: [THROW_ID_01] inputs missing!");if("string"!=typeof e)throw new TypeError(`ranges-apply: [THROW_ID_02] first input argument must be a string! Currently it's: ${typeof e}, equal to: ${JSON.stringify(e,null,4)}`);if(r&&!Array.isArray(r))throw new TypeError(`ranges-apply: [THROW_ID_03] second input argument must be an array (or null)! Currently it's: ${typeof r}, equal to: ${JSON.stringify(r,null,4)}`);if(t&&"function"!=typeof t)throw new TypeError(`ranges-apply: [THROW_ID_04] the third input argument must be a function (or falsey)! Currently it's: ${typeof t}, equal to: ${JSON.stringify(t,null,4)}`);if(!r?.filter((e=>e)).length)return e;n=Array.isArray(r)&&Number.isInteger(r[0])&&Number.isInteger(r[1])?[Array.from(r)]:Array.from(r);let s=n.length,o=0;n.filter((e=>e)).forEach(((e,r)=>{if(t&&(a=Math.floor(o/s*10),a!==i&&(i=a,t(a))),!Array.isArray(e))throw new TypeError(`ranges-apply: [THROW_ID_05] ranges array, second input arg., has ${r}th element not an array: ${JSON.stringify(e,null,4)}, which is ${typeof e}`);if(!Number.isInteger(e[0])){if(!Number.isInteger(+e[0])||+e[0]<0)throw new TypeError(`ranges-apply: [THROW_ID_06] ranges array, second input arg. has ${r}th element, array ${JSON.stringify(e,null,0)}. Its first element is not an integer, string index, but ${typeof e[0]}, equal to: ${JSON.stringify(e[0],null,4)}.`);n[r][0]=+n[r][0]}if(!Number.isInteger(e[1])){if(!Number.isInteger(+e[1])||+e[1]<0)throw new TypeError(`ranges-apply: [THROW_ID_07] ranges array, second input arg. has ${r}th element, array ${JSON.stringify(e,null,0)}. Its second element is not an integer, string index, but ${typeof e[1]}, equal to: ${JSON.stringify(e[1],null,4)}.`);n[r][1]=+n[r][1]}o+=1}));let u=function(e,r){function t(e){return!!e&&"object"==typeof e&&!Array.isArray(e)}if(!Array.isArray(e)||!e.length)return null;let n;if(r){if(!t(r))throw new Error(`emlint: [THROW_ID_03] the second input argument must be a plain object. It was given as:\n${JSON.stringify(r,null,4)} (type ${typeof r})`);if(n={...x,...r},n.progressFn&&t(n.progressFn)&&!Object.keys(n.progressFn).length)n.progressFn=null;else if(n.progressFn&&"function"!=typeof n.progressFn)throw new Error(`ranges-merge: [THROW_ID_01] opts.progressFn must be a function! It was given of a type: "${typeof n.progressFn}", equal to ${JSON.stringify(n.progressFn,null,4)}`);if(![1,2,"1","2"].includes(n.mergeType))throw new Error(`ranges-merge: [THROW_ID_02] opts.mergeType was customised to a wrong thing! It was given of a type: "${typeof n.mergeType}", equal to ${JSON.stringify(n.mergeType,null,4)}`);if("boolean"!=typeof n.joinRangesThatTouchEdges)throw new Error(`ranges-merge: [THROW_ID_04] opts.joinRangesThatTouchEdges was customised to a wrong thing! It was given of a type: "${typeof n.joinRangesThatTouchEdges}", equal to ${JSON.stringify(n.joinRangesThatTouchEdges,null,4)}`)}else n={...x};let a,i,s,o=e.filter((e=>Array.isArray(e))).map((e=>[...e])).filter((e=>void 0!==e[2]||e[0]!==e[1]));a=n.progressFn?A(o,{progressFn:e=>{s=Math.floor(e/5),s!==i&&(i=s,n.progressFn(s))}}):A(o);let u=a.length-1;for(let e=u;e>0;e--)n.progressFn&&(s=Math.floor(78*(1-e/u))+21,s!==i&&s>i&&(i=s,n.progressFn(s))),(a[e][0]<=a[e-1][0]||!n.joinRangesThatTouchEdges&&a[e][0]<a[e-1][1]||n.joinRangesThatTouchEdges&&a[e][0]<=a[e-1][1])&&(a[e-1][0]=Math.min(a[e][0],a[e-1][0]),a[e-1][1]=Math.max(a[e][1],a[e-1][1]),void 0!==a[e][2]&&(a[e-1][0]>=a[e][0]||a[e-1][1]<=a[e][1])&&null!==a[e-1][2]&&(null===a[e][2]&&null!==a[e-1][2]?a[e-1][2]=null:null!=a[e-1][2]?2==+n.mergeType&&a[e-1][0]===a[e][0]?a[e-1][2]=a[e][2]:a[e-1][2]+=a[e][2]:a[e-1][2]=a[e][2]),a.splice(e,1),e=a.length);return a.length?a:null}(n,{progressFn:e=>{t&&(a=10+Math.floor(e/10),a!==i&&(i=a,t(a)))}});!function(e,r){if(!e){if(E)throw new Error(T);throw new Error(T)}}(u);let l=u.length;if(l>0){let r=e.slice(u[l-1][1]);e=u.reduce(((r,n,s,o)=>{t&&(a=20+Math.floor(s/l*80),a!==i&&(i=a,t(a)));let u=0===s?0:o[s-1][1],c=o[s][0];return`${r}${e.slice(u,c)}${o[s][2]||""}`}),""),e+=r}return e}function k(e,r=1){function t(e){return Array.from(e).reverse().join("")}function n(e,r,t){let n=t?"\n":"\r",a=t?"\r":"\n";if(!e)return e;let i=0,s=0,o="";for(let t=0,u=e.length;t<u;t++)(e[t]===n||e[t]===a&&e[t-1]!==n)&&s++,"\r\n".includes(e[t])||" "===e[t]?(i=0," "===e[t]?o+=e[t]:e[t]===n?s<=r&&(o+=e[t],e[t+1]===a&&(o+=e[t+1],t++)):e[t]===a&&e?.[t-1]!==n&&s<=r&&(o+=e[t])):(i++,!e[t+1]&&!s&&(o+=" "));return o}if("string"==typeof e&&e.length){let a=1;"number"==typeof+r&&Number.isInteger(+r)&&+r>=0&&(a=+r);let i="",s="";if(e.trim()){if(!e[0].trim())for(let r=0,t=e.length;r<t;r++)if(e[r].trim()){i=e.slice(0,r);break}}else i=e;if(e.trim()&&(""===e.slice(-1).trim()||" "===e.slice(-1)))for(let r=e.length;r--;)if(e[r].trim()){s=e.slice(r+1);break}return`${n(i,a,!1)}${e.trim()}${t(n(t(s),a,!0))}`}return e}var S={mergeType:1,progressFn:null,joinRangesThatTouchEdges:!0},D={limitToBeAddedWhitespace:!1,limitLinebreaksCount:1,mergeType:1},F=class{constructor(e){let r={...D,...e};if(r.mergeType&&1!==r.mergeType&&2!==r.mergeType)if(h(r.mergeType)&&"1"===r.mergeType.trim())r.mergeType=1;else{if(!h(r.mergeType)||"2"!==r.mergeType.trim())throw new Error(`ranges-push: [THROW_ID_02] opts.mergeType was customised to a wrong thing! It was given of a type: "${typeof r.mergeType}", equal to ${JSON.stringify(r.mergeType,null,4)}`);r.mergeType=2}this.opts=r,this.ranges=[]}ranges;opts;add(e,r,t){if(null==e&&null==r)return;if(y(e)&&!y(r)){if(Array.isArray(e)){if(e.length){if(e.some((e=>Array.isArray(e))))return void e.forEach((e=>{Array.isArray(e)&&this.add(...e)}));e.length&&b(+e[0])&&b(+e[1])&&this.add(...e)}return}throw new TypeError(`ranges-push/Ranges/add(): [THROW_ID_12] the first input argument, "from" is set (${JSON.stringify(e,null,0)}) but second-one, "to" is not (${JSON.stringify(r,null,0)})`)}if(!y(e)&&y(r))throw new TypeError(`ranges-push/Ranges/add(): [THROW_ID_13] the second input argument, "to" is set (${JSON.stringify(r,null,0)}) but first-one, "from" is not (${JSON.stringify(e,null,0)})`);let n=+e,a=+r;if(b(t)&&(t=String(t)),!b(n)||!b(a))throw b(n)&&n>=0?new TypeError(`ranges-push/Ranges/add(): [THROW_ID_10] "to" value, the second input argument, must be a natural number or zero! Currently it's of a type "${typeof a}" equal to: ${JSON.stringify(a,null,4)}`):new TypeError(`ranges-push/Ranges/add(): [THROW_ID_09] "from" value, the first input argument, must be a natural number or zero! Currently it's of a type "${typeof n}" equal to: ${JSON.stringify(n,null,4)}`);if(y(t)&&!h(t)&&!b(t))throw new TypeError(`ranges-push/Ranges/add(): [THROW_ID_08] The third argument, the value to add, was given not as string but ${typeof t}, equal to:\n${JSON.stringify(t,null,4)}`);if(y(this.ranges)&&Array.isArray(this.last())&&n===this.last()[1]){if(this.last()[1]=a,this.last()[2],null!==this.last()[2]&&y(t)){let e=!this.last()[2]||!this.last()[2].length||this.opts?.mergeType&&1!==this.opts.mergeType?t:`${this.last()[2]}${t}`;this.opts.limitToBeAddedWhitespace&&(e=k(e,this.opts.limitLinebreaksCount)),h(e)&&!e.length||(this.last()[2]=e)}}else{this.ranges||(this.ranges=[]);let e=void 0===t||h(t)&&!t.length?[n,a]:[n,a,t&&this.opts.limitToBeAddedWhitespace?k(t,this.opts.limitLinebreaksCount):t];this.ranges.push(e)}}push(e,r,t){this.add(e,r,t)}current(){return Array.isArray(this.ranges)&&this.ranges.length?(this.ranges=function(e,r){function t(e){return!!e&&"object"==typeof e&&!Array.isArray(e)}if(!Array.isArray(e)||!e.length)return null;let n;if(r){if(!t(r))throw new Error(`emlint: [THROW_ID_03] the second input argument must be a plain object. It was given as:\n${JSON.stringify(r,null,4)} (type ${typeof r})`);if(n={...S,...r},n.progressFn&&t(n.progressFn)&&!Object.keys(n.progressFn).length)n.progressFn=null;else if(n.progressFn&&"function"!=typeof n.progressFn)throw new Error(`ranges-merge: [THROW_ID_01] resolvedOpts.progressFn must be a function! It was given of a type: "${typeof n.progressFn}", equal to ${JSON.stringify(n.progressFn,null,4)}`);if(![1,2,"1","2"].includes(n.mergeType))throw new Error(`ranges-merge: [THROW_ID_02] resolvedOpts.mergeType was customised to a wrong thing! It was given of a type: "${typeof n.mergeType}", equal to ${JSON.stringify(n.mergeType,null,4)}`);if("boolean"!=typeof n.joinRangesThatTouchEdges)throw new Error(`ranges-merge: [THROW_ID_04] resolvedOpts.joinRangesThatTouchEdges was customised to a wrong thing! It was given of a type: "${typeof n.joinRangesThatTouchEdges}", equal to ${JSON.stringify(n.joinRangesThatTouchEdges,null,4)}`)}else n={...S};let a,i,s,o=e.filter((e=>Array.isArray(e))).map((e=>[...e])).filter((e=>void 0!==e[2]||e[0]!==e[1]));a=n.progressFn?A(o,{progressFn:e=>{s=Math.floor(e/5),s!==i&&(i=s,n.progressFn(s))}}):A(o);let u=a.length-1;for(let e=u;e>0;e--)n.progressFn&&(s=Math.floor(78*(1-e/u))+21,s!==i&&s>i&&(i=s,n.progressFn(s))),(a[e][0]<=a[e-1][0]||!n.joinRangesThatTouchEdges&&a[e][0]<a[e-1][1]||n.joinRangesThatTouchEdges&&a[e][0]<=a[e-1][1])&&(a[e-1][0]=Math.min(a[e][0],a[e-1][0]),a[e-1][1]=Math.max(a[e][1],a[e-1][1]),void 0!==a[e][2]&&(a[e-1][0]>=a[e][0]||a[e-1][1]<=a[e][1])&&null!==a[e-1][2]&&(null===a[e][2]&&null!==a[e-1][2]?a[e-1][2]=null:null!=a[e-1][2]?2==+n.mergeType&&a[e-1][0]===a[e][0]?a[e-1][2]=a[e][2]:a[e-1][2]+=a[e][2]:a[e-1][2]=a[e][2]),a.splice(e,1),e=a.length);return a.length?a:null}(this.ranges,{mergeType:this.opts.mergeType}),this.ranges&&this.opts.limitToBeAddedWhitespace?this.ranges.map((e=>y(e[2])?[e[0],e[1],k(e[2],this.opts.limitLinebreaksCount)]:e)):this.ranges):null}wipe(){this.ranges=[]}replace(e){if(Array.isArray(e)&&e.length){if(!Array.isArray(e[0])||!b(e[0][0]))throw new Error(`ranges-push/Ranges/replace(): [THROW_ID_11] Single range was given but we expected array of arrays! The first element, ${JSON.stringify(e[0],null,4)} should be an array and its first element should be an integer, a string index.`);this.ranges=Array.from(e)}else this.ranges=[]}last(){return Array.isArray(this.ranges)&&this.ranges.length?this.ranges[this.ranges.length-1]:null}},C=(d()," ");function R(e,r=0){return function({str:e,idx:r=0,stopAtNewlines:t=!1,stopAtRawNbsp:n=!1}){if("string"!=typeof e||!e.length||((!r||"number"!=typeof r)&&(r=0),!e[r+1]))return null;if(e[r+1]&&(e[r+1].trim()||t&&"\n\r".includes(e[r+1])||n&&e[r+1]===C))return r+1;if(e[r+2]&&(e[r+2].trim()||t&&"\n\r".includes(e[r+2])||n&&e[r+2]===C))return r+2;for(let a=r+1,i=e.length;a<i;a++)if(e[a].trim()||t&&"\n\r".includes(e[a])||n&&e[a]===C)return a;return null}({str:e,idx:r,stopAtNewlines:!1,stopAtRawNbsp:!1})}function L(e){return/[-_A-Za-z0-9]/.test(e)}function N(e,r){if(!e)return[];if(Array.isArray(e))return e.filter((e=>"string"==typeof e&&e.trim()));if("string"==typeof e)return e.trim()?[e]:[];throw new TypeError(`string-strip-html/stripHtml(): [THROW_ID_05] ${r} must be array containing zero or more strings or something falsey. Currently it's equal to: ${e}, that a type of ${typeof e}.`)}function B(e,r,t,n){for(let a=r,i=e.length;a<i;a++){if(e.startsWith(t,a))return!0;if(e.startsWith(n,a))return!1}return!1}function I(e,r,t){return!!e?.quotes?.value&&B(r,t+1,e.quotes.value,">"),B(r,e?.quotes?.next-1,e?.quotes?.value,">"),!e?.quotes||!B(r,t+1,e.quotes.value,">")&&-1!==e?.quotes?.next&&B(r,e?.quotes?.next-1,e?.quotes?.value,">")}function P(e,r){return(r.match(new RegExp(e,"g"))||[]).length}var _=new Set(["!doctype","abbr","address","area","article","aside","audio","base","bdi","bdo","blockquote","body","br","button","canvas","caption","cite","code","col","colgroup","data","datalist","dd","del","details","dfn","dialog","div","dl","doctype","dt","em","embed","fieldset","figcaption","figure","footer","form","h1","h2","h3","h4","h5","h6","head","header","hgroup","hr","html","iframe","img","input","ins","kbd","keygen","label","legend","li","link","main","map","mark","math","menu","menuitem","meta","meter","nav","noscript","object","ol","optgroup","option","output","param","picture","pre","progress","rb","rp","rt","rtc","ruby","samp","script","section","select","slot","small","source","span","strong","style","sub","summary","sup","svg","table","tbody","td","template","textarea","tfoot","th","thead","time","title","tr","track","ul","var","video","wbr","xml"]),H=new Set(["a","b","i","p","q","s","u"]),j=new Set([".",",",";","!","?"]),U=new Set([".",",","?",";",")","…",'"',"»"]),$=new Set(["a","abbr","acronym","audio","b","bdi","bdo","big","button","canvas","cite","code","data","datalist","del","dfn","em","embed","i","iframe","input","ins","kbd","label","map","mark","meter","noscript","object","output","picture","progress","q","ruby","s","samp","select","slot","small","span","strong","sub","sup","svg","template","textarea","time","u","tt","var","video","wbr"]),V={ignoreTags:[],ignoreTagsWithTheirContents:[],onlyStripTags:[],stripTogetherWithTheirContents:["script","style","xml"],skipHtmlDecoding:!1,trimOnlySpaces:!1,stripRecognisedHTMLOnly:!1,dumpLinkHrefsNearby:{enabled:!1,putOnNewLine:!1,wrapHeads:"",wrapTails:""},ignoreIndentations:!1,cb:null,reportProgressFunc:null,reportProgressFuncFrom:0,reportProgressFuncTo:100};function W(e,r){let t=Date.now(),n=[],a=[],i=[],s=[],o={};o={attributes:[]};let u=null,l=null,c=null,p=!1,g={},f={tagName:"",hrefValue:"",openingTagEnds:void 0},d="",b=!1,y=null,q=!0;function A(r,t,a){if(Array.isArray(t.stripTogetherWithTheirContents)&&(t.stripTogetherWithTheirContents.includes(o.name)||t.stripTogetherWithTheirContents.includes("*")))if(o.slashPresent&&Array.isArray(n)&&n.some((e=>e.name===o.name))){for(let i=n.length;i--;)if(n[i].name===o.name){s=s.filter((([e,t])=>(e<n[i].lastOpeningBracketAt||e>=r+1)&&(t<=n[i].lastOpeningBracketAt||t>r+1)));let u=r+1;o.lastClosingBracketAt&&(u=o.lastClosingBracketAt+1),s.push([n[i].lastOpeningBracketAt,u]),U.has(e[r])&&t.cb?t.cb({tag:o,deleteFrom:n[i].lastOpeningBracketAt,deleteTo:r+1,insert:null,rangesArr:a,proposedReturn:[n[i].lastOpeningBracketAt,r,null]}):t.cb&&t.cb({tag:o,deleteFrom:n[i].lastOpeningBracketAt,deleteTo:r,insert:"",rangesArr:a,proposedReturn:[n[i].lastOpeningBracketAt,r,""]}),n.splice(i,1);break}}else o.slashPresent||n.push(o);else Array.isArray(t.ignoreTagsWithTheirContents)&&S(r,t,o)&&(q=!1)}function x(r,t,n,a,i,s){if(Array.isArray(M.current())&&"number"==typeof n&&0===M.current()[0][0]&&M.current()[0][1]>=n)return"";if(e.length===a&&s&&!C?.dumpLinkHrefsNearby?.enabled)return null;let u="";if(Number.isInteger(n)&&n<i&&(u+=r.slice(n,i)),Number.isInteger(a)&&a>s+1){let t=r.slice(s+1,a);a&&!R(e,a-1)&&(t=t.trimEnd()),t.includes("\n")&&T(a,r)?u+=" ":u+=t}let l=!U.has(r[t]),c=">"!==r[a-1]||!r[n].trim(),p=!['"',"("].includes(r[i-1]),g=![";",".",":","!"].includes(r[t]);if((l||c&&p&&g)&&(c||p)&&"!"!==r[t]&&(!$.has(o.name)||"number"==typeof n&&n<i||"number"==typeof a&&a>s+1)){let e=u.match(/\n/g);return Array.isArray(e)&&e.length?1===e.length?"\n":2===e.length?"\n\n":"\n\n\n":" "}return""}function E(r,t){if(r.dumpLinkHrefsNearby?.enabled&&f.tagName&&f.tagName===o.name&&o.lastOpeningBracketAt&&(f.openingTagEnds&&o.lastOpeningBracketAt>f.openingTagEnds||!f.openingTagEnds)&&(b=!0),b){let n=r.dumpLinkHrefsNearby?.putOnNewLine?"\n\n":"";d=`${n}${f.hrefValue}`,("number"!=typeof t||R(e,t-1))&&(d+=n)}}function T(r,t){return t?"<"===t[r]&&"%"!==t[r+1]:"<"===e[r]&&"%"!==e[r+1]}function k(r){return">"===e[r]&&"%"!==e[r-1]}function S(r,t,n){if(t.ignoreTagsWithTheirContents.includes("*"))return!0;let i=e.indexOf(`<${n.name}`,r),s=e.indexOf(`</${n.name}`,r);return!(!n.slashPresent&&-1===s||n.slashPresent&&!a.some((e=>e.name===n.name))||s>-1&&i>-1&&i<s)&&t.ignoreTagsWithTheirContents.includes(n.name)}if("string"!=typeof e)throw new TypeError(`string-strip-html/stripHtml(): [THROW_ID_01] Input must be string! Currently it's: ${(typeof e).toLowerCase()}, equal to:\n${JSON.stringify(e,null,4)}`);if(r){if(!m(r))throw new TypeError(`string-strip-html/stripHtml(): [THROW_ID_02] Optional Options Object must be a plain object! Currently it's: ${(typeof r).toLowerCase()}, equal to:\n${JSON.stringify(r,null,4)}`);if(r.reportProgressFunc&&"function"!=typeof r.reportProgressFunc)throw new Error(`string-strip-html/stripHtml(): [THROW_ID_03] The Optional Options Object's key reportProgressFunc, callback function, should be a function but it was given as type ${typeof r.reportProgressFunc}, equal to ${JSON.stringify(r.reportProgressFunc,null,4)}`);if("boolean"==typeof r.dumpLinkHrefsNearby&&null!=r.dumpLinkHrefsNearby)throw new Error(`string-strip-html/stripHtml(): [THROW_ID_04] The Optional Options Object's key should be a plain object but it was given as type ${typeof r.dumpLinkHrefsNearby}, equal to ${JSON.stringify(r.dumpLinkHrefsNearby,null,4)}`)}function D(){b&&(f={tagName:"",hrefValue:"",openingTagEnds:void 0},b=!1)}let C={...V,...r,dumpLinkHrefsNearby:Object.assign({},V.dumpLinkHrefsNearby,r?.dumpLinkHrefsNearby)};if(function(e,r){return m(e)&&h(r)&&r in e}(C,"returnRangesOnly"))throw new TypeError("string-strip-html/stripHtml(): [THROW_ID_05] The Optional Options Object's key returnRangesOnly has been removed from the API since v.5 release.");if(C.reportProgressFunc){if("number"!=typeof C.reportProgressFuncFrom)throw new Error(`string-strip-html/stripHtml(): [THROW_ID_06] The Optional Options Object's key reportProgressFuncFrom, callback function's "from" range, should be a number but it was given as type ${typeof C.reportProgressFuncFrom}, equal to ${JSON.stringify(C.reportProgressFuncFrom,null,4)}`);if("number"!=typeof C.reportProgressFuncTo)throw new Error(`string-strip-html/stripHtml(): [THROW_ID_07] The Optional Options Object's key reportProgressFuncTo, callback function's "to" range, should be a number but it was given as type ${typeof C.reportProgressFuncTo}, equal to ${JSON.stringify(C.reportProgressFuncTo,null,4)}`)}C.ignoreTags=N(C.ignoreTags,"resolvedOpts.ignoreTags"),C.onlyStripTags=N(C.onlyStripTags,"resolvedOpts.onlyStripTags");let B=!!C.onlyStripTags.length;C.onlyStripTags.length&&C.ignoreTags.length&&(C.onlyStripTags=(0,v.without)(C.onlyStripTags,...C.ignoreTags)),C.stripTogetherWithTheirContents?"string"==typeof C.stripTogetherWithTheirContents&&C.stripTogetherWithTheirContents.length&&(C.stripTogetherWithTheirContents=[C.stripTogetherWithTheirContents]):C.stripTogetherWithTheirContents=[];let z={};if(C.stripTogetherWithTheirContents&&Array.isArray(C.stripTogetherWithTheirContents)&&C.stripTogetherWithTheirContents.length&&!C.stripTogetherWithTheirContents.every(((e,r)=>"string"==typeof e||(z.el=e,z.i=r,!1))))throw new TypeError(`string-strip-html/stripHtml(): [THROW_ID_08] Optional Options Object's key stripTogetherWithTheirContents was set to contain not just string elements! For example, element at index ${z.i} has a value ${z.el} which is not string but ${(typeof z.el).toLowerCase()}.`);C.cb||(C.cb=({rangesArr:e,proposedReturn:r})=>{r&&e.push(...r)});let M=new F({limitToBeAddedWhitespace:!0,limitLinebreaksCount:2});if(!C.skipHtmlDecoding)for(;e!==(0,w.decode)(e,{scope:"strict"});)e=(0,w.decode)(e,{scope:"strict"});let G=!1,J=!1,Y=0,Z=0,K=e.length,X=Math.floor(K/2);for(let r=0;r<K;r++){if(C.reportProgressFunc&&(K>1e3&&K<2e3?r===X&&C.reportProgressFunc(Math.floor((C.reportProgressFuncTo-C.reportProgressFuncFrom)/2)):K>=2e3&&(Y=C.reportProgressFuncFrom+Math.floor(r/K*(C.reportProgressFuncTo-C.reportProgressFuncFrom)),Y!==Z&&(Z=Y,C.reportProgressFunc(Y)))),Object.keys(o).length>1&&o.lastClosingBracketAt&&o.lastClosingBracketAt<r&&" "!==e[r]&&null===y&&(y=r),!G&&"%"===e[r]&&"{"===e[r-1]&&e.includes("%}",r+1)){c=null;let t=e.indexOf("%}",r)-1;if(t>r){r=t;continue}}if(!G&&k(r)&&(!o||Object.keys(o).length<2)&&r>1)for(let t=r;t--;)if(void 0===e[t-1]||k(t)){let n=void 0===e[t-1]?t:t+1,a=e.slice(n,r+1)||"";if((a.includes("/>")||a.includes("/ >")||a.includes('="')||a.includes("='"))&&e!==`<${(0,v.trim)(a.trim(),"/>")}>`&&[..._].some((e=>(0,v.trim)(a.trim().split(/\s+/).filter((e=>e.trim())).filter(((e,r)=>0===r)),"/>").toLowerCase()===e))&&""===W(`<${a.trim()}>`,C).result){(!i.length||i[i.length-1][0]!==o.lastOpeningBracketAt)&&i.push([n,r+1]),(!s.length||s[s.length-1][0]!==o.lastOpeningBracketAt)&&s.push([n,r+1]);let t=x(e,r,n,r+1,n,r+1),a=r+1;if(e[a]&&!e[a].trim())for(let r=a;r<K;r++)if(e[r].trim()){a=r;break}C.cb({tag:o,deleteFrom:n,deleteTo:a,insert:t,rangesArr:M,proposedReturn:[n,a,t]})}break}if(!J&&"/"===e[r]&&!o.quotes?.value&&Number.isInteger(o.lastOpeningBracketAt)&&!Number.isInteger(o.lastClosingBracketAt)&&(o.slashPresent=r),'"'===e[r]||"'"===e[r])if(!J&&o.nameStarts&&o?.quotes?.value===e[r])if(void 0===g.valueStarts)g={},delete o.quotes;else{let t;g.valueEnds=r,g.value=e.slice(g.valueStarts,r),o.attributes.push(g),g={},delete o.quotes,C.dumpLinkHrefsNearby?.enabled&&!n.length&&o.attributes.some((e=>{if("string"==typeof e.name&&"href"===e.name.toLowerCase())return t=`${C.dumpLinkHrefsNearby?.wrapHeads||""}${e.value}${C.dumpLinkHrefsNearby?.wrapTails||""}`,!0}))&&(f={tagName:o.name,hrefValue:t,openingTagEnds:void 0})}else!J&&!o.quotes&&o.nameStarts&&(o.quotes={},o.quotes.value=e[r],o.quotes.start=r,o.quotes.next=e.indexOf(e[r],r+1),g.nameStarts&&g.nameEnds&&g.nameEnds<r&&g.nameStarts<r&&!g.valueStarts&&(g.name=e.slice(g.nameStarts,g.nameEnds)));if(!(void 0===o.nameStarts||void 0!==o.nameEnds||e[r].trim()&&L(e[r]))){if(o.nameEnds=r,o.name=e.slice(o.nameStarts,o.nameEnds+(k(r)||"/"===e[r]||void 0!==e[r+1]?0:1)),"!"!==e[o.nameStarts-1]&&!o.name.replace(/-/g,"").length||/^\d+$/.test(o.name[0])){o={};continue}if("string"==typeof o.name&&"doctype"===o.name.toLowerCase()&&(J=!0),T(r)){E(C);let t=x(e,r,o.leftOuterWhitespace,r,o.lastOpeningBracketAt,r);(C.stripTogetherWithTheirContents.includes(o.name)||C.stripTogetherWithTheirContents.includes("*"))&&(s=s.filter((([e,t])=>!(e===o.leftOuterWhitespace&&t===r)))),C.cb({tag:o,deleteFrom:o.leftOuterWhitespace,deleteTo:r,insert:`${t}${d}${t}`,rangesArr:M,proposedReturn:[o.leftOuterWhitespace,r,`${t}${d}${t}`]}),D(),A(r,C,M)}}if(o.quotes?.start&&o.quotes.start<r&&!o.quotes.end&&g.nameEnds&&g.equalsAt&&!g.valueStarts&&(g.valueStarts=r),!o.quotes&&g.nameEnds&&"="===e[r]&&!g.valueStarts&&!g.equalsAt&&(g.equalsAt=r),!o.quotes&&g.nameStarts&&g.nameEnds&&!g.valueStarts&&e[r].trim()&&"="!==e[r]&&(o.attributes.push(g),g={}),!o.quotes&&g.nameStarts&&!g.nameEnds&&(J&&"'\"".includes(e[g.nameStarts])?g.nameStarts<r&&e[r]===e[g.nameStarts]&&(g.nameEnds=r+1,g.name=e.slice(g.nameStarts,g.nameEnds)):e[r].trim()?"="===e[r]?g.equalsAt||(g.nameEnds=r,g.equalsAt=r,g.name=e.slice(g.nameStarts,g.nameEnds)):("/"===e[r]||k(r)||T(r))&&(g.nameEnds=r,g.name=e.slice(g.nameStarts,g.nameEnds),o.attributes.push(g),g={}):(g.nameEnds=r,g.name=e.slice(g.nameStarts,g.nameEnds))),!o.quotes&&o.nameEnds<r&&!e[r-1].trim()&&e[r].trim()&&!"<>/!".includes(e[r])&&!g.nameStarts&&!o.lastClosingBracketAt&&(g.nameStarts=r),null!==o.lastOpeningBracketAt&&o.lastOpeningBracketAt<r&&"/"===e[r]&&o.onlyPlausible&&(o.onlyPlausible=!1),null!==o.lastOpeningBracketAt&&o.lastOpeningBracketAt<r&&"/"!==e[r]&&(void 0===o.onlyPlausible&&(e[r].trim()&&!T(r)||o.slashPresent?o.onlyPlausible=!1:o.onlyPlausible=!0),e[r].trim()&&void 0===o.nameStarts&&!T(r)&&"/"!==e[r]&&!k(r)&&"!"!==e[r]&&(o.nameStarts=r,o.nameContainsLetters=!1)),o.nameStarts&&!o.quotes&&"string"==typeof e[r]&&e[r].toLowerCase()!==e[r].toUpperCase()&&(o.nameContainsLetters=!0),k(r)&&(I(o,e,r)||o.quotes.value&&"number"==typeof o.lastOpeningBracketAt&&P(o.quotes.value,e.slice(o.lastOpeningBracketAt,r))%2==1&&!e.slice(o.lastOpeningBracketAt+1,r).includes("<")&&!e.slice(o.lastOpeningBracketAt+1,r).includes(">"))&&void 0!==o.lastOpeningBracketAt&&(o.lastClosingBracketAt=r,y=null,Object.keys(g).length&&(o.attributes.push(g),g={}),C.dumpLinkHrefsNearby?.enabled&&f.tagName&&!f.openingTagEnds&&(f.openingTagEnds=r)),(!J||">"===e[r])&&void 0!==o.lastOpeningBracketAt){if(void 0===o.lastClosingBracketAt){if(o.lastOpeningBracketAt<r&&!T(r)&&(void 0===e[r+1]||T(r+1)&&!o?.quotes?.value)&&o.nameContainsLetters&&"number"==typeof o.nameStarts){if(o.name=e.slice(o.nameStarts,o.nameEnds||r+1).toLowerCase(),(!i.length||i[i.length-1][0]!==o.lastOpeningBracketAt)&&i.push([o.lastOpeningBracketAt,r+1]),C.ignoreTags.includes(o.name)||S(r,C,o)||!_.has(o.name)&&(o.onlyPlausible||C.stripRecognisedHTMLOnly)){o={},g={};continue}if((_.has(o.name)||H.has(o.name))&&(!1===o.onlyPlausible||!0===o.onlyPlausible&&o.attributes.length)||void 0===e[r+1]){E(C);let t,n=x(e,r,o.leftOuterWhitespace,r+1,o.lastOpeningBracketAt,o.lastClosingBracketAt);G&&"script"===o.name&&o.slashPresent&&(G=!1),t=null===n||null===d?null:`${n}${d}${n}`,C.cb({tag:o,deleteFrom:o.leftOuterWhitespace,deleteTo:r+1,insert:t,rangesArr:M,proposedReturn:[o.leftOuterWhitespace,r+1,t]}),D(),A(r,C,M)}if(!s.length||s[s.length-1][0]!==o.lastOpeningBracketAt&&s[s.length-1][1]!==r+1)if(C.stripTogetherWithTheirContents.includes(o.name)||C.stripTogetherWithTheirContents.includes("*")){let e;for(let r=n.length;r--;)n[r].name===o.name&&(e=n[r]);e?(s=s.filter((([r])=>r!==e.lastOpeningBracketAt)),s.push([e.lastOpeningBracketAt,r+1])):s.push([o.lastOpeningBracketAt,r+1])}else s.push([o.lastOpeningBracketAt,r+1])}}else if(r>o.lastClosingBracketAt&&e[r].trim()||void 0===e[r+1]||C.ignoreIndentations&&"\r\n".includes(e[r])){let t=o.lastClosingBracketAt===r?r+1:r;C.trimOnlySpaces&&t===K-1&&null!==y&&y<r&&(t=y),(!i.length||i[i.length-1][0]!==o.lastOpeningBracketAt)&&i.push([o.lastOpeningBracketAt,o.lastClosingBracketAt+1]);let n=C.ignoreTags.includes(o.name),u=S(r,C,o);if(!q||C.stripRecognisedHTMLOnly&&"string"==typeof o.name&&!_.has(o.name.toLowerCase())&&!H.has(o.name.toLowerCase())||!B&&(n||u)||B&&!C.onlyStripTags.includes(o.name)||C.ignoreTagsWithTheirContents.includes(o.name)){if(u)if(o.slashPresent){for(let e=a.length;e--;)if(a[e].name===o.name){a.splice(e,1);break}a.length||(q=!0)}else q&&(q=!1),a.push(o);C.cb({tag:o,deleteFrom:null,deleteTo:null,insert:null,rangesArr:M,proposedReturn:null}),o={},g={}}else if(!o.onlyPlausible||0===o.attributes.length&&o.name&&(_.has(o.name.toLowerCase())||H.has(o.name.toLowerCase()))||o.attributes?.some((e=>e.equalsAt))){(!s.length||s[s.length-1][0]!==o.lastOpeningBracketAt)&&s.push([o.lastOpeningBracketAt,o.lastClosingBracketAt+1]);let n,a=x(e,r,o.leftOuterWhitespace,t,o.lastOpeningBracketAt,o.lastClosingBracketAt);d="",b=!1,E(C,t),"string"==typeof d&&d.length?(n=`${a}${d}${"\n\n"===a?"\n":a}`,t===o.lastClosingBracketAt+1&&(!e[t]||!j.has(e[t]))&&(n+=" "),o.leftOuterWhitespace===o.lastOpeningBracketAt&&M.last()&&M.last()[1]<o.lastOpeningBracketAt&&(!C?.dumpLinkHrefsNearby?.putOnNewLine||!j.has(e[t]))&&(n=" "+n)):n=a,null!==n&&(0===o.leftOuterWhitespace||!R(e,t-1))&&(!C.dumpLinkHrefsNearby?.enabled||"a"!==o.name)&&(n=void 0);let i=0;if(b&&j.has(e[t])){C.dumpLinkHrefsNearby?.putOnNewLine&&(n=`${e[t]}${n||""}`);let a=R(e,t);a&&n?.endsWith("\n")?i+=a-r:(!a||a>r)&&i++}C.cb({tag:o,deleteFrom:o.leftOuterWhitespace,deleteTo:t+i,insert:n,rangesArr:M,proposedReturn:[o.leftOuterWhitespace,t+i,n]}),D(),A(r,C,M)}else o={};k(r)||(o={})}J&&(J=!1)}if((!G||"<"===e[r]&&R(e,R(e,r))&&"/"===e[R(e,r)]&&e.startsWith("script",R(e,R(e,r))))&&T(r)&&!T(r-1)&&!"'\"".includes(e[r+1])&&(!"'\"".includes(e[r+2])||/\w/.test(e[r+1]))&&("c"!==e[r+1]||":"!==e[r+2])&&("f"!==e[r+1]||"m"!==e[r+2]||"t"!==e[r+3]||":"!==e[r+4])&&("s"!==e[r+1]||"q"!==e[r+2]||"l"!==e[r+3]||":"!==e[r+4])&&("x"!==e[r+1]||":"!==e[r+2])&&("f"!==e[r+1]||"n"!==e[r+2]||":"!==e[r+3])&&I(o,e,r)){if(k(R(e,r)))continue;if(o.nameEnds&&o.nameEnds<r&&!o.lastClosingBracketAt&&(!0===o.onlyPlausible&&o.attributes?.length||!1===o.onlyPlausible)){let t=x(e,r,o.leftOuterWhitespace,r,o.lastOpeningBracketAt,r);C.cb({tag:o,deleteFrom:o.leftOuterWhitespace,deleteTo:r,insert:t,rangesArr:M,proposedReturn:[o.leftOuterWhitespace,r,t]}),A(r,C,M),o={},g={}}if(void 0!==o.lastOpeningBracketAt&&o.onlyPlausible&&o.name&&!o.quotes&&(o.lastOpeningBracketAt=void 0,o.name=void 0,o.onlyPlausible=!1),!(void 0!==o.lastOpeningBracketAt&&o.onlyPlausible||o.quotes||(o.lastOpeningBracketAt=r,o.slashPresent=!1,o.attributes=[],null===u?o.leftOuterWhitespace=r:C.trimOnlySpaces&&0===u?o.leftOuterWhitespace=l||r:o.leftOuterWhitespace=u,"!--"!=`${e[r+1]}${e[r+2]}${e[r+3]}`&&"![CDATA["!=`${e[r+1]}${e[r+2]}${e[r+3]}${e[r+4]}${e[r+5]}${e[r+6]}${e[r+7]}${e[r+8]}`))){let t,n=!0;"-"===e[r+2]&&(n=!1);for(let a=r;a<K;a++)if((!t&&n&&"]]>"==`${e[a-2]}${e[a-1]}${e[a]}`||!n&&"--\x3e"==`${e[a-2]}${e[a-1]}${e[a]}`)&&(t=a),t&&(t<a&&e[a].trim()||void 0===e[a+1])){let n=a;(void 0===e[a+1]&&!e[a].trim()||">"===e[a])&&(n+=1),(!i.length||i[i.length-1][0]!==o.lastOpeningBracketAt)&&i.push([o.lastOpeningBracketAt,t+1]),(!s.length||s[s.length-1][0]!==o.lastOpeningBracketAt)&&s.push([o.lastOpeningBracketAt,t+1]);let u=x(e,a,o.leftOuterWhitespace,n,o.lastOpeningBracketAt,t);C.cb({tag:o,deleteFrom:o.leftOuterWhitespace,deleteTo:n,insert:u,rangesArr:M,proposedReturn:[o.leftOuterWhitespace,n,u]}),r=a-1,">"===e[a]&&(r=a),o={},g={};break}}}e[r].trim()&&847!==e[r].charCodeAt(0)?(null!==u&&(!o.quotes&&g.equalsAt>u-1&&g.nameEnds&&g.equalsAt>g.nameEnds&&'"'!==e[r]&&"'"!==e[r]&&(m(g)&&o.attributes.push(g),g={},o.equalsSpottedAt=void 0),u=null),p||(p=!0,q&&!G&&"number"==typeof c&&r&&c<r-1&&(e.slice(c+1,r).trim()?c=null:C.ignoreIndentations||M.push([c+1,r])))):(null===u&&(u=r,void 0!==o.lastOpeningBracketAt&&o.lastOpeningBracketAt<r&&o.nameStarts&&o.nameStarts<o.lastOpeningBracketAt&&r===o.lastOpeningBracketAt+1&&!n.some((e=>e.name===o.name))&&(o.onlyPlausible=!0,o.name=void 0,o.nameStarts=void 0)),("\n"===e[r]||"\r"===e[r])&&(c=r,p&&(p=!1)))," "===e[r]?null===l&&(l=r):null!==l&&(l=null),"script"===o.name&&(G=!o.slashPresent)}if(e&&!C.ignoreIndentations&&(C.trimOnlySpaces&&" "===e[0]||!C.trimOnlySpaces&&!e[0].trim()))for(let r=0;r<K;r++){if(C.trimOnlySpaces&&" "!==e[r]||!C.trimOnlySpaces&&e[r].trim()){M.push([0,r]);break}e[r+1]||M.push([0,r+1])}if(e&&(C.trimOnlySpaces&&" "===e[~-e.length]||!C.trimOnlySpaces&&!e[~-e.length].trim()))for(let r=e.length;r--;)if(C.trimOnlySpaces&&" "!==e[r]||!C.trimOnlySpaces&&e[r].trim()){M.push([r+1,K]);break}let Q=M.current();if(!r?.cb&&Q&&(Q[0]&&!Q[0][0]&&(Q[0][1],M.ranges[0]=[M.ranges[0][0],M.ranges[0][1]]),Q[Q.length-1]&&Q[Q.length-1][1]===e.length&&(Q[Q.length-1][0],M.ranges))){let r=M.ranges[M.ranges.length-1][0];e[r-1]&&(C.trimOnlySpaces&&" "===e[r-1]||!C.trimOnlySpaces&&!e[r-1].trim())&&(r-=1);let t=M.ranges[M.ranges.length-1][2];M.ranges[M.ranges.length-1]=[r,M.ranges[M.ranges.length-1][1]],t?.trim()&&M.ranges[M.ranges.length-1].push(t.trimEnd())}return{log:{timeTakenInMilliseconds:Date.now()-t},result:O(e,M.current()),ranges:M.current(),allTagLocations:i,filteredTagLocations:s}}var z=t(643);function M(e,r={}){const t={stripTags:!0,...r},{stripTags:n}=t;return(0,z.pipe)(e.title.rendered,n?e=>W(e).result:e=>e)}const G=(0,e.forwardRef)((function({attributes:r,setAttributes:t,professors:n},a){const[i,s]=(0,e.useState)(new Set(["cup-featured-professor-edit-block__select"])),{__}=(0,l.useContext)(g);return(0,e.useEffect)((()=>{const{professorFeaturedId:e}=r;CSS.supports("selector(*:has(*))")||s(e?e=>(e.delete("cup-featured-professor-edit-block__select--blank"),new Set(e)):e=>(e.add("cup-featured-professor-edit-block__select--blank"),new Set(e)))}),[r.professorFeaturedId]),(0,e.createElement)("select",{ref:a,className:Array.from(i).join(" "),onInput:function(e){t({professorFeaturedId:e.currentTarget.value})}},(0,e.createElement)("option",{className:"cup-featured-professor-edit-block__select-blank",value:""},__("Select the professor to be featured")),n.map((t=>{return(0,e.createElement)("option",{key:t.id,value:t.id,selected:(n=String(t.id),r.professorFeaturedId===n)},M(t));var n})))}));function J(){return J=Object.assign||function(e){for(var r=1;r<arguments.length;r++){var t=arguments[r];for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])}return e},J.apply(this,arguments)}function Y(e){return null==e}function Z(e){var r=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return Y(e)?r:Boolean(e)}function K(e){return"string"==typeof e}function X(e){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";return Y(e)?r:K(e)?e:String(e)}function Q(e,r){var t=X(e),n=Z(r);return""===t?"":(n&&(t=t.toLowerCase()),t.substr(0,1).toUpperCase()+t.substr(1))}function ee(e){return X(e,"").toLowerCase()}var re="\\s\\uFEFF\\xA0",te="\\uD800-\\uDBFF",ne="\\uDC00-\\uDFFF",ae="\\u0300-\\u036F\\u1AB0-\\u1AFF\\u1DC0-\\u1DFF\\u20D0-\\u20FF\\uFE20-\\uFE2F",ie="\\0-\\u02FF\\u0370-\\u1AAF\\u1B00-\\u1DBF\\u1E00-\\u20CF\\u2100-\\uD7FF\\uE000-\\uFE1F\\uFE30-\\uFFFF",se=new RegExp("(["+ie+"]|["+te+"]["+ne+"]|["+te+"](?!["+ne+"])|(?:[^"+te+"]|^)["+ne+"])(["+ae+"]+)","g"),oe=new RegExp("(["+te+"])(["+ne+"])","g"),ue=new RegExp("((?:["+ie+"]|["+te+"]["+ne+"]|["+te+"](?!["+ne+"])|(?:[^"+te+"]|^)["+ne+"])(?:["+ae+"]+))|(["+te+"]["+ne+"])|([\\n\\r\\u2028\\u2029])|(.)","g"),le=new RegExp("["+re+"]"),ce=new RegExp("^["+re+"]+"),pe=new RegExp("["+re+"]+$"),ge=new RegExp("^\\d+$"),fe=/[-[\]{}()*+!<=:?./\\^$|#,]/g,de=/[^A-Za-z0-9]/g,me=/[<>&"'`]/g,he=/(%{1,2})(?:(\d+)\$)?(\+)?([ 0]|'.{1})?(-)?(\d+)?(?:\.(\d+))?([bcdiouxXeEfgGs])?/g,be=/\.?0+$/g,ye=/<([A-Za-z0-9]+)>/g,ve="a-z\\xB5\\xDF-\\xF6\\xF8-\\xFF\\u0101\\u0103\\u0105\\u0107\\u0109\\u010B\\u010D\\u010F\\u0111\\u0113\\u0115\\u0117\\u0119\\u011B\\u011D\\u011F\\u0121\\u0123\\u0125\\u0127\\u0129\\u012B\\u012D\\u012F\\u0131\\u0133\\u0135\\u0137\\u0138\\u013A\\u013C\\u013E\\u0140\\u0142\\u0144\\u0146\\u0148\\u0149\\u014B\\u014D\\u014F\\u0151\\u0153\\u0155\\u0157\\u0159\\u015B\\u015D\\u015F\\u0161\\u0163\\u0165\\u0167\\u0169\\u016B\\u016D\\u016F\\u0171\\u0173\\u0175\\u0177\\u017A\\u017C\\u017E-\\u0180\\u0183\\u0185\\u0188\\u018C\\u018D\\u0192\\u0195\\u0199-\\u019B\\u019E\\u01A1\\u01A3\\u01A5\\u01A8\\u01AA\\u01AB\\u01AD\\u01B0\\u01B4\\u01B6\\u01B9\\u01BA\\u01BD-\\u01BF\\u01C6\\u01C9\\u01CC\\u01CE\\u01D0\\u01D2\\u01D4\\u01D6\\u01D8\\u01DA\\u01DC\\u01DD\\u01DF\\u01E1\\u01E3\\u01E5\\u01E7\\u01E9\\u01EB\\u01ED\\u01EF\\u01F0\\u01F3\\u01F5\\u01F9\\u01FB\\u01FD\\u01FF\\u0201\\u0203\\u0205\\u0207\\u0209\\u020B\\u020D\\u020F\\u0211\\u0213\\u0215\\u0217\\u0219\\u021B\\u021D\\u021F\\u0221\\u0223\\u0225\\u0227\\u0229\\u022B\\u022D\\u022F\\u0231\\u0233-\\u0239\\u023C\\u023F\\u0240\\u0242\\u0247\\u0249\\u024B\\u024D\\u024F",we="\\x41-\\x5a\\xc0-\\xd6\\xd8-\\xde\\u0100\\u0102\\u0104\\u0106\\u0108\\u010a\\u010c\\u010e\\u0110\\u0112\\u0114\\u0116\\u0118\\u011a\\u011c\\u011e\\u0120\\u0122\\u0124\\u0126\\u0128\\u012a\\u012c\\u012e\\u0130\\u0132\\u0134\\u0136\\u0139\\u013b\\u013d\\u013f\\u0141\\u0143\\u0145\\u0147\\u014a\\u014c\\u014e\\u0150\\u0152\\u0154\\u0156\\u0158\\u015a\\u015c\\u015e\\u0160\\u0162\\u0164\\u0166\\u0168\\u016a\\u016c\\u016e\\u0170\\u0172\\u0174\\u0176\\u0178\\u0179\\u017b\\u017d\\u0181\\u0182\\u0184\\u0186\\u0187\\u0189-\\u018b\\u018e-\\u0191\\u0193\\u0194\\u0196-\\u0198\\u019c\\u019d\\u019f\\u01a0\\u01a2\\u01a4\\u01a6\\u01a7\\u01a9\\u01ac\\u01ae\\u01af\\u01b1-\\u01b3\\u01b5\\u01b7\\u01b8\\u01bc\\u01c4\\u01c5\\u01c7\\u01c8\\u01ca\\u01cb\\u01cd\\u01cf\\u01d1\\u01d3\\u01d5\\u01d7\\u01d9\\u01db\\u01de\\u01e0\\u01e2\\u01e4\\u01e6\\u01e8\\u01ea\\u01ec\\u01ee\\u01f1\\u01f2\\u01f4\\u01f6-\\u01f8\\u01fa\\u01fc\\u01fe\\u0200\\u0202\\u0204\\u0206\\u0208\\u020a\\u020c\\u020e\\u0210\\u0212\\u0214\\u0216\\u0218\\u021a\\u021c\\u021e\\u0220\\u0222\\u0224\\u0226\\u0228\\u022a\\u022c\\u022e\\u0230\\u0232\\u023a\\u023b\\u023d\\u023e\\u0241\\u0243-\\u0246\\u0248\\u024a\\u024c\\u024e",qe=new RegExp("(?:["+we+"]["+ae+"]*)?(?:["+ve+"]["+ae+"]*)+|(?:["+we+"]["+ae+"]*)+(?!["+ve+"])|[\\d]+|[\\u2700-\\u27BF]|[^\\x00-\\x2F\\x3A-\\x40\\x5B-\\x60\\x7b-\\xBF\\xD7\\xF7\\u2000-\\u206F"+re+"]+","g"),Ae=/[A-Z\xC0-\xD6\xD8-\xDE]?[a-z\xDF-\xF6\xF8-\xFF]+|[A-Z\xC0-\xD6\xD8-\xDE]+(?![a-z\xDF-\xF6\xF8-\xFF])|\d+/g,xe=new RegExp("^(?:["+ve+we+"]["+ae+"]*)+$"),Ee=new RegExp("^((?:["+ve+we+"]["+ae+"]*)|[\\d])+$"),Te=/^[\x01-\xFF]*$/;function Oe(e,r){return null==e?r:e}function ke(e){return Y(e)?null:K(e)?e:String(e)}function Se(e,r,t){var n,a=X(e);if(Y(r))n=Te.test(a)?Ae:qe;else if(r instanceof RegExp)n=r;else{var i=ke(Oe(t,""));n=new RegExp(ke(r),i)}return Oe(a.match(n),[])}function De(e,r){return 0===r?ee(e):Q(e,!0)}function Fe(e){var r=X(e);return""===r?"":Se(r).map(ee).join("-")}function Ce(e,r){var t=r.toLowerCase(),n=r.toUpperCase();return e+(r===t?n:t)}function Re(e,r,t){return e<=r?r:e>=t?t:e}var Le=9007199254740991;function Ne(e){return e===1/0?Le:e===-1/0?-Le:~~e}function Be(e,r,t){var n=X(e),a=Y(r)?n.length:Re(Ne(r),0,Le),i=X(t,"...");return a>=n.length?n:n.substr(0,r-i.length)+i}function Ie(e){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return Y(e)?r:"number"==typeof e?e:Number(e)}function Pe(e,r){return e!=e?r:e}function _e(e,r){var t=X(e),n=t.length,a=Ie(r);if(!((a=Pe(a,0))<0||a>=n)){var i,s,o=t.charCodeAt(a);return(s=o)>=55296&&s<=56319&&n>a+1&&function(e){return e>=56320&&e<=57343}(i=t.charCodeAt(a+1))?function(e,r){return 1024*(e-55296)+r-56320+65536}(o,i):o}}var He=Array.prototype.reduce;function je(){this.index=0}je.prototype.increment=function(){this.index++},je.prototype.incrementOnEmptyPosition=function(e){Y(e)&&this.increment()},je.prototype.getIndexByPosition=function(e){return Y(e)?this.index:e-1};var Ue="i",$e="b",Ve="c",We="d",ze="o",Me="u",Ge="x",Je="X",Ye="e",Ze="E",Ke="f",Xe="g",Qe="G",er="s",rr="+",tr="-",nr=2,ar=8,ir=16;function sr(e,r){for(var t=X(e),n=Y(r)?1:Re(Ne(r),0,Le),a="";n;)1&n&&(a+=t),n>1&&(t+=t),n>>=1;return a}function or(e,r){return sr(e,Ne(r/e.length)+r%e.length).substr(0,r)}function ur(e,r,t){var n=X(e),a=Y(r)?0:Re(Ne(r),0,Le),i=X(t," ");return a<=n.length?n:or(i,a-n.length)+n}function lr(e,r,t){var n=X(e),a=Y(r)?0:Re(Ne(r),0,Le),i=X(t," ");return a<=n.length?n:n+or(i,a-n.length)}function cr(e,r,t){return t.signSpecifier===rr&&e>=0&&(r=rr+r),r}function pr(e,r){var t,n=parseFloat(e);isNaN(n)&&(n=0);var a=Ie(r.precision,6);switch(r.typeSpecifier){case Ke:t=n.toFixed(a);break;case Ye:t=n.toExponential(a);break;case Ze:t=n.toExponential(a).toUpperCase();break;case Xe:case Qe:t=function(e,r,t){if(0===e)return"0";var n=0===r?1:r,a=e.toPrecision(n).replace(be,"");return t.typeSpecifier===Qe&&(a=a.toUpperCase()),a}(n,a,r)}return X(t=cr(n,t,r))}function gr(e,r){var t=parseInt(e);switch(isNaN(t)&&(t=0),t>>>=0,r.typeSpecifier){case Ve:t=String.fromCharCode(t);break;case $e:t=t.toString(nr);break;case ze:t=t.toString(ar);break;case Ge:t=t.toString(ir);break;case Je:t=t.toString(ir).toUpperCase()}return X(t)}function fr(e,r){var t=parseInt(e);return isNaN(t)&&(t=0),cr(t,ke(t),r)}function dr(e,r){var t=e,n=r.precision;return!Y(n)&&t.length>n&&(t=Be(t,n,"")),t}function mr(e){this.percent=e.percent,this.signSpecifier=e.signSpecifier,this.paddingSpecifier=e.paddingSpecifier,this.alignmentSpecifier=e.alignmentSpecifier,this.width=e.width,this.precision=e.precision,this.typeSpecifier=e.typeSpecifier}function hr(e,r,t,n,a,i,s,o,u,l,c){var p=new mr({percent:n,signSpecifier:i,paddingSpecifier:s,alignmentSpecifier:o,width:Ie(u,null),precision:Ie(l,null),typeSpecifier:c});if(p.isPercentLiteral())return t.slice(1);var g=e.getIndexByPosition(a);return e.incrementOnEmptyPosition(a),function(e,r,t){if(Y(t.typeSpecifier))throw new Error("sprintf(): Unknown type specifier");if(e>r-1)throw new Error("sprintf(): Too few arguments");if(e<0)throw new Error("sprintf(): Argument number must be greater than zero")}(g,r.length,p),function(e,r){var t;switch(r.typeSpecifier){case er:t=dr;break;case We:case Ue:t=fr;break;case Ve:case $e:case ze:case Ge:case Je:case Me:t=gr;break;case Ke:case Ye:case Ze:case Xe:case Qe:t=pr}return function(e,r){var t=r.width;return Y(t)||e.length>=t?e:(r.alignmentSpecifier===tr?lr:ur)(e,t,r.getPaddingCharacter())}(t(e,r),r)}(r[g],p)}function br(e){var r=X(e);if(""===r)return r;for(var t=arguments.length,n=new Array(t>1?t-1:0),a=1;a<t;a++)n[a-1]=arguments[a];var i=hr.bind(void 0,new je,n);return r.replace(he,i)}mr.prototype.isPercentLiteral=function(){return"%%"===this.percent},mr.prototype.getPaddingCharacter=function(){var e=Oe(this.paddingSpecifier," ");return 2===e.length&&"'"===e[0]&&(e=e[1]),e};var yr={"<":"&lt;",">":"&gt;","&":"&amp;",'"':"&quot;","'":"&#x27;","`":"&#x60;"};function vr(e){return yr[e]}var wr={"<":/(&lt;)|(&#x0*3c;)|(&#0*60;)/gi,">":/(&gt;)|(&#x0*3e;)|(&#0*62;)/gi,"&":/(&amp;)|(&#x0*26;)|(&#0*38;)/gi,'"':/(&quot;)|(&#x0*22;)|(&#0*34;)/gi,"'":/(&#x0*27;)|(&#0*39;)/gi,"`":/(&#x0*60;)|(&#0*96;)/gi},qr=Object.keys(wr);function Ar(e,r){return e.replace(wr[r],r)}var xr={3:"Ξξ",8:"Θθ",A:"AÀÁÂÃÄÅĀĂĄǍǞǠǺȀȂȦȺΆΑА",B:"BƁƂɃΒБ",C:"CÇĆĈĊČƇȻЦ",D:"DĎĐƉƊƋÐΔД",E:"EÈÉÊËĒĔĖĘĚƎƐȄȆȨΈΕЕЭ",F:"FƑΦФ",G:"GĜĞĠĢƓǤǦǴΓГҐ",H:"HĤĦȞΉΗХ",I:"IÌÍÎÏĨĪĬĮİƗǏȈȊΊΙΪІИ",J:"JĴɈЙ",K:"KĶƘǨΚК",L:"LĹĻĽĿŁȽΛЛ",M:"MƜΜМ",N:"NÑŃŅŇƝǸȠΝН",O:"OÒÓÔÕÖØŌŎŐƆƟƠǑǪǬǾȌȎȪȬȮȰΌΟО",P:"PƤΠП",Q:"QɊ",R:"RŔŖŘȐȒɌΡР",S:"SŚŜŞŠȘΣС",T:"TŢŤŦƬƮȚȾΤТ",U:"UÙÚÛÜŨŪŬŮŰŲƯǓǕǗǙǛȔȖɄУЪ",V:"VƲɅВ",W:"WŴΏΩ",X:"XΧ",Y:"YÝŶŸƳȲɎΎΥΫЫ",Z:"ZŹŻŽƵȤΖЗ",a:"aàáâãäåāăąǎǟǡǻȁȃȧɐάαа",b:"bƀƃɓβб",c:"cçćĉċčƈȼц",d:"dďđƌɖɗðδд",e:"eèéêëēĕėęěǝȅȇȩɇɛέεеэ",f:"fƒφф",g:"gĝğġģǥǧǵɠγгґ",h:"hĥħȟɥήηх",i:"iìíîïĩīĭįıǐȉȋɨΐίιϊиі",j:"jĵǰɉй",k:"kķƙǩκк",l:"lĺļľŀłſƚɫλл",m:"mɯɱμм",n:"nñńņňŉƞǹɲνн",o:"oòóôõöøōŏőơǒǫǭǿȍȏȫȭȯȱɔɵοόо",p:"pƥπп",q:"qɋ",r:"rŕŗřȑȓɍɽρр",s:"sßśŝşšșȿςσс",t:"tţťŧƭțʈτт",u:"uùúûüũūŭůűųưǔǖǘǚǜȕȗʉуъ",v:"vʋʌв",w:"wŵωώ",x:"xχ",y:"yýÿŷƴȳɏΰυϋύы",z:"zźżžƶȥɀζз",OE:"Œ",oe:"œ",AE:"ÆǢǼ",ae:"æǣǽ",hv:"ƕ",OI:"Ƣ",oi:"ƣ",DZ:"ǄǱ",Dz:"ǅǲ",dz:"ǆǳ",LJ:"Ǉ",Lj:"ǈ",lj:"ǉ",NJ:"Ǌ",Nj:"ǋ",nj:"ǌ",OU:"Ȣ",ou:"ȣ",TH:"Þ",th:"þ",PS:"Ψ",ps:"ψ",Yo:"Ё",Ye:"Є",Yi:"Ї",Zh:"Ж",Ch:"Ч",Sh:"ШЩ","":"ЪЬь",Yu:"Ю",Ya:"Я",zh:"ж",ch:"ч",sh:"шщ",yu:"ю",ya:"я",yo:"ё",ye:"є",yi:"ї"},Er=null;function Tr(e){var r=(null!==Er||(Er={},Object.keys(xr).forEach((function(e){for(var r=xr[e],t=0;t<r.length;t++){var n=r[t];Er[n]=e}}))),Er)[e];return r||e}function Or(e,r){return r}function kr(e){var r=X(e);return""===r?"":r.replace(de,Tr).replace(se,Or)}function Sr(e,r){return e.length===r.length?0:e.length<r.length?1:-1}function Dr(e,r,t){var n=X(e),a=ke(r);return null!==a&&(""===a||(t=Y(t)?0:Re(Ne(t),0,n.length),-1!==n.indexOf(a,t)))}var Fr=Array.prototype.reduce;function Cr(e,r){var t=X(e);if(""===r||""===t)return t;var n=ke(r);if(Y(n))return t.replace(ce,"");var a=!0;return Fr.call(t,(function(e,r){return a&&Dr(n,r)?e:(a=!1,e+r)}),"")}var Rr=Array.prototype.reduceRight;function Lr(e,r){var t=X(e);if(""===r||""===t)return t;var n=ke(r);if(Y(n))return t.replace(pe,"");var a=!0;return Rr.call(t,(function(e,r){return a&&Dr(n,r)?e:(a=!1,r+e)}),"")}function Nr(e){var r=X(e);return xe.test(r)}function Br(e,r,t){var n=0;return(!(arguments.length>3&&void 0!==arguments[3])||arguments[3])&&(n=1-r.length),e.substr(t+n,r.length).toLowerCase()===r}function Ir(e){for(var r=0,t="",n=0;2!==r;){var a=e[n++].toLowerCase();switch(a){case"<":break;case">":r=2;break;default:le.test(a)?1===r&&(r=2):(0===r&&(r=1),"/"!==a&&(t+=a))}}return t}var Pr=null,_r=null!==Pr?Pr:Pr="object"==typeof t.g&&t.g.Object===Object?t.g:"object"==typeof self&&self.Object===Object?self:new Function("return this")(),Hr=_r.v,jr={camelCase:function(e){var r=X(e);return""===r?"":Se(r).map(De).join("")},capitalize:Q,decapitalize:function(e){var r=X(e);return""===r?"":r.substr(0,1).toLowerCase()+r.substr(1)},kebabCase:Fe,lowerCase:ee,snakeCase:function(e){var r=X(e);return""===r?"":Se(r).map(ee).join("_")},swapCase:function(e){return X(e).split("").reduce(Ce,"")},titleCase:function(e,r){var t=X(e),n=Array.isArray(r)?r:[],a=Te.test(t)?Ae:qe;return t.replace(a,(function(e,r){return r>0&&n.indexOf(t[r-1])>=0?e.toLowerCase():Q(e,!0)}))},upperCase:function(e){return X(e).toUpperCase()},count:function(e){return X(e).length},countGraphemes:function(e){return X(e).replace(se,"*").replace(oe,"*").length},countSubstrings:function(e,r){var t=X(e),n=X(r),a=n.length,i=0,s=0;if(""===t||""===n)return i;do{-1!==(s=t.indexOf(n,s))&&(i++,s+=a)}while(-1!==s);return i},countWhere:function(e,r,t){var n=X(e);if(""===n||"function"!=typeof r)return 0;var a=r.bind(t);return He.call(n,(function(e,r,t){return a(r,t,n)?e+1:e}),0)},countWords:function(e,r,t){return Se(e,r,t).length},escapeHtml:function(e){return X(e).replace(me,vr)},escapeRegExp:function(e){return X(e).replace(fe,"\\$&")},unescapeHtml:function(e){var r=X(e);return qr.reduce(Ar,r)},sprintf:br,vprintf:function(e,r){return br.apply(void 0,[e].concat(function(e){if(Array.isArray(e)){for(var r=0,t=new Array(e.length);r<e.length;r++)t[r]=e[r];return t}}(t=Oe(r,[]))||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()));var t},indexOf:function(e,r,t){return X(e).indexOf(r,t)},lastIndexOf:function(e,r,t){return X(e).lastIndexOf(r,t)},search:function(e,r,t){var n=X(e),a=Y(t)?0:Re(Ne(t),0,n.length),i=n.substr(a).search(r);return-1===i||isNaN(a)||(i+=a),i},charAt:function(e,r){return X(e).charAt(r)},codePointAt:_e,first:function(e,r){var t=X(e),n=Y(r)?1:Re(Ne(r),0,Le);return t.length<=n?t:t.substr(0,n)},graphemeAt:function(e,r){var t,n=X(e),a=Ie(r),i=0;for(a=Pe(a,0);null!==(t=ue.exec(n));){if(i===a)return ue.lastIndex=0,t[0];i++}return""},last:function(e,r){var t=X(e),n=Y(r)?1:Re(Ne(r),0,Le);return t.length<=n?t:t.substr(t.length-n,n)},prune:function(e,r,t){var n=X(e),a=Y(r)?n.length:Re(Ne(r),0,Le),i=X(t,"...");if(a>=n.length)return n;var s=Te.test(n)?Ae:qe,o=0;return n.replace(s,(function(e,r){var t=r+e.length;t<=a-i.length&&(o=t)})),n.substr(0,o)+i},slice:function(e,r,t){return X(e).slice(r,t)},substr:function(e,r,t){return X(e).substr(r,t)},substring:function(e,r,t){return X(e).substring(r,t)},truncate:Be,insert:function(e,r,t){var n=X(e),a=X(r),i=Ie(t);return i<0||i>n.length||""===a?n:n.slice(0,i)+a+n.slice(i)},latinise:kr,pad:function(e,r,t){var n=X(e),a=Y(r)?0:Re(Ne(r),0,Le),i=X(t," ");if(a<=n.length)return n;var s=a-n.length,o=Ne(s/2),u=s%2;return or(i,o)+n+or(i,o+u)},padLeft:ur,padRight:lr,repeat:sr,replace:function(e,r,t){return X(e).replace(r,t)},replaceAll:function e(r,t,n){var a=X(r);if(t instanceof RegExp){if(-1===t.flags.indexOf("g"))throw new TypeError("search argument is a non-global regular expression");return a.replace(t,n)}var i=X(t),s="function"==typeof n;s||(n=X(n));var o=i.length;if(0===o)return e(r,/(?:)/g,n);for(var u=o>1?o:1,l=[],c=a.indexOf(i,0);-1!==c;)l.push(c),c=a.indexOf(i,c+u);for(var p=0,g="",f=0;f<l.length;f++){var d=l[f],m=n;s&&(m=X(n.call(void 0,i,d,a))),g+=a.slice(p,d)+m,p=d+o}return p<a.length&&(g+=a.slice(p)),g},reverse:function(e){return X(e).split("").reverse().join("")},reverseGrapheme:function e(r){for(var t=X(r),n="",a=(t=t.replace(se,(function(r,t,n){return e(n)+t})).replace(oe,"$2$1")).length;a--;)n+=t.charAt(a);return n},slugify:function(e){var r=X(e);return""===r?"":Fe(kr(r).replace(de,"-"))},splice:function(e,r,t,n){var a=X(e),i=X(n),s=Ie(r);s<0?(s=a.length+s)<0&&(s=0):s>a.length&&(s=a.length);var o=Ie(t,a.length-s);return o<0&&(o=0),a.slice(0,s)+i+a.slice(s+o)},tr:function(e,r,t){var n,a,i,s,o=X(e);if(K(r)&&K(t))n=r.split(""),a=t.split("");else{var u=function(e){var r=Object.keys(e),t=r.sort(Sr).map((function(r){return e[r]}));return[r,t]}(Oe(r,{})),l=(s=2,function(e){if(Array.isArray(e))return e}(i=u)||function(e,r){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e)){var t=[],_n=!0,n=!1,a=void 0;try{for(var i,s=e[Symbol.iterator]();!(_n=(i=s.next()).done)&&(t.push(i.value),!r||t.length!==r);_n=!0);}catch(e){n=!0,a=e}finally{try{_n||null==s.return||s.return()}finally{if(n)throw a}}return t}}(i,s)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}());n=l[0],a=l[1]}var c=n.length;if(0===c)return o;for(var p="",g=a.length,f=0;f<o.length;f++){for(var d=!1,m=void 0,h=0;h<c&&h<g;h++){var b=n[h];if(o.substr(f,b.length)===b){d=!0,m=a[h],f=f+b.length-1;break}}p+=d?m:o[f]}return p},trim:function(e,r){var t=X(e);if(""===r||""===t)return t;var n=ke(r);return Y(n)?t.trim():Lr(Cr(t,n),n)},trimLeft:Cr,trimRight:Lr,wordWrap:function(e){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},t=X(e),n=function(e){return{width:Ie(e.width,75),newLine:X(e.newLine,"\n"),indent:X(e.indent,""),cut:Z(e.cut,!1)}}(r),a=n.width,i=n.newLine,s=n.indent,o=n.cut;if(""===t||a<=0)return s;for(var u=t.length,l=t.substring.bind(t),c=0,p="";u-c>a;)if(" "!==t[c]){var g=t.lastIndexOf(" ",a+c);g>=c?(p+=s+l(c,g)+i,c=g+1):o?(p+=s+l(c,a+c)+i,c+=a):(g=t.indexOf(" ",a+c))>=0?(p+=s+l(c,g)+i,c=g+1):(p+=s+l(c),c=u)}else c++;return c<u&&(p+=s+l(c)),p},endsWith:function(e,r,t){if(Y(r))return!1;var n=X(e),a=X(r);if(""===a)return!0;t=Y(t)?n.length:Re(Ne(t),0,n.length),t-=a.length;var i=n.indexOf(a,t);return-1!==i&&i===t},includes:Dr,isAlpha:Nr,isAlphaDigit:function(e){var r=X(e);return Ee.test(r)},isBlank:function(e){return 0===X(e).trim().length},isDigit:function(e){var r=X(e);return ge.test(r)},isEmpty:function(e){return 0===X(e).length},isLowerCase:function(e){var r=X(e);return Nr(r)&&r.toLowerCase()===r},isNumeric:function(e){var r="object"!=typeof e||Y(e)?e:Number(e);return("number"==typeof r||"string"==typeof r)&&!isNaN(r-parseFloat(r))},isString:K,isUpperCase:function(e){var r=X(e);return Nr(r)&&r.toUpperCase()===r},matches:function(e,r,t){var n,a=X(e),i=X(t);if(!(r instanceof RegExp)){if(null===(n=ke(r)))return!1;r=new RegExp(n,i)}return r.test(a)},startsWith:function(e,r,t){var n=X(e),a=ke(r);return null!==a&&(""===a||(t=Y(t)?0:Re(Ne(t),0,n.length),n.substr(t,a.length)===a))},chars:function(e){return X(e).split("")},codePoints:function(e){for(var r,t=X(e),n=t.length,a=[],i=0;i<n;)r=_e(t,i),a.push(r),i+=r>65535?2:1;return a},graphemes:function(e){return Oe(X(e).match(ue),[])},split:function(e,r,t){return X(e).split(r,t)},words:Se,stripBom:function(e){var r=X(e);return""===r?"":"\ufeff"===r[0]?r.substring(1):r},stripTags:function(e,r,t){if(""===(e=X(e)))return"";if(!Array.isArray(r)){var n=X(r);r=""===n?[]:function(e){for(var r,t=[];null!==(r=ye.exec(e));)t.push(r[1]);return t}(n)}for(var a=X(t),i=e.length,s=r.length>0,o=Br.bind(null,e),u=0,l=0,c="",p="",g=null,f=0;f<i;f++){var d=e[f],m=!1;switch(d){case"<":if(g)break;if(o("< ",f,!1)){m=!0;break}if(0===u){m=!0,u=1;break}if(1===u){l++;break}m=!0;break;case"!":if(1===u&&o("<!",f)){u=2;break}m=!0;break;case"-":if(2===u&&o("!--",f)){u=3;break}m=!0;break;case'"':case"'":1===u&&(g===d?g=null:g||(g=d)),m=!0;break;case"E":case"e":if(2===u&&o("doctype",f)){u=1;break}m=!0;break;case">":if(l>0){l--;break}if(g)break;if(1===u){if(g=null,u=0,s){var h=Ir(p+=">");-1!==r.indexOf(h.toLowerCase())?c+=p:c+=a,p=""}else c+=a;break}if(2===u||3===u&&o("--\x3e",f)){g=null,u=0,p="";break}m=!0;break;default:m=!0}if(m)switch(u){case 0:c+=d;break;case 1:s&&(p+=d)}}return c},noConflict:function(){return this===_r.v&&(_r.v=Hr),this},version:"1.4.0"};function Ur(e,r){this._wrappedValue=e,this._explicitChain=r}function $r(e){return new Ur(e,!1)}Ur.prototype.value=function(){return this._wrappedValue},Ur.prototype.valueOf=function(){return this.value()},Ur.prototype.toJSON=function(){return this.value()},Ur.prototype.toString=function(){return String(this.value())},Ur.prototype.chain=function(){return new Ur(this._wrappedValue,!0)},Ur.prototype.thru=function(e){return"function"==typeof e?new Ur(e(this._wrappedValue),this._explicitChain):this},Ur.prototype._explicitChain=!0,Object.keys(jr).forEach((function(e){var r;Ur.prototype[e]=(r=jr[e],function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];var a=r.apply(void 0,[this._wrappedValue].concat(t));return this._explicitChain||"string"==typeof a?new Ur(a,this._explicitChain):a})})),J($r,jr,{chain:function(e){return new Ur(e,!0)}});const Vr=$r;const Wr=t.p+"images/default-user-480-650.bdc37e1b.png";function zr(e,r={}){const t={defaultImg:Wr,...r},{defaultImg:n,size:a}=t,{_embedded:i}=e;try{if(!i)throw new Mr;if(0===i["wp:featuredmedia"].length)throw new Mr;const e=i["wp:featuredmedia"][0];if(!e)throw new Mr;if(!a){if(!e?.source_url)throw new Mr;return e.source_url}const r=e.media_details.sizes[a];if(!r){if(!e.source_url)throw new Mr;return e.source_url}return r.source_url}catch(e){return n}}class Mr extends Error{}function Gr({professor:r}){const{acf:t}=r,n=(0,i.useSelect)((e=>e(s.store).getEntityRecords("postType","program",{context:"view",include:t.related_programs||[]})),[(t.related_programs||[]).length,r.id]),a=(0,e.useMemo)((()=>n?(0,e.createElement)(e.Fragment,null,n.map(((r,t)=>(0,e.createElement)(e.Fragment,null,(0,e.createElement)("a",{key:r.id,href:r.link},M(r)),t!==n.length-1?", ":".")))):(0,e.createElement)(e.Fragment,null)),[n,n?.length,r.id]);return(0,e.createElement)("div",{className:"cup-featured-professor-block-display"},(0,e.createElement)("img",{className:"cup-featured-professor-block-display__image",src:zr(r,{size:"professor-portrait"}),alt:`Image of ${M(r)}`}),(0,e.createElement)("h2",{className:"cup-featured-professor-block-display__title"},M(r)),(0,e.createElement)("p",{className:"cup-featured-professor-block-display__description"},function(e,r={}){const t={stripTags:!0,trimWords:30,...r},{stripTags:n,trimWords:a}=t,i=e.excerpt&&e.excerpt.rendered?e.excerpt.rendered:e.content.rendered;return(0,z.pipe)(i,n?e=>W(e).result:e=>e,(e=>function(e,r,t="..."){const n=Vr.words(e.trim());return r>n.length?e:n.slice(0,r).join(" ").concat(t)}(e,a,"...")))}(r,{trimWords:20})),0===n?.length?"":(0,e.createElement)("p",{className:"cup-featured-professor-block-display__programs"},`${M(r)} teaches: `,null===!n?"Loading...":a),(0,e.createElement)("a",{className:"cup-featured-professor-block-display__link",href:r.link},"Learn more about ",M(r)))}class Jr{static i18n=(0,u.createI18n)((0,u.getLocaleData)("cupdomain"));attributes={professorFeaturedId:{type:"string"}};constructor(){(0,a.registerBlockType)("cetacean-university-plugin/featured-professor",{title:"Featured Professor",category:"common",description:"Feature a professor in your post.",icon:"businessperson",attributes:this.attributes,edit:this.EditComponent})}EditComponent(r){const{attributes:t}=r,{professorFeaturedId:a}=t,{editPost:u}=(0,i.useDispatch)(o.store),l=(0,i.useSelect)((e=>{const r=e(s.store).getEntityRecords("postType","professor",{per_page:-1,context:"view",_embed:!0});return r?new Map(r.map((e=>[String(e.id),e]))):null}),[]);function c(){const e=(0,i.select)(o.store).getBlocks().filter((e=>"cetacean-university-plugin/featured-professor"===e.name)).map((e=>e.attributes.professorFeaturedId)).filter((e=>e)).map((e=>e.trim())),r=new Set(e);u({meta:{featuredProfessor:Array.from(r.values())}})}return(0,e.useEffect)((()=>{c()}),[a]),n((()=>{c()})),l?(0,e.createElement)(f,{i18n:Jr.i18n},(0,e.createElement)("div",{className:"cup-featured-professor-edit-block"},(0,e.createElement)(G,{professors:Array.from(l.values()),...r}),a&&l.has(a)?(0,e.createElement)(Gr,{professor:l.get(a)}):"")):(0,e.createElement)(Jr.LoadComponent,null)}static SaveComponent(r){const{attributes:t}=r,n=(0,i.useSelect)((e=>e(s.store).getEntityRecord("postType","professor",t.professorFeaturedId,{context:"view",_embed:!0})),[]);return n?(0,e.createElement)(f,{i18n:Jr.i18n},(0,e.createElement)("div",{className:"cup-featured-professor-save-block"},(0,e.createElement)(Gr,{professor:n}))):(0,e.createElement)(Jr.LoadComponent,null)}static LoadComponent(){return(0,e.createElement)("div",{className:"cup-featured-professor-block-loading"},"Loading Professors")}}document.querySelectorAll(".cup-featured-professor-save-block-root").forEach((t=>{const n=t.querySelector("pre");if(!n)return;const a=JSON.parse(n.innerHTML);(0,r.H)(t).render((0,e.createElement)(Jr.SaveComponent,{className:"cup-featured-professor-save-block",attributes:a})),t.classList.remove("cup-featured-professor-save-block-root")}))})()})();