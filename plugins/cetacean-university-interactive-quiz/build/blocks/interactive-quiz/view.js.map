{"version":3,"file":"blocks/interactive-quiz/view.js","mappings":"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","sources":["webpack://cetacean-university-interactive-quiz/./src/utils/isEqualSet.ts","webpack://cetacean-university-interactive-quiz/external module \"@wordpress/interactivity\"","webpack://cetacean-university-interactive-quiz/webpack/bootstrap","webpack://cetacean-university-interactive-quiz/webpack/runtime/define property getters","webpack://cetacean-university-interactive-quiz/webpack/runtime/hasOwnProperty shorthand","webpack://cetacean-university-interactive-quiz/webpack/runtime/make namespace object","webpack://cetacean-university-interactive-quiz/./src/blocks/interactive-quiz/view.ts"],"sourcesContent":["\r\nexport function isEqualSet(\r\n    firstSet: Set<any>,\r\n    secondSet: Set<any>\r\n){\r\n    return firstSet.size === secondSet.size\r\n        && [...firstSet].every((value) => secondSet.has(value));\r\n}","module.exports = __WEBPACK_EXTERNAL_MODULE__wordpress_interactivity_8e89b257__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * WordPress dependencies\n */\nimport { store, getContext, useEffect } from '@wordpress/interactivity';\n\nimport { isEqualSet } from '@utils/isEqualSet';\n\nimport type { \n\tInteractiveQuizAttributesType,\n\tInteractiveQuizAnswer\n} from '.';\n\nexport type QuizContextStyles = Required<InteractiveQuizAttributesType[\"styles\"]>;\n\nexport interface InteractiveQuizAnswerInContext extends InteractiveQuizAnswer {\n\tinputId: string;\n\tisChecked: boolean;\n\tisDisabled: boolean;\n\tshowIcon: boolean;\n\twasCorrect: boolean;\n\twasWrong: boolean;\n\tshowCheckIcon: boolean;\n}\n\nexport type InteractiveQuizContext = {\n\tquestion: string,\n\tanswers: InteractiveQuizAnswer[]\n\thasBeenSubmitted: boolean,\n\tresultMessage: string,\n\thasFailed: boolean,\n\thasSucceeded: boolean,\n\tstyles: QuizContextStyles,\n};\n\nexport interface InteractiveQuizAnswerContext extends InteractiveQuizContext {\n\tanswer: InteractiveQuizAnswerInContext\n}\n\nconst { state } = store('cetacean-university-interactive-quiz', {\n\tstate: {\n\t\tquizzesCompleted: 0,\n\t},\n\tactions: {\n\t\tonInputAnswerCheck: (event: InputEvent) => {\n\t\t\tconst { answer } = getContext<InteractiveQuizAnswerContext>();\n\n\t\t\tconst input = event.target as HTMLInputElement;\n\n\t\t\tanswer.isChecked = input.checked;\n\t\t\tanswer.showIcon = input.checked;\n\t\t},\n\t\tonQuizSubmit: (event: Event) => {\n            event.preventDefault();\n\n            const context = getContext<InteractiveQuizContext>();\n\n\t\t\tconst formElement = event.target as HTMLFormElement;\n            const formData = new FormData(formElement);\n\n\t\t\tconst answersData = formData.getAll(\"interactive-quiz-answer\") as string[];\n            const checkedAnswersSet = new Set(answersData);\n\n\t\t\tconst allCorrectAnswers =  context.answers.filter(({ isCorrect }) => isCorrect).map(({ id }) => id);\n            const allCorrectAnswersSet = new Set(allCorrectAnswers);\n\t\t\t\n\t\t\tconst correctCheckedAnswers = Array.from(checkedAnswersSet).filter((id) => allCorrectAnswersSet.has(id));\n            const correctCheckedAnswersSet = new Set<string>(correctCheckedAnswers);\n\n\t\t\tconst wrongCheckedAnswers = Array.from(checkedAnswersSet).filter((id) => !allCorrectAnswersSet.has(id));\n            const wrongCheckedAnswersSet = new Set<string>(wrongCheckedAnswers);\n            \n\t\t\tif(correctCheckedAnswersSet.size === 0){\n                context.resultMessage = \"Sorry, you didn't get any answers right :(\";\n                context.hasFailed = true;\n\t\t\t\tcontext.hasBeenSubmitted = true;\n\t\t\t\t\n\t\t\t\tstate.quizzesCompleted++;\n\n                return;\n            } \n\n            if(wrongCheckedAnswersSet.size > 0){\n                context.resultMessage = `Sorry, you got ${wrongCheckedAnswersSet.size} answer(s) wrong.`;\n                context.hasFailed = true;\n\t\t\t\tcontext.hasBeenSubmitted = true;\n\n\t\t\t\tstate.quizzesCompleted++;\n\n                return;\n            }\n\n            if(isEqualSet(correctCheckedAnswersSet, allCorrectAnswersSet) && wrongCheckedAnswersSet.size == 0){\n                context.resultMessage = \"Congratulations! You got all answers right.\";\n                context.hasSucceeded = true;\n\t\t\t\tcontext.hasBeenSubmitted = true;\n\n\t\t\t\tstate.quizzesCompleted++;\n\n                return;\n            }\n\n            if(correctCheckedAnswersSet.size > 0){\n                context.resultMessage = `Congratulations! You got ${correctCheckedAnswersSet.size} answer(s) right!`;\n                context.hasSucceeded = true;\n\t\t\t\tcontext.hasBeenSubmitted = true;\n\n\t\t\t\tstate.quizzesCompleted++;\n\t\t\t\t\n                return;\n            }\n        }\n\t},\n\tcallbacks: {\n\t\treactToFormSubmit: () => {\n\t\t\tconst { answer, hasBeenSubmitted } = getContext<InteractiveQuizAnswerContext>();\n\n\t\t\tuseEffect(() => {\n\t\t\t\tif(!hasBeenSubmitted) return;\n\n\t\t\t\tanswer.isDisabled = true;\n\t\t\t\tanswer.wasCorrect = answer.isCorrect;\n\t\t\t\tanswer.wasWrong = !answer.isCorrect;\n\n\t\t\t\tanswer.showIcon = true;\n\t\t\t\tanswer.showCheckIcon = answer.wasCorrect;\n\t\t\t}, [hasBeenSubmitted, answer.isChecked, answer.isCorrect]);\n\t\t}\n\t},\n});\n"],"names":["isEqualSet","firstSet","secondSet","size","every","value","has","store","getContext","useEffect","state","quizzesCompleted","actions","onInputAnswerCheck","event","answer","input","target","isChecked","checked","showIcon","onQuizSubmit","preventDefault","context","formElement","formData","FormData","answersData","getAll","checkedAnswersSet","Set","allCorrectAnswers","answers","filter","isCorrect","map","id","allCorrectAnswersSet","correctCheckedAnswers","Array","from","correctCheckedAnswersSet","wrongCheckedAnswers","wrongCheckedAnswersSet","resultMessage","hasFailed","hasBeenSubmitted","hasSucceeded","callbacks","reactToFormSubmit","isDisabled","wasCorrect","wasWrong","showCheckIcon"],"sourceRoot":""}