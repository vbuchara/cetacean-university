{"version":3,"file":"blocks/page-banner-generic.js","mappings":"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","sources":["webpack://cetacean-university-block-theme/./src/blocks/page-banner-generic/components/control.tsx","webpack://cetacean-university-block-theme/./src/blocks/page-banner-generic/edit.tsx","webpack://cetacean-university-block-theme/./src/blocks/page-banner-generic/page-banner-generic.tsx","webpack://cetacean-university-block-theme/./src/blocks/page-banner-generic/save.tsx","webpack://cetacean-university-block-theme/./src/classes/CetaceanUniversityBlocks.ts","webpack://cetacean-university-block-theme/external window \"React\"","webpack://cetacean-university-block-theme/external window [\"wp\",\"apiFetch\"]","webpack://cetacean-university-block-theme/external window [\"wp\",\"blockEditor\"]","webpack://cetacean-university-block-theme/external window [\"wp\",\"blocks\"]","webpack://cetacean-university-block-theme/external window [\"wp\",\"components\"]","webpack://cetacean-university-block-theme/external window [\"wp\",\"data\"]","webpack://cetacean-university-block-theme/webpack/bootstrap","webpack://cetacean-university-block-theme/webpack/runtime/compat get default export","webpack://cetacean-university-block-theme/webpack/runtime/define property getters","webpack://cetacean-university-block-theme/webpack/runtime/hasOwnProperty shorthand","webpack://cetacean-university-block-theme/webpack/runtime/make namespace object","webpack://cetacean-university-block-theme/./src/blocks/page-banner-generic/index.ts"],"sourcesContent":["import { \r\n    InspectorControls,\r\n    MediaUpload, \r\n    MediaUploadCheck\r\n} from \"@wordpress/block-editor\";\r\nimport { \r\n    Button, \r\n    Flex, \r\n    PanelBody, \r\n    PanelRow \r\n} from \"@wordpress/components\";\r\n\r\nimport type { PageBannerGenericEditComponentProps } from \"../edit\";\r\n\r\nexport type PageBannerGenericInspectorControlsProps = Pick<\r\n    PageBannerGenericEditComponentProps,\r\n    'attributes' | 'setAttributes'\r\n>;\r\n\r\nexport function PageBannerGenericInspectorControls({\r\n    attributes,\r\n    setAttributes\r\n}: PageBannerGenericInspectorControlsProps){\r\n    function onSelectMedia(media: MediaUpload.MediaSelected) {\r\n        setAttributes({\r\n            bannerImageId: media.id\r\n        });\r\n    }\r\n\r\n    function onClickSetToDefault(){\r\n        setAttributes({\r\n            bannerImageId: 0\r\n        });\r\n    }\r\n\r\n    return (\r\n    <InspectorControls>\r\n        <PanelBody\r\n            title='Background Image'\r\n            initialOpen={true}\r\n        >\r\n            <PanelRow>\r\n                <Flex justify='flex-start'>\r\n                    <MediaUploadCheck>\r\n                        <MediaUpload\r\n                            onSelect={onSelectMedia}\r\n                            value={attributes.bannerImageId}\r\n                            render={({ open }) => (\r\n                            <>\r\n                                <Button variant='primary' onClick={open}>\r\n                                    Choose Image\r\n                                </Button>\r\n                                <Button variant='secondary' onClick={onClickSetToDefault}>\r\n                                    Set to Default\r\n                                </Button>\r\n                            </>\r\n                            )}\r\n                        />\r\n                    </MediaUploadCheck>\r\n                </Flex>\r\n            </PanelRow>\r\n        </PanelBody>\r\n    </InspectorControls>\r\n    );\r\n};","\r\nimport { useEffect, useMemo, useRef, useState } from \"react\";\r\nimport apiFetch from \"@wordpress/api-fetch\";\r\nimport { BlockInstance, type BlockEditProps } from \"@wordpress/blocks\";\r\nimport { \r\n    ButtonBlockAppender,\r\n    InnerBlocks,\r\n    store as blockEditorStore\r\n} from \"@wordpress/block-editor\";\r\nimport { useDispatch, useSelect } from \"@wordpress/data\";\r\nimport type { WpFeaturedmedia } from \"wordpress-types\";\r\n\r\nimport { CetaceanUniversityBlocks } from \"@src/classes/CetaceanUniversityBlocks\";\r\n\r\nimport { PageBannerGenericInspectorControls } from \"./components/control\";\r\n\r\nimport type { PageBannerGenericAttributeType } from \"./page-banner-generic\";\r\n\r\nexport type PageBannerGenericEditComponentProps = BlockEditProps<PageBannerGenericAttributeType>;\r\n\r\nexport function EditComponent(props: PageBannerGenericEditComponentProps){\r\n    const { attributes, setAttributes, clientId } = props;\r\n\r\n    const defaultBannerImage = CetaceanUniversityPageBannerGenericData.theme_path + \"/images/ocean.jpg\";\r\n\r\n    const [bannerImage, setBannerImage] = useState(\"\");\r\n\r\n    const previousInnerBlocksIds = useRef(new Set<string>());\r\n\r\n    const { removeBlock } = useDispatch(blockEditorStore);\r\n    const { innerBlocks } = useSelect((select) => {\r\n        const { \r\n            getBlocks,\r\n        } = select(blockEditorStore);\r\n        return {\r\n            innerBlocks: getBlocks(clientId)\r\n        };\r\n    }, [clientId]);\r\n    const innerBlocksDependency = innerBlocks.reduce((result, { clientId }) => result + clientId, \"\");\r\n\r\n    const pageBannerTitleBlocksCount = useMemo(() => {\r\n        function countPageBannerTitleBlocks(count: number, { name }: BlockInstance ){\r\n            return name === CetaceanUniversityBlocks.PageBannerTitle ? count + 1 : count;\r\n        }\r\n\r\n        return innerBlocks.reduce(countPageBannerTitleBlocks, 0);\r\n    }, [innerBlocksDependency]);\r\n\r\n    const pageBannerSubtitleBlocksCount = useMemo(() => {\r\n        function countPageBannerSubtitleBlocks(count: number, { name }: BlockInstance ){\r\n            return name === CetaceanUniversityBlocks.PageBannerSubtitle ? count + 1 : count;\r\n        }\r\n\r\n        return innerBlocks.reduce(countPageBannerSubtitleBlocks, 0);\r\n    }, [innerBlocksDependency]);\r\n\r\n    async function validadeBlocks(){\r\n        const previousBlocksIds = previousInnerBlocksIds.current;\r\n        const hasMoreThanOneTitleOrSubtitle = (pageBannerTitleBlocksCount > 1 || pageBannerSubtitleBlocksCount > 1);\r\n\r\n        if(previousBlocksIds.size > 0 && hasMoreThanOneTitleOrSubtitle){\r\n            const promises = innerBlocks.map(async(block) => {\r\n                if(!previousBlocksIds.has(block.clientId)){\r\n                    await removeBlock(block.clientId);\r\n                    alert(\"You can only have 1 Title and 1 Subtitle in the Page Banner Generic block.\");\r\n                }\r\n            });\r\n\r\n            await Promise.all(promises);\r\n        }\r\n\r\n        innerBlocks.forEach(({ clientId }) => previousBlocksIds.add(clientId));\r\n    }\r\n\r\n    const RenderAppender = useMemo(() => {\r\n        const hasOneOrMoreTitleAndSubtitle = pageBannerTitleBlocksCount >= 1 && pageBannerSubtitleBlocksCount >= 1;\r\n\r\n        return () => hasOneOrMoreTitleAndSubtitle ? null : (\r\n        <ButtonBlockAppender\r\n            rootClientId={clientId}\r\n            className=\"block-list-appender__toggle block-editor-button-block-appender\"\r\n        />\r\n        );\r\n    }, [clientId, innerBlocksDependency, pageBannerTitleBlocksCount, pageBannerSubtitleBlocksCount]);\r\n\r\n    useEffect(() => {\r\n        if(!attributes.bannerImageId){\r\n            setBannerImage(defaultBannerImage);\r\n            return;\r\n        }\r\n\r\n        (async() => {\r\n            try{\r\n                const { source_url, media_details } = await apiFetch<WpFeaturedmedia>({ \r\n                    path: `/wp/v2/media/${attributes.bannerImageId}` \r\n                });\r\n                const pageBannerSize = media_details.sizes['page-banner'];  \r\n   \r\n                if(!pageBannerSize && !source_url) throw new Error(\"No image found.\");\r\n                if(!pageBannerSize) return setBannerImage(source_url);\r\n                \r\n                setBannerImage(pageBannerSize.source_url);\r\n            } catch(error){\r\n                setBannerImage(defaultBannerImage);\r\n                console.error(error);\r\n            }\r\n        })();\r\n    }, [attributes.bannerImageId, defaultBannerImage]);\r\n\r\n    useEffect(() => {\r\n        validadeBlocks();\r\n    }, [innerBlocksDependency, pageBannerTitleBlocksCount, pageBannerSubtitleBlocksCount]);\r\n\r\n    return (\r\n    <>\r\n        <PageBannerGenericInspectorControls\r\n            attributes={attributes}\r\n            setAttributes={setAttributes}\r\n        />\r\n        <div className=\"page-banner\">\r\n            <div \r\n                className=\"page-banner__bg-image\" \r\n                style={{\r\n                    \"--bg-image\": `url(${bannerImage})`\r\n                }}\r\n                >\r\n            </div>\r\n            <div className=\"page-banner__content container container--narrow\">\r\n                <InnerBlocks\r\n                    allowedBlocks={[\r\n                        CetaceanUniversityBlocks.PageBannerTitle,\r\n                        CetaceanUniversityBlocks.PageBannerSubtitle\r\n                    ]}\r\n                    template={[\r\n                        [CetaceanUniversityBlocks.PageBannerTitle],\r\n                        [CetaceanUniversityBlocks.PageBannerSubtitle]\r\n                    ]}\r\n                    renderAppender={RenderAppender}\r\n                />\r\n            </div>\r\n        </div>\r\n    </>\r\n    );\r\n}","import { registerBlockType } from \"@wordpress/blocks\";\r\n\r\nimport { CetaceanUniversityBlocks } from \"@src/classes/CetaceanUniversityBlocks\";\r\n\r\nimport { EditComponent } from \"./edit\";\r\nimport { SaveComponent } from \"./save\";\r\n\r\nexport type PageBannerGenericAttributeType = {\r\n    bannerImageId: number;\r\n};\r\n\r\nregisterBlockType<PageBannerGenericAttributeType>(CetaceanUniversityBlocks.PageBannerGeneric, {\r\n    title: \"Page Banner Generic\",\r\n    category: CetaceanUniversityBlocks.BlockCategory,\r\n    icon: \"cover-image\",\r\n    attributes: {\r\n        bannerImageId: {\r\n            type: \"number\",\r\n            default: 0\r\n        },\r\n    },\r\n    edit: EditComponent,\r\n    save: SaveComponent\r\n});","\r\n\r\nimport { type BlockSaveProps } from \"@wordpress/blocks\";\r\nimport { InnerBlocks } from \"@wordpress/block-editor\";\r\n\r\nimport type { PageBannerGenericAttributeType } from \"./page-banner-generic\";\r\n\r\nexport type PageBannerGenericSaveComponentProps = BlockSaveProps<PageBannerGenericAttributeType>;\r\n\r\nexport function SaveComponent(props: PageBannerGenericSaveComponentProps){\r\n    return (<InnerBlocks.Content/>);\r\n}","export class CetaceanUniversityBlocks{\r\n    public static readonly DomainName = \"cetacean-university-theme\" as const;\r\n    public static readonly Banner = `${this.DomainName}/banner` as const;\r\n    public static readonly Heading = `${this.DomainName}/heading` as const;\r\n    public static readonly Button = `${this.DomainName}/button` as const;\r\n    public static readonly EventsAndPosts = `${this.DomainName}/events-and-posts` as const;\r\n    public static readonly Header = `${this.DomainName}/header` as const;\r\n    public static readonly Footer = `${this.DomainName}/footer` as const;\r\n    public static readonly Menu = `${this.DomainName}/menu` as const;\r\n    public static readonly Slider = `${this.DomainName}/slider` as const;\r\n    public static readonly Slide = `${this.DomainName}/slide` as const;\r\n\r\n    public static readonly PageBannerTitle = `${this.DomainName}/page-banner-title` as const;\r\n    public static readonly PageBannerSubtitle = `${this.DomainName}/page-banner-subtitle` as const;\r\n    public static readonly PageBannerGeneric = `${this.DomainName}/page-banner-generic` as const;\r\n\r\n    public static readonly PostBanner = `${this.DomainName}/post-banner` as const;\r\n    public static readonly PostContent = `${this.DomainName}/post-content` as const;\r\n    public static readonly BlogPosts = `${this.DomainName}/blog-posts` as const;\r\n    \r\n    public static readonly PageBanner = `${this.DomainName}/page-banner` as const;\r\n    public static readonly PageContent = `${this.DomainName}/page-content` as const;\r\n\r\n    public static readonly UpcomingEvents = `${this.DomainName}/upcoming-events` as const;\r\n    public static readonly AllPrograms = `${this.DomainName}/all-programs` as const;\r\n    public static readonly CampusesMap = `${this.DomainName}/campuses-map` as const;\r\n\r\n    public static readonly BlockCategory = \"cetacean-university\" as const;\r\n};","module.exports = window[\"React\"];","module.exports = window[\"wp\"][\"apiFetch\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"data\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export * from \"./page-banner-generic\";"],"names":["InspectorControls","MediaUpload","MediaUploadCheck","Button","Flex","PanelBody","PanelRow","PageBannerGenericInspectorControls","attributes","setAttributes","onSelectMedia","media","bannerImageId","id","onClickSetToDefault","createElement","title","initialOpen","justify","onSelect","value","render","open","Fragment","variant","onClick","useEffect","useMemo","useRef","useState","apiFetch","ButtonBlockAppender","InnerBlocks","store","blockEditorStore","useDispatch","useSelect","CetaceanUniversityBlocks","EditComponent","props","clientId","defaultBannerImage","CetaceanUniversityPageBannerGenericData","theme_path","bannerImage","setBannerImage","previousInnerBlocksIds","Set","removeBlock","innerBlocks","select","getBlocks","innerBlocksDependency","reduce","result","pageBannerTitleBlocksCount","countPageBannerTitleBlocks","count","name","PageBannerTitle","pageBannerSubtitleBlocksCount","countPageBannerSubtitleBlocks","PageBannerSubtitle","validadeBlocks","previousBlocksIds","current","hasMoreThanOneTitleOrSubtitle","size","promises","map","block","has","alert","Promise","all","forEach","add","RenderAppender","hasOneOrMoreTitleAndSubtitle","rootClientId","className","source_url","media_details","path","pageBannerSize","sizes","Error","error","console","style","allowedBlocks","template","renderAppender","registerBlockType","SaveComponent","PageBannerGeneric","category","BlockCategory","icon","type","default","edit","save","Content","DomainName","Banner","Heading","EventsAndPosts","Header","Footer","Menu","Slider","Slide","PostBanner","PostContent","BlogPosts","PageBanner","PageContent","UpcomingEvents","AllPrograms","CampusesMap"],"sourceRoot":""}